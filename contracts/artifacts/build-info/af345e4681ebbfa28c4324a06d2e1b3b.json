{
	"id": "af345e4681ebbfa28c4324a06d2e1b3b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\n\ncontract SenseiStaking is Ownable, Pausable {\n    // Address of the token for the staking.\n    IERC20 public acceptedToken;\n    \n    // Struc with user details.\n    struct _user {\n        uint256 balance;\n        uint256 timeStarted;\n        uint256 timeFinish;\n    }    \n\n    // APY for each class.\n    uint256 public level0APY =  2700;\n    uint256 public level1APY = 3700;\n    uint256 public vipLevelAPY = 4800;  \n\n    // Min - Max for each Level\n    uint256 public level0Min = 50 * 10**18;\n    uint256 public level0Max = 500000000 * 10**18;\n    uint256 public level1Min = 100 * 10**18;\n    uint256 public level1Max = 500000000 * 10**18;\n    uint256 public levelVipMin = 200 * 10**18;\n    uint256 public levelVipMax = 2500000000 * 10**18;\n    \n    // reserve wallet\n    address public reserveWallet;\n    \n    // Mapping for user details of  each class.\n    mapping (address => bool) public isLevel0;\n    mapping (address => _user) public level0Balance;\n    mapping (address => bool) public isLevel1;\n    mapping (address => _user) public level1Balance;\n    mapping (address => bool) public isVip;\n    mapping (address => _user) public vipBalance;  \n\n    // Events.\n    event deposit (address user, uint8 class, uint256 amount, uint256 timeStart, uint256 timeEnd);\n    event withdraw (address user, uint8 class, bool onTime, uint256 amount, uint256 earnings);\n \n    // Set the token to be staked.\n    constructor(address _token , address _reserveWallet) {\n        acceptedToken = IERC20(_token);\n        reserveWallet = _reserveWallet;       \n    }   \n    \n    // Pause and Unpause the contract\n    function pause () public onlyOwner {\n        _pause();\n    }\n    \n    function unpause () public onlyOwner {\n        _unpause();\n    } \n\n    /**\n    * @dev Change Reserve Wallet.   \n    */\n\n    function setReserveWallet (address _reserveWallet) external onlyOwner{\n        reserveWallet = _reserveWallet;   \n    }\n\n    /**\n    * @dev Change APY for all categories.   \n    */\n\n    function setNewAPY ( uint256 _level0APY, uint256 _level1APY, uint256 _vipLevelAPY) external onlyOwner{\n        level0APY = _level0APY;\n        level1APY = _level1APY;\n        vipLevelAPY = _vipLevelAPY;\n    }\n\n    /**\n    * @dev Change max and min values for all categories.   \n    */\n\n    function setNewMaxMin (uint256 _level0Min, uint256 _level0Max, uint256 _level1Min, uint256 _level1Max, uint256 _levelVipMin, uint256 _levelVipMax) external onlyOwner{\n        level0Min = _level0Min;\n        level0Max = _level0Max;\n        level1Min = _level1Min;\n        level1Max = _level1Max;\n        levelVipMin = _levelVipMin;\n        levelVipMax = _levelVipMax;\n    }\n\n    /**\n    * @dev Join to a staking class.\n    *\n    * Requirements:\n    *  \n    * - User has not enter the staking class previously. \n    */\n    function enterLevel0 (uint256 _amount) public whenNotPaused {\n        require(_amount <= level0Max && _amount >= level0Min, \"Amount needs to be more than min and less than max\");\n        address _msgSender = msg.sender;     \n        require(!isLevel0[_msgSender], \"You're already in this Stake level\");    \n\n        acceptedToken.transferFrom(_msgSender, address(this), _amount);\n\n        isLevel0[_msgSender] = true;\n        level0Balance[_msgSender] = _user ({\n            balance: _amount,\n            timeStarted: block.timestamp,\n            timeFinish: block.timestamp + 7 days\n        });         \n\n        emit deposit (_msgSender, 0, _amount, block.timestamp, block.timestamp + 7 days);\n    }\n    \n    /**\n    * @dev Join to a staking class.\n    *\n    * Requirements:\n    *   \n    * - User has not enter the staking class previously.   \n    */\n    function enterLevel1 (uint256 _amount) public whenNotPaused {\n        require(_amount <= level1Max && _amount >= level1Min, \"Amount needs to be more than min and less than max\");\n        address _msgSender = msg.sender;  \n        require(!isLevel1[_msgSender], \"You're already in this Stake level\");      \n\n        acceptedToken.transferFrom(_msgSender, address(this), _amount);\n\n        isLevel1[_msgSender] = true;\n        level1Balance[_msgSender] = _user ({\n           balance: _amount,\n           timeStarted: block.timestamp,\n           timeFinish: block.timestamp + 30 days\n        });\n    \n        emit deposit (_msgSender, 1, _amount, block.timestamp, block.timestamp + 30 days);\n    }\n\n    /**\n    * @dev Join to a staking class.\n    *\n    * Requirements:\n    *\n    * - _amount must be greather than enter fee.\n    * - User has not enter the staking class previously.    \n    */\n    function enterVip (uint256 _amount) public whenNotPaused {\n        require(_amount <= levelVipMax && _amount >= levelVipMin, \"Amount needs to be more than min and less than max\");\n        address _msgSender = msg.sender;             \n        require(!isVip[_msgSender], \"You're already in the Vip Stake\");        \n\n        acceptedToken.transferFrom(_msgSender, address(this), _amount);\n\n        isVip[_msgSender] = true;\n        vipBalance[_msgSender] = _user ({\n           balance: _amount,\n           timeStarted: block.timestamp,\n           timeFinish: block.timestamp + 90 days\n        });       \n\n        emit deposit (_msgSender, 2, _amount, block.timestamp, block.timestamp + 90 days);\n    }\n\n \n    /**\n    * @dev Checks if the staking has reached the timeFinish limit.\n    *\n    * classes :0 - level 0, 1 - level 1, 2 - Vip\n    */\n    function isOnTime (address user, uint8 class) public view returns (bool) {\n        uint256 releaseTime;\n        if(class == 0){\n            releaseTime = level0Balance[user].timeFinish;           \n        } else if (class == 1){\n            releaseTime = level1Balance[user].timeFinish;         \n        } else if (class == 2){\n            releaseTime = vipBalance[user].timeFinish;           \n        } else {\n            return false;\n        }\n        return block.timestamp >= releaseTime;\n    }\n \n\n    /**\n    * @dev Get interest earned during the staking time.\n    *\n    * classes : 0 - level 0, 1 - level 1, 2 - Vip\n    */\n    function getInterest (address user, uint8 class, uint256 balance) public view returns (uint256){\n        if(class == 0){           \n            uint256 _timeStarted = level0Balance[user].timeStarted;\n\n            return calculateInterest(balance,_timeStarted, level0APY);\n        } else if (class == 1){      \n            uint256 _timeStarted = level1Balance[user].timeStarted;\n\n            return calculateInterest(balance,_timeStarted, level1APY);\n        } else if (class == 2){           \n            uint256 _timeStarted = vipBalance[user].timeStarted;\n\n            return calculateInterest(balance,_timeStarted, vipLevelAPY);\n        } else {\n            return 0;\n        }\n    }\n\n    function calculateInterest (uint256 _balance, uint256 _timeStarted, uint256 _APY) internal view returns (uint256){\n        uint256 timeStaked = block.timestamp - _timeStarted;\n       \n        uint256 interestPerSecond = ((_balance * _APY) / 10000) / 365 days;\n        uint256 interestsEarned = timeStaked * interestPerSecond;\n\n        return interestsEarned;\n    }\n\n    /**\n    * @dev Withdraw from a staking class.\n    *\n    * Requirements:\n    *\n    * - Msg.sender should have an active deposit in the class.\n    */\n    function withdrawLevel0 (uint256 _amount) public  {\n        address _msgSender = msg.sender;\n        require(isLevel0[_msgSender], \"User is not on Level 0\");\n\n        uint256 balance = level0Balance[_msgSender].balance;\n        require(balance >= _amount, \"Not enough balance to withdraw\");\n\n        bool _isOnTime = isOnTime(_msgSender, 0);\n        uint256 earnings = getInterest(_msgSender, 0, _amount);\n\n        if(_amount == balance){\n            delete level0Balance[_msgSender];      \n            isLevel0[_msgSender] = false;\n        } else {\n            level0Balance[_msgSender].balance -= _amount;\n        }\n\n        if(_isOnTime){\n            acceptedToken.transfer(_msgSender, _amount);\n            acceptedToken.transferFrom(reserveWallet, _msgSender, earnings);\n        } else {\n            earnings = 0;       \n            acceptedToken.transfer(_msgSender, _amount);           \n        }\n    \n        emit withdraw(_msgSender, 0, _isOnTime, _amount, earnings);\n    }\n\n    /**\n    * @dev Withdraw from a staking class.\n    *\n    * Requirements:\n    *\n    * - Msg.sender should have an active deposit in the class.\n    */\n    function withdrawLevel1 (uint256 _amount) public  {\n        address _msgSender = msg.sender;\n        require(isLevel1[_msgSender], \"User is not on Level 1\");\n\n        uint256 balance = level1Balance[_msgSender].balance;\n        require(balance >= _amount, \"Not enough balance to withdraw\");\n\n        bool _isOnTime = isOnTime(_msgSender, 1);\n        uint256 earnings = getInterest(_msgSender, 1, _amount);\n\n        if(_amount == balance){\n            delete level1Balance[_msgSender];      \n            isLevel1[_msgSender] = false;\n        } else {\n            level1Balance[_msgSender].balance -= _amount;\n        }\n\n        if(_isOnTime){\n            acceptedToken.transfer(_msgSender, _amount);\n            acceptedToken.transferFrom(reserveWallet, _msgSender, earnings);\n        } else {\n            earnings = 0;         \n            acceptedToken.transfer(_msgSender, _amount);           \n        }\n\n        emit withdraw(_msgSender, 1, _isOnTime, _amount, earnings);\n    }\n\n    /**\n    * @dev Withdraw from a staking class.\n    *\n    * Requirements:\n    *\n    * - Msg.sender should have an active deposit in the class.\n    */\n    function withdrawVip (uint256 _amount) public  {\n        address _msgSender = msg.sender;\n        require(isVip[_msgSender], \"User is not Vip\");\n    \n        uint256 balance = vipBalance[_msgSender].balance;\n        require(balance >= _amount, \"Not enough balance to withdraw\");\n\n        bool _isOnTime = isOnTime(_msgSender, 2);\n        uint256 earnings = getInterest(_msgSender, 2, _amount);\n\n        if(_amount == balance){\n            delete vipBalance[_msgSender];     \n            isVip[_msgSender] = false;\n        } else {\n            vipBalance[_msgSender].balance -= _amount;\n        }\n\n        if(_isOnTime){\n            acceptedToken.transfer(_msgSender, _amount);\n            acceptedToken.transferFrom(reserveWallet, _msgSender, earnings);\n        } else {\n            earnings = 0;           \n            acceptedToken.transfer(_msgSender, _amount);           \n        }\n\n        emit withdraw(_msgSender, 2, _isOnTime, _amount, earnings);\n    }  \n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking.sol": {
				"SenseiStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_reserveWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "class",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timeStart",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timeEnd",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "class",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "onTime",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "earnings",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptedToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterLevel0",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterLevel1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterVip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "class",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"name": "getInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isLevel0",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isLevel1",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "class",
									"type": "uint8"
								}
							],
							"name": "isOnTime",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isVip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level0APY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "level0Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeStarted",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeFinish",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level0Max",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level0Min",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level1APY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "level1Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeStarted",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeFinish",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level1Max",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level1Min",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "levelVipMax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "levelVipMin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level0APY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level1APY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_vipLevelAPY",
									"type": "uint256"
								}
							],
							"name": "setNewAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level0Min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level0Max",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level1Min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level1Max",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_levelVipMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_levelVipMax",
									"type": "uint256"
								}
							],
							"name": "setNewMaxMin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_reserveWallet",
									"type": "address"
								}
							],
							"name": "setReserveWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vipBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeStarted",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeFinish",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vipLevelAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawLevel0",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawLevel1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawVip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"enterLevel0(uint256)": {
								"details": "Join to a staking class. Requirements:   - User has not enter the staking class previously. "
							},
							"enterLevel1(uint256)": {
								"details": "Join to a staking class. Requirements:    - User has not enter the staking class previously.   "
							},
							"enterVip(uint256)": {
								"details": "Join to a staking class. Requirements: - _amount must be greather than enter fee. - User has not enter the staking class previously.    "
							},
							"getInterest(address,uint8,uint256)": {
								"details": "Get interest earned during the staking time. classes : 0 - level 0, 1 - level 1, 2 - Vip"
							},
							"isOnTime(address,uint8)": {
								"details": "Checks if the staking has reached the timeFinish limit. classes :0 - level 0, 1 - level 1, 2 - Vip"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setNewAPY(uint256,uint256,uint256)": {
								"details": "Change APY for all categories.   "
							},
							"setNewMaxMin(uint256,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Change max and min values for all categories.   "
							},
							"setReserveWallet(address)": {
								"details": "Change Reserve Wallet.   "
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawLevel0(uint256)": {
								"details": "Withdraw from a staking class. Requirements: - Msg.sender should have an active deposit in the class."
							},
							"withdrawLevel1(uint256)": {
								"details": "Withdraw from a staking class. Requirements: - Msg.sender should have an active deposit in the class."
							},
							"withdrawVip(uint256)": {
								"details": "Withdraw from a staking class. Requirements: - Msg.sender should have an active deposit in the class."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking.sol\":225:10700  contract SenseiStaking is Ownable, Pausable {... */\n  mstore(0x40, 0x80)\n    /* \"staking.sol\":557:561  2700 */\n  0x0a8c\n    /* \"staking.sol\":529:561  uint256 public level0APY =  2700 */\n  0x02\n  sstore\n    /* \"staking.sol\":594:598  3700 */\n  0x0e74\n    /* \"staking.sol\":567:598  uint256 public level1APY = 3700 */\n  0x03\n  sstore\n    /* \"staking.sol\":633:637  4800 */\n  0x12c0\n    /* \"staking.sol\":604:637  uint256 public vipLevelAPY = 4800 */\n  0x04\n  sstore\n    /* \"staking.sol\":705:716  50 * 10**18 */\n  0x02b5e3af16b1880000\n    /* \"staking.sol\":678:716  uint256 public level0Min = 50 * 10**18 */\n  0x05\n  sstore\n    /* \"staking.sol\":749:767  500000000 * 10**18 */\n  0x019d971e4fe8401e74000000\n    /* \"staking.sol\":722:767  uint256 public level0Max = 500000000 * 10**18 */\n  0x06\n  sstore\n    /* \"staking.sol\":800:812  100 * 10**18 */\n  0x056bc75e2d63100000\n    /* \"staking.sol\":773:812  uint256 public level1Min = 100 * 10**18 */\n  0x07\n  sstore\n    /* \"staking.sol\":845:863  500000000 * 10**18 */\n  0x019d971e4fe8401e74000000\n    /* \"staking.sol\":818:863  uint256 public level1Max = 500000000 * 10**18 */\n  0x08\n  sstore\n    /* \"staking.sol\":898:910  200 * 10**18 */\n  0x0ad78ebc5ac6200000\n    /* \"staking.sol\":869:910  uint256 public levelVipMin = 200 * 10**18 */\n  0x09\n  sstore\n    /* \"staking.sol\":945:964  2500000000 * 10**18 */\n  0x0813f3978f89409844000000\n    /* \"staking.sol\":916:964  uint256 public levelVipMax = 2500000000 * 10**18 */\n  0x0a\n  sstore\n    /* \"staking.sol\":1627:1774  constructor(address _token , address _reserveWallet) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":991:996  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:996  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n  0x01\n    /* \"staking.sol\":1690:1720  acceptedToken = IERC20(_token) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"staking.sol\":1730:1743  reserveWallet */\n  0x0b\n    /* \"staking.sol\":1730:1760  reserveWallet = _reserveWallet */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"staking.sol\":225:10700  contract SenseiStaking is Ownable, Pausable {... */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_17:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_20:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_22:\n    /* \"#utility.yul\":375:415   */\n  tag_23\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_17\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_24\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_17\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_18:\n    /* \"staking.sol\":225:10700  contract SenseiStaking is Ownable, Pausable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"staking.sol\":225:10700  contract SenseiStaking is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x84203f4b\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xbf01651a\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xe5d15701\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xe5d15701\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf4217e1e\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf7edf9ab\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xfe2981b5\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0xbf01651a\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd3900a52\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd72b11bd\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdda4fa8f\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x91789cef\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x91789cef\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x927e5998\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x97e9c5fe\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xbb664864\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x84203f4b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8f0fb2b7\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x635ef285\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x69e06848\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x69e06848\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x71a1609b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7fe509d7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8275b181\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x635ef285\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6505cf31\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6636389e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x67911ba4\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x451c3d80\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6296e750\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0x01ef4739\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1ed81ff8\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1ff08fee\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x32938e3a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"staking.sol\":773:812  uint256 public level1Min = 100 * 10**18 */\n    tag_3:\n      tag_44\n      sload(0x07)\n      dup2\n      jump\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"staking.sol\":773:812  uint256 public level1Min = 100 * 10**18 */\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":3873:4567  function enterLevel1 (uint256 _amount) public whenNotPaused {... */\n    tag_4:\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"staking.sol\":567:598  uint256 public level1APY = 3700 */\n    tag_5:\n      tag_44\n      sload(0x03)\n      dup2\n      jump\n        /* \"staking.sol\":604:637  uint256 public vipLevelAPY = 4800 */\n    tag_6:\n      tag_44\n      sload(0x04)\n      dup2\n      jump\n        /* \"staking.sol\":1895:1959  function unpause () public onlyOwner {... */\n    tag_7:\n      tag_48\n      tag_59\n      jump\t// in\n        /* \"staking.sol\":320:347  IERC20 public acceptedToken */\n    tag_8:\n      sload(0x01)\n      tag_60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_60:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":559:591   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":541:592   */\n      dup2\n      mstore\n        /* \"#utility.yul\":529:531   */\n      0x20\n        /* \"#utility.yul\":514:532   */\n      add\n        /* \"staking.sol\":320:347  IERC20 public acceptedToken */\n      tag_46\n        /* \"#utility.yul\":381:598   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_64:\n      mload(0x40)\n        /* \"#utility.yul\":768:782   */\n      swap1\n      iszero\n        /* \"#utility.yul\":761:783   */\n      iszero\n        /* \"#utility.yul\":743:784   */\n      dup2\n      mstore\n        /* \"#utility.yul\":731:733   */\n      0x20\n        /* \"#utility.yul\":716:734   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      tag_46\n        /* \"#utility.yul\":603:790   */\n      jump\n        /* \"staking.sol\":1084:1125  mapping (address => bool) public isLevel0 */\n    tag_10:\n      tag_64\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"staking.sol\":1184:1225  mapping (address => bool) public isLevel1 */\n    tag_11:\n      tag_64\n      tag_74\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_74:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"staking.sol\":678:716  uint256 public level0Min = 50 * 10**18 */\n    tag_12:\n      tag_44\n      sload(0x05)\n      dup2\n      jump\n        /* \"staking.sol\":9736:10696  function withdrawVip (uint256 _amount) public  {... */\n    tag_13:\n      tag_48\n      tag_81\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"staking.sol\":1131:1178  mapping (address => _user) public level0Balance */\n    tag_14:\n      tag_83\n      tag_84\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_84:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n    tag_83:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1366:1391   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":1422:1424   */\n      0x20\n        /* \"#utility.yul\":1407:1425   */\n      dup5\n      add\n        /* \"#utility.yul\":1400:1434   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1450:1468   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1443:1477   */\n      mstore\n        /* \"#utility.yul\":1354:1356   */\n      0x60\n        /* \"#utility.yul\":1339:1357   */\n      add\n        /* \"staking.sol\":1131:1178  mapping (address => _user) public level0Balance */\n      tag_46\n        /* \"#utility.yul\":1164:1483   */\n      jump\n        /* \"staking.sol\":6244:6930  function getInterest (address user, uint8 class, uint256 balance) public view returns (uint256){... */\n    tag_15:\n      tag_44\n      tag_89\n      calldatasize\n      0x04\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_48\n      tag_94\n      jump\t// in\n        /* \"staking.sol\":722:767  uint256 public level0Max = 500000000 * 10**18 */\n    tag_17:\n      tag_44\n      sload(0x06)\n      dup2\n      jump\n        /* \"staking.sol\":1231:1278  mapping (address => _user) public level1Balance */\n    tag_18:\n      tag_83\n      tag_99\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_99:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n        /* \"staking.sol\":529:561  uint256 public level0APY =  2700 */\n    tag_19:\n      tag_44\n      sload(0x02)\n      dup2\n      jump\n        /* \"staking.sol\":1284:1322  mapping (address => bool) public isVip */\n    tag_20:\n      tag_64\n      tag_106\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_106:\n      mstore(0x20, 0x10)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"staking.sol\":1825:1885  function pause () public onlyOwner {... */\n    tag_21:\n      tag_48\n      tag_110\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_60)\n        /* \"staking.sol\":916:964  uint256 public levelVipMax = 2500000000 * 10**18 */\n    tag_23:\n      tag_44\n      sload(0x0a)\n      dup2\n      jump\n        /* \"staking.sol\":869:910  uint256 public levelVipMin = 200 * 10**18 */\n    tag_24:\n      tag_44\n      sload(0x09)\n      dup2\n      jump\n        /* \"staking.sol\":7458:8440  function withdrawLevel0 (uint256 _amount) public  {... */\n    tag_25:\n      tag_48\n      tag_122\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n        /* \"staking.sol\":1328:1372  mapping (address => _user) public vipBalance */\n    tag_26:\n      tag_83\n      tag_125\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_125:\n      mstore(0x20, 0x11)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n        /* \"staking.sol\":8598:9578  function withdrawLevel1 (uint256 _amount) public  {... */\n    tag_27:\n      tag_48\n      tag_129\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n        /* \"staking.sol\":4766:5465  function enterVip (uint256 _amount) public whenNotPaused {... */\n    tag_28:\n      tag_48\n      tag_132\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"staking.sol\":818:863  uint256 public level1Max = 500000000 * 10**18 */\n    tag_29:\n      tag_44\n      sload(0x08)\n      dup2\n      jump\n        /* \"staking.sol\":997:1025  address public reserveWallet */\n    tag_30:\n      sload(0x0b)\n      tag_60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"staking.sol\":2019:2138  function setReserveWallet (address _reserveWallet) external onlyOwner{... */\n    tag_31:\n      tag_48\n      tag_141\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n        /* \"staking.sol\":2205:2413  function setNewAPY ( uint256 _level0APY, uint256 _level1APY, uint256 _vipLevelAPY) external onlyOwner{... */\n    tag_32:\n      tag_48\n      tag_144\n      calldatasize\n      0x04\n      tag_145\n      jump\t// in\n    tag_144:\n      tag_146\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_33:\n      tag_48\n      tag_148\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_148:\n      tag_149\n      jump\t// in\n        /* \"staking.sol\":2495:2867  function setNewMaxMin (uint256 _level0Min, uint256 _level0Max, uint256 _level1Min, uint256 _level1Max, uint256 _levelVipMin, uint256 _levelVipMax) external onlyOwner{... */\n    tag_34:\n      tag_48\n      tag_151\n      calldatasize\n      0x04\n      tag_152\n      jump\t// in\n    tag_151:\n      tag_153\n      jump\t// in\n        /* \"staking.sol\":5610:6109  function isOnTime (address user, uint8 class) public view returns (bool) {... */\n    tag_35:\n      tag_64\n      tag_155\n      calldatasize\n      0x04\n      tag_156\n      jump\t// in\n    tag_155:\n      tag_157\n      jump\t// in\n        /* \"staking.sol\":3016:3717  function enterLevel0 (uint256 _amount) public whenNotPaused {... */\n    tag_36:\n      tag_48\n      tag_160\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n        /* \"staking.sol\":3873:4567  function enterLevel1 (uint256 _amount) public whenNotPaused {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"staking.sol\":3962:3971  level1Max */\n      sload(0x08)\n        /* \"staking.sol\":3951:3958  _amount */\n      dup2\n        /* \"staking.sol\":3951:3971  _amount <= level1Max */\n      gt\n      iszero\n        /* \"staking.sol\":3951:3995  _amount <= level1Max && _amount >= level1Min */\n      dup1\n      iszero\n      tag_168\n      jumpi\n      pop\n        /* \"staking.sol\":3986:3995  level1Min */\n      sload(0x07)\n        /* \"staking.sol\":3975:3982  _amount */\n      dup2\n        /* \"staking.sol\":3975:3995  _amount >= level1Min */\n      lt\n      iszero\n        /* \"staking.sol\":3951:3995  _amount <= level1Max && _amount >= level1Min */\n    tag_168:\n        /* \"staking.sol\":3943:4050  require(_amount <= level1Max && _amount >= level1Min, \"Amount needs to be more than min and less than max\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_171\n      jump\t// in\n    tag_169:\n        /* \"staking.sol\":4081:4091  msg.sender */\n      caller\n        /* \"staking.sol\":4060:4078  address _msgSender */\n      0x00\n        /* \"staking.sol\":4112:4132  isLevel1[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":4112:4120  isLevel1 */\n      0x0e\n        /* \"staking.sol\":4112:4132  isLevel1[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"staking.sol\":4111:4132  !isLevel1[_msgSender] */\n      iszero\n        /* \"staking.sol\":4103:4171  require(!isLevel1[_msgSender], \"You're already in this Stake level\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_174\n      jump\t// in\n    tag_172:\n        /* \"staking.sol\":4188:4201  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":4188:4250  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4188:4201  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":4188:4214  acceptedToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"staking.sol\":4188:4250  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      tag_175\n      swap1\n        /* \"staking.sol\":4215:4225  _msgSender */\n      dup5\n      swap1\n        /* \"staking.sol\":4235:4239  this */\n      address\n      swap1\n        /* \"staking.sol\":4242:4249  _amount */\n      dup8\n      swap1\n        /* \"staking.sol\":4188:4250  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x04\n      add\n      tag_176\n      jump\t// in\n    tag_175:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4261:4281  isLevel1[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4261:4269  isLevel1 */\n      0x0e\n        /* \"staking.sol\":4261:4281  isLevel1[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":4261:4288  isLevel1[_msgSender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"staking.sol\":4284:4288  true */\n      0x01\n        /* \"staking.sol\":4261:4288  isLevel1[_msgSender] = true */\n      or\n      swap1\n      sstore\n        /* \"staking.sol\":4326:4464  _user ({... */\n      dup2\n      mload\n      0x60\n      dup2\n      add\n      dup4\n      mstore\n      dup5\n      dup2\n      mstore\n        /* \"staking.sol\":4388:4403  block.timestamp */\n      timestamp\n        /* \"staking.sol\":4326:4464  _user ({... */\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap2\n      dup3\n      add\n      swap1\n        /* \"staking.sol\":4428:4453  block.timestamp + 30 days */\n      tag_181\n      swap1\n        /* \"staking.sol\":4446:4453  30 days */\n      0x278d00\n        /* \"staking.sol\":4428:4453  block.timestamp + 30 days */\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"staking.sol\":4326:4464  _user ({... */\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4298:4323  level1Balance[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4298:4311  level1Balance */\n      0x0f\n        /* \"staking.sol\":4298:4323  level1Balance[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":4298:4464  level1Balance[_msgSender] = _user ({... */\n      dup4\n      mload\n      dup2\n      sstore\n      swap1\n      dup4\n      add\n      mload\n      0x01\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      swap3\n      swap1\n      swap2\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n        /* \"staking.sol\":4484:4560  deposit (_msgSender, 1, _amount, block.timestamp, block.timestamp + 30 days) */\n      0x17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f23\n      swap1\n        /* \"staking.sol\":4312:4322  _msgSender */\n      dup3\n      swap1\n        /* \"staking.sol\":4508:4515  _amount */\n      dup5\n        /* \"staking.sol\":4517:4532  block.timestamp */\n      timestamp\n        /* \"staking.sol\":4534:4559  block.timestamp + 30 days */\n      tag_183\n        /* \"staking.sol\":4517:4532  block.timestamp */\n      dup2\n        /* \"staking.sol\":4552:4559  30 days */\n      0x278d00\n        /* \"staking.sol\":4534:4559  block.timestamp + 30 days */\n      tag_182\n      jump\t// in\n    tag_183:\n        /* \"staking.sol\":4484:4560  deposit (_msgSender, 1, _amount, block.timestamp, block.timestamp + 30 days) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5673:5705   */\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":5655:5706   */\n      dup7\n      mstore\n        /* \"#utility.yul\":5754:5758   */\n      0xff\n        /* \"#utility.yul\":5742:5759   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":5737:5739   */\n      0x20\n        /* \"#utility.yul\":5722:5740   */\n      dup7\n      add\n        /* \"#utility.yul\":5715:5760   */\n      mstore\n        /* \"#utility.yul\":5776:5794   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":5769:5803   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":5834:5836   */\n      0x60\n        /* \"#utility.yul\":5819:5837   */\n      dup4\n      add\n        /* \"#utility.yul\":5812:5846   */\n      mstore\n        /* \"#utility.yul\":5877:5880   */\n      0x80\n        /* \"#utility.yul\":5862:5881   */\n      dup3\n      add\n        /* \"#utility.yul\":5855:5890   */\n      mstore\n        /* \"#utility.yul\":5642:5645   */\n      0xa0\n        /* \"#utility.yul\":5627:5646   */\n      add\n        /* \"staking.sol\":4484:4560  deposit (_msgSender, 1, _amount, block.timestamp, block.timestamp + 30 days) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":3933:4567  {... */\n      pop\n        /* \"staking.sol\":3873:4567  function enterLevel1 (uint256 _amount) public whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":1895:1959  function unpause () public onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_192\n      jump\t// in\n    tag_190:\n        /* \"staking.sol\":1942:1952  _unpause() */\n      tag_194\n        /* \"staking.sol\":1942:1950  _unpause */\n      tag_195\n        /* \"staking.sol\":1942:1952  _unpause() */\n      jump\t// in\n    tag_194:\n        /* \"staking.sol\":1895:1959  function unpause () public onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":9736:10696  function withdrawVip (uint256 _amount) public  {... */\n    tag_82:\n        /* \"staking.sol\":9814:9824  msg.sender */\n      caller\n        /* \"staking.sol\":9793:9811  address _msgSender */\n      0x00\n        /* \"staking.sol\":9842:9859  isVip[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":9842:9847  isVip */\n      0x10\n        /* \"staking.sol\":9842:9859  isVip[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"staking.sol\":9834:9879  require(isVip[_msgSender], \"User is not Vip\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6464:6466   */\n      0x20\n        /* \"staking.sol\":9834:9879  require(isVip[_msgSender], \"User is not Vip\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6446:6467   */\n      mstore\n        /* \"#utility.yul\":6503:6505   */\n      0x0f\n        /* \"#utility.yul\":6483:6501   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6476:6506   */\n      mstore\n      shl(0x8c, 0x055736572206973206e6f742056697)\n        /* \"#utility.yul\":6522:6540   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6515:6560   */\n      mstore\n        /* \"#utility.yul\":6577:6595   */\n      0x64\n      add\n        /* \"staking.sol\":9834:9879  require(isVip[_msgSender], \"User is not Vip\") */\n      tag_165\n        /* \"#utility.yul\":6262:6601   */\n      jump\n        /* \"staking.sol\":9834:9879  require(isVip[_msgSender], \"User is not Vip\") */\n    tag_198:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":9912:9934  vipBalance[_msgSender] */\n      dup2\n      and\n        /* \"staking.sol\":9894:9909  uint256 balance */\n      0x00\n        /* \"staking.sol\":9912:9934  vipBalance[_msgSender] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":9912:9922  vipBalance */\n      0x11\n        /* \"staking.sol\":9912:9934  vipBalance[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":9912:9942  vipBalance[_msgSender].balance */\n      sload\n        /* \"staking.sol\":9960:9978  balance >= _amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"staking.sol\":9952:10013  require(balance >= _amount, \"Not enough balance to withdraw\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_203\n      jump\t// in\n    tag_201:\n        /* \"staking.sol\":10024:10038  bool _isOnTime */\n      0x00\n        /* \"staking.sol\":10041:10064  isOnTime(_msgSender, 2) */\n      tag_204\n        /* \"staking.sol\":10050:10060  _msgSender */\n      dup4\n        /* \"staking.sol\":10062:10063  2 */\n      0x02\n        /* \"staking.sol\":10041:10049  isOnTime */\n      tag_157\n        /* \"staking.sol\":10041:10064  isOnTime(_msgSender, 2) */\n      jump\t// in\n    tag_204:\n        /* \"staking.sol\":10024:10064  bool _isOnTime = isOnTime(_msgSender, 2) */\n      swap1\n      pop\n        /* \"staking.sol\":10074:10090  uint256 earnings */\n      0x00\n        /* \"staking.sol\":10093:10128  getInterest(_msgSender, 2, _amount) */\n      tag_205\n        /* \"staking.sol\":10105:10115  _msgSender */\n      dup5\n        /* \"staking.sol\":10117:10118  2 */\n      0x02\n        /* \"staking.sol\":10120:10127  _amount */\n      dup8\n        /* \"staking.sol\":10093:10104  getInterest */\n      tag_91\n        /* \"staking.sol\":10093:10128  getInterest(_msgSender, 2, _amount) */\n      jump\t// in\n    tag_205:\n        /* \"staking.sol\":10074:10128  uint256 earnings = getInterest(_msgSender, 2, _amount) */\n      swap1\n      pop\n        /* \"staking.sol\":10153:10160  balance */\n      dup3\n        /* \"staking.sol\":10142:10149  _amount */\n      dup6\n        /* \"staking.sol\":10142:10160  _amount == balance */\n      eq\n        /* \"staking.sol\":10139:10331  if(_amount == balance){... */\n      iszero\n      tag_206\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":10182:10204  vipBalance[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":10182:10192  vipBalance */\n      0x11\n        /* \"staking.sol\":10182:10204  vipBalance[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":10175:10204  delete vipBalance[_msgSender] */\n      dup4\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup5\n      swap1\n      sstore\n      0x02\n      add\n      dup4\n      swap1\n      sstore\n        /* \"staking.sol\":10223:10228  isVip */\n      0x10\n        /* \"staking.sol\":10223:10240  isVip[_msgSender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":10223:10248  isVip[_msgSender] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"staking.sol\":10139:10331  if(_amount == balance){... */\n      jump(tag_207)\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":10279:10301  vipBalance[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":10279:10289  vipBalance */\n      0x11\n        /* \"staking.sol\":10279:10301  vipBalance[_msgSender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"staking.sol\":10279:10320  vipBalance[_msgSender].balance -= _amount */\n      dup1\n      sload\n        /* \"staking.sol\":10313:10320  _amount */\n      dup8\n      swap3\n        /* \"staking.sol\":10279:10301  vipBalance[_msgSender] */\n      swap1\n        /* \"staking.sol\":10279:10320  vipBalance[_msgSender].balance -= _amount */\n      tag_208\n      swap1\n        /* \"staking.sol\":10313:10320  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":10279:10320  vipBalance[_msgSender].balance -= _amount */\n      tag_209\n      jump\t// in\n    tag_208:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":10139:10331  if(_amount == balance){... */\n    tag_207:\n        /* \"staking.sol\":10344:10353  _isOnTime */\n      dup2\n        /* \"staking.sol\":10341:10621  if(_isOnTime){... */\n      iszero\n      tag_210\n      jumpi\n        /* \"staking.sol\":10368:10381  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":10368:10411  acceptedToken.transfer(_msgSender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7287:7319   */\n      dup7\n      dup2\n      and\n        /* \"staking.sol\":10368:10411  acceptedToken.transfer(_msgSender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7269:7320   */\n      mstore\n        /* \"#utility.yul\":7336:7354   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7329:7363   */\n      dup9\n      swap1\n      mstore\n        /* \"staking.sol\":10368:10381  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":10368:10390  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7242:7260   */\n      0x44\n      add\n        /* \"staking.sol\":10368:10411  acceptedToken.transfer(_msgSender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_215\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_215:\n      pop\n        /* \"staking.sol\":10425:10438  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":10452:10465  reserveWallet */\n      sload(0x0b)\n        /* \"staking.sol\":10425:10488  acceptedToken.transferFrom(reserveWallet, _msgSender, earnings) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":10425:10438  acceptedToken */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"staking.sol\":10425:10451  acceptedToken.transferFrom */\n      0x23b872dd\n      swap3\n        /* \"staking.sol\":10425:10488  acceptedToken.transferFrom(reserveWallet, _msgSender, earnings) */\n      tag_216\n      swap3\n        /* \"staking.sol\":10452:10465  reserveWallet */\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":10467:10477  _msgSender */\n      dup9\n      swap1\n        /* \"staking.sol\":10479:10487  earnings */\n      dup7\n      swap1\n        /* \"staking.sol\":10425:10488  acceptedToken.transferFrom(reserveWallet, _msgSender, earnings) */\n      0x04\n      add\n      tag_176\n      jump\t// in\n    tag_216:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_219:\n      pop\n        /* \"staking.sol\":10341:10621  if(_isOnTime){... */\n      jump(tag_220)\n    tag_210:\n      pop\n        /* \"staking.sol\":10556:10569  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":10556:10599  acceptedToken.transfer(_msgSender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7287:7319   */\n      dup6\n      dup2\n      and\n        /* \"staking.sol\":10556:10599  acceptedToken.transfer(_msgSender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7269:7320   */\n      mstore\n        /* \"#utility.yul\":7336:7354   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7329:7363   */\n      dup8\n      swap1\n      mstore\n        /* \"staking.sol\":10530:10531  0 */\n      0x00\n      swap3\n        /* \"staking.sol\":10556:10569  acceptedToken */\n      and\n      swap1\n        /* \"staking.sol\":10556:10578  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7242:7260   */\n      0x44\n      add\n        /* \"staking.sol\":10556:10599  acceptedToken.transfer(_msgSender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_224\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_224:\n      pop\n        /* \"staking.sol\":10341:10621  if(_isOnTime){... */\n    tag_220:\n        /* \"staking.sol\":10636:10689  withdraw(_msgSender, 2, _isOnTime, _amount, earnings) */\n      0xa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b\n        /* \"staking.sol\":10645:10655  _msgSender */\n      dup5\n        /* \"staking.sol\":10657:10658  2 */\n      0x02\n        /* \"staking.sol\":10660:10669  _isOnTime */\n      dup5\n        /* \"staking.sol\":10671:10678  _amount */\n      dup9\n        /* \"staking.sol\":10680:10688  earnings */\n      dup6\n        /* \"staking.sol\":10636:10689  withdraw(_msgSender, 2, _isOnTime, _amount, earnings) */\n      mload(0x40)\n      tag_225\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":9783:10696  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"staking.sol\":9736:10696  function withdrawVip (uint256 _amount) public  {... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":6244:6930  function getInterest (address user, uint8 class, uint256 balance) public view returns (uint256){... */\n    tag_91:\n        /* \"staking.sol\":6331:6338  uint256 */\n      0x00\n        /* \"staking.sol\":6352:6362  class == 0 */\n      0xff\n      dup4\n      and\n        /* \"staking.sol\":6349:6924  if(class == 0){           ... */\n      tag_228\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":6411:6430  level0Balance[user] */\n      dup5\n      and\n        /* \"staking.sol\":6388:6408  uint256 _timeStarted */\n      0x00\n        /* \"staking.sol\":6411:6430  level0Balance[user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":6411:6424  level0Balance */\n      0x0d\n        /* \"staking.sol\":6411:6430  level0Balance[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":6411:6442  level0Balance[user].timeStarted */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":6504:6513  level0APY */\n      sload(0x02)\n        /* \"staking.sol\":6464:6514  calculateInterest(balance,_timeStarted, level0APY) */\n      tag_229\n      swap1\n        /* \"staking.sol\":6482:6489  balance */\n      dup5\n      swap1\n        /* \"staking.sol\":6411:6442  level0Balance[user].timeStarted */\n      dup4\n      swap1\n        /* \"staking.sol\":6464:6481  calculateInterest */\n      tag_230\n        /* \"staking.sol\":6464:6514  calculateInterest(balance,_timeStarted, level0APY) */\n      jump\t// in\n    tag_229:\n        /* \"staking.sol\":6457:6514  return calculateInterest(balance,_timeStarted, level0APY) */\n      swap2\n      pop\n      pop\n      jump(tag_237)\n        /* \"staking.sol\":6349:6924  if(class == 0){           ... */\n    tag_228:\n        /* \"staking.sol\":6535:6540  class */\n      dup3\n        /* \"staking.sol\":6535:6545  class == 1 */\n      0xff\n      and\n        /* \"staking.sol\":6544:6545  1 */\n      0x01\n        /* \"staking.sol\":6535:6545  class == 1 */\n      eq\n        /* \"staking.sol\":6531:6924  if (class == 1){      ... */\n      iszero\n      tag_232\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":6589:6608  level1Balance[user] */\n      dup5\n      and\n        /* \"staking.sol\":6566:6586  uint256 _timeStarted */\n      0x00\n        /* \"staking.sol\":6589:6608  level1Balance[user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":6589:6602  level1Balance */\n      0x0f\n        /* \"staking.sol\":6589:6608  level1Balance[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":6589:6620  level1Balance[user].timeStarted */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":6682:6691  level1APY */\n      sload(0x03)\n        /* \"staking.sol\":6642:6692  calculateInterest(balance,_timeStarted, level1APY) */\n      tag_229\n      swap1\n        /* \"staking.sol\":6660:6667  balance */\n      dup5\n      swap1\n        /* \"staking.sol\":6589:6620  level1Balance[user].timeStarted */\n      dup4\n      swap1\n        /* \"staking.sol\":6642:6659  calculateInterest */\n      tag_230\n        /* \"staking.sol\":6642:6692  calculateInterest(balance,_timeStarted, level1APY) */\n      jump\t// in\n        /* \"staking.sol\":6531:6924  if (class == 1){      ... */\n    tag_232:\n        /* \"staking.sol\":6713:6718  class */\n      dup3\n        /* \"staking.sol\":6713:6723  class == 2 */\n      0xff\n      and\n        /* \"staking.sol\":6722:6723  2 */\n      0x02\n        /* \"staking.sol\":6713:6723  class == 2 */\n      eq\n        /* \"staking.sol\":6709:6924  if (class == 2){           ... */\n      iszero\n      tag_235\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":6772:6788  vipBalance[user] */\n      dup5\n      and\n        /* \"staking.sol\":6749:6769  uint256 _timeStarted */\n      0x00\n        /* \"staking.sol\":6772:6788  vipBalance[user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":6772:6782  vipBalance */\n      0x11\n        /* \"staking.sol\":6772:6788  vipBalance[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":6772:6800  vipBalance[user].timeStarted */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":6862:6873  vipLevelAPY */\n      sload(0x04)\n        /* \"staking.sol\":6822:6874  calculateInterest(balance,_timeStarted, vipLevelAPY) */\n      tag_229\n      swap1\n        /* \"staking.sol\":6840:6847  balance */\n      dup5\n      swap1\n        /* \"staking.sol\":6772:6800  vipBalance[user].timeStarted */\n      dup4\n      swap1\n        /* \"staking.sol\":6822:6839  calculateInterest */\n      tag_230\n        /* \"staking.sol\":6822:6874  calculateInterest(balance,_timeStarted, vipLevelAPY) */\n      jump\t// in\n        /* \"staking.sol\":6709:6924  if (class == 2){           ... */\n    tag_235:\n      pop\n        /* \"staking.sol\":6912:6913  0 */\n      0x00\n        /* \"staking.sol\":6709:6924  if (class == 2){           ... */\n    tag_237:\n        /* \"staking.sol\":6244:6930  function getInterest (address user, uint8 class, uint256 balance) public view returns (uint256){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_192\n      jump\t// in\n    tag_241:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"staking.sol\":1825:1885  function pause () public onlyOwner {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_249\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_192\n      jump\t// in\n    tag_249:\n        /* \"staking.sol\":1870:1878  _pause() */\n      tag_194\n        /* \"staking.sol\":1870:1876  _pause */\n      tag_253\n        /* \"staking.sol\":1870:1878  _pause() */\n      jump\t// in\n        /* \"staking.sol\":7458:8440  function withdrawLevel0 (uint256 _amount) public  {... */\n    tag_123:\n        /* \"staking.sol\":7539:7549  msg.sender */\n      caller\n        /* \"staking.sol\":7518:7536  address _msgSender */\n      0x00\n        /* \"staking.sol\":7567:7587  isLevel0[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":7567:7575  isLevel0 */\n      0x0c\n        /* \"staking.sol\":7567:7587  isLevel0[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"staking.sol\":7559:7614  require(isLevel0[_msgSender], \"User is not on Level 0\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8097:8099   */\n      0x20\n        /* \"staking.sol\":7559:7614  require(isLevel0[_msgSender], \"User is not on Level 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8079:8100   */\n      mstore\n        /* \"#utility.yul\":8136:8138   */\n      0x16\n        /* \"#utility.yul\":8116:8134   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8109:8139   */\n      mstore\n      shl(0x54, 0x055736572206973206e6f74206f6e204c6576656c203)\n        /* \"#utility.yul\":8155:8173   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8148:8200   */\n      mstore\n        /* \"#utility.yul\":8217:8235   */\n      0x64\n      add\n        /* \"staking.sol\":7559:7614  require(isLevel0[_msgSender], \"User is not on Level 0\") */\n      tag_165\n        /* \"#utility.yul\":7895:8241   */\n      jump\n        /* \"staking.sol\":7559:7614  require(isLevel0[_msgSender], \"User is not on Level 0\") */\n    tag_256:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":7643:7668  level0Balance[_msgSender] */\n      dup2\n      and\n        /* \"staking.sol\":7625:7640  uint256 balance */\n      0x00\n        /* \"staking.sol\":7643:7668  level0Balance[_msgSender] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":7643:7656  level0Balance */\n      0x0d\n        /* \"staking.sol\":7643:7668  level0Balance[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":7643:7676  level0Balance[_msgSender].balance */\n      sload\n        /* \"staking.sol\":7694:7712  balance >= _amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"staking.sol\":7686:7747  require(balance >= _amount, \"Not enough balance to withdraw\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_203\n      jump\t// in\n    tag_259:\n        /* \"staking.sol\":7758:7772  bool _isOnTime */\n      0x00\n        /* \"staking.sol\":7775:7798  isOnTime(_msgSender, 0) */\n      tag_261\n        /* \"staking.sol\":7784:7794  _msgSender */\n      dup4\n        /* \"staking.sol\":7796:7797  0 */\n      0x00\n        /* \"staking.sol\":7775:7783  isOnTime */\n      tag_157\n        /* \"staking.sol\":7775:7798  isOnTime(_msgSender, 0) */\n      jump\t// in\n    tag_261:\n        /* \"staking.sol\":7758:7798  bool _isOnTime = isOnTime(_msgSender, 0) */\n      swap1\n      pop\n        /* \"staking.sol\":7808:7824  uint256 earnings */\n      0x00\n        /* \"staking.sol\":7827:7862  getInterest(_msgSender, 0, _amount) */\n      tag_262\n        /* \"staking.sol\":7839:7849  _msgSender */\n      dup5\n        /* \"staking.sol\":7851:7852  0 */\n      0x00\n        /* \"staking.sol\":7854:7861  _amount */\n      dup8\n        /* \"staking.sol\":7827:7838  getInterest */\n      tag_91\n        /* \"staking.sol\":7827:7862  getInterest(_msgSender, 0, _amount) */\n      jump\t// in\n    tag_262:\n        /* \"staking.sol\":7808:7862  uint256 earnings = getInterest(_msgSender, 0, _amount) */\n      swap1\n      pop\n        /* \"staking.sol\":7887:7894  balance */\n      dup3\n        /* \"staking.sol\":7876:7883  _amount */\n      dup6\n        /* \"staking.sol\":7876:7894  _amount == balance */\n      eq\n        /* \"staking.sol\":7873:8075  if(_amount == balance){... */\n      iszero\n      tag_263\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":7916:7941  level0Balance[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":7916:7929  level0Balance */\n      0x0d\n        /* \"staking.sol\":7916:7941  level0Balance[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":7909:7941  delete level0Balance[_msgSender] */\n      dup4\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup5\n      swap1\n      sstore\n      0x02\n      add\n      dup4\n      swap1\n      sstore\n        /* \"staking.sol\":7961:7969  isLevel0 */\n      0x0c\n        /* \"staking.sol\":7961:7981  isLevel0[_msgSender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":7961:7989  isLevel0[_msgSender] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"staking.sol\":7873:8075  if(_amount == balance){... */\n      jump(tag_264)\n    tag_263:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":8020:8045  level0Balance[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":8020:8033  level0Balance */\n      0x0d\n        /* \"staking.sol\":8020:8045  level0Balance[_msgSender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"staking.sol\":8020:8064  level0Balance[_msgSender].balance -= _amount */\n      dup1\n      sload\n        /* \"staking.sol\":8057:8064  _amount */\n      dup8\n      swap3\n        /* \"staking.sol\":8020:8045  level0Balance[_msgSender] */\n      swap1\n        /* \"staking.sol\":8020:8064  level0Balance[_msgSender].balance -= _amount */\n      tag_265\n      swap1\n        /* \"staking.sol\":8057:8064  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":8020:8064  level0Balance[_msgSender].balance -= _amount */\n      tag_209\n      jump\t// in\n    tag_265:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":7873:8075  if(_amount == balance){... */\n    tag_264:\n        /* \"staking.sol\":8088:8097  _isOnTime */\n      dup2\n        /* \"staking.sol\":8085:8361  if(_isOnTime){... */\n      iszero\n      tag_266\n      jumpi\n        /* \"staking.sol\":8112:8125  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":8112:8155  acceptedToken.transfer(_msgSender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7287:7319   */\n      dup7\n      dup2\n      and\n        /* \"staking.sol\":8112:8155  acceptedToken.transfer(_msgSender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7269:7320   */\n      mstore\n        /* \"#utility.yul\":7336:7354   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7329:7363   */\n      dup9\n      swap1\n      mstore\n        /* \"staking.sol\":8112:8125  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":8112:8134  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7242:7260   */\n      0x44\n      add\n        /* \"staking.sol\":8112:8155  acceptedToken.transfer(_msgSender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_269\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_269:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_270\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_270:\n      pop\n        /* \"staking.sol\":8169:8182  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":8196:8209  reserveWallet */\n      sload(0x0b)\n        /* \"staking.sol\":8169:8232  acceptedToken.transferFrom(reserveWallet, _msgSender, earnings) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":8169:8182  acceptedToken */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"staking.sol\":8169:8195  acceptedToken.transferFrom */\n      0x23b872dd\n      swap3\n        /* \"staking.sol\":8169:8232  acceptedToken.transferFrom(reserveWallet, _msgSender, earnings) */\n      tag_271\n      swap3\n        /* \"staking.sol\":8196:8209  reserveWallet */\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":8211:8221  _msgSender */\n      dup9\n      swap1\n        /* \"staking.sol\":8223:8231  earnings */\n      dup7\n      swap1\n        /* \"staking.sol\":8169:8232  acceptedToken.transferFrom(reserveWallet, _msgSender, earnings) */\n      0x04\n      add\n      tag_176\n      jump\t// in\n    tag_271:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_273:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_274\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_274:\n      pop\n        /* \"staking.sol\":8085:8361  if(_isOnTime){... */\n      jump(tag_275)\n    tag_266:\n      pop\n        /* \"staking.sol\":8296:8309  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":8296:8339  acceptedToken.transfer(_msgSender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7287:7319   */\n      dup6\n      dup2\n      and\n        /* \"staking.sol\":8296:8339  acceptedToken.transfer(_msgSender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7269:7320   */\n      mstore\n        /* \"#utility.yul\":7336:7354   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7329:7363   */\n      dup8\n      swap1\n      mstore\n        /* \"staking.sol\":8274:8275  0 */\n      0x00\n      swap3\n        /* \"staking.sol\":8296:8309  acceptedToken */\n      and\n      swap1\n        /* \"staking.sol\":8296:8318  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7242:7260   */\n      0x44\n      add\n        /* \"staking.sol\":8296:8339  acceptedToken.transfer(_msgSender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_278:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_279\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_279:\n      pop\n        /* \"staking.sol\":8085:8361  if(_isOnTime){... */\n    tag_275:\n        /* \"staking.sol\":8380:8433  withdraw(_msgSender, 0, _isOnTime, _amount, earnings) */\n      0xa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b\n        /* \"staking.sol\":8389:8399  _msgSender */\n      dup5\n        /* \"staking.sol\":8401:8402  0 */\n      0x00\n        /* \"staking.sol\":8404:8413  _isOnTime */\n      dup5\n        /* \"staking.sol\":8415:8422  _amount */\n      dup9\n        /* \"staking.sol\":8424:8432  earnings */\n      dup6\n        /* \"staking.sol\":8380:8433  withdraw(_msgSender, 0, _isOnTime, _amount, earnings) */\n      mload(0x40)\n      tag_225\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n        /* \"staking.sol\":8598:9578  function withdrawLevel1 (uint256 _amount) public  {... */\n    tag_130:\n        /* \"staking.sol\":8679:8689  msg.sender */\n      caller\n        /* \"staking.sol\":8658:8676  address _msgSender */\n      0x00\n        /* \"staking.sol\":8707:8727  isLevel1[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":8707:8715  isLevel1 */\n      0x0e\n        /* \"staking.sol\":8707:8727  isLevel1[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"staking.sol\":8699:8754  require(isLevel1[_msgSender], \"User is not on Level 1\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8969:8971   */\n      0x20\n        /* \"staking.sol\":8699:8754  require(isLevel1[_msgSender], \"User is not on Level 1\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8951:8972   */\n      mstore\n        /* \"#utility.yul\":9008:9010   */\n      0x16\n        /* \"#utility.yul\":8988:9006   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8981:9011   */\n      mstore\n      shl(0x50, 0x55736572206973206e6f74206f6e204c6576656c2031)\n        /* \"#utility.yul\":9027:9045   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9020:9072   */\n      mstore\n        /* \"#utility.yul\":9089:9107   */\n      0x64\n      add\n        /* \"staking.sol\":8699:8754  require(isLevel1[_msgSender], \"User is not on Level 1\") */\n      tag_165\n        /* \"#utility.yul\":8767:9113   */\n      jump\n        /* \"staking.sol\":8699:8754  require(isLevel1[_msgSender], \"User is not on Level 1\") */\n    tag_283:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":8783:8808  level1Balance[_msgSender] */\n      dup2\n      and\n        /* \"staking.sol\":8765:8780  uint256 balance */\n      0x00\n        /* \"staking.sol\":8783:8808  level1Balance[_msgSender] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":8783:8796  level1Balance */\n      0x0f\n        /* \"staking.sol\":8783:8808  level1Balance[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":8783:8816  level1Balance[_msgSender].balance */\n      sload\n        /* \"staking.sol\":8834:8852  balance >= _amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"staking.sol\":8826:8887  require(balance >= _amount, \"Not enough balance to withdraw\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_203\n      jump\t// in\n    tag_286:\n        /* \"staking.sol\":8898:8912  bool _isOnTime */\n      0x00\n        /* \"staking.sol\":8915:8938  isOnTime(_msgSender, 1) */\n      tag_288\n        /* \"staking.sol\":8924:8934  _msgSender */\n      dup4\n        /* \"staking.sol\":8936:8937  1 */\n      0x01\n        /* \"staking.sol\":8915:8923  isOnTime */\n      tag_157\n        /* \"staking.sol\":8915:8938  isOnTime(_msgSender, 1) */\n      jump\t// in\n    tag_288:\n        /* \"staking.sol\":8898:8938  bool _isOnTime = isOnTime(_msgSender, 1) */\n      swap1\n      pop\n        /* \"staking.sol\":8948:8964  uint256 earnings */\n      0x00\n        /* \"staking.sol\":8967:9002  getInterest(_msgSender, 1, _amount) */\n      tag_289\n        /* \"staking.sol\":8979:8989  _msgSender */\n      dup5\n        /* \"staking.sol\":8991:8992  1 */\n      0x01\n        /* \"staking.sol\":8994:9001  _amount */\n      dup8\n        /* \"staking.sol\":8967:8978  getInterest */\n      tag_91\n        /* \"staking.sol\":8967:9002  getInterest(_msgSender, 1, _amount) */\n      jump\t// in\n    tag_289:\n        /* \"staking.sol\":8948:9002  uint256 earnings = getInterest(_msgSender, 1, _amount) */\n      swap1\n      pop\n        /* \"staking.sol\":9027:9034  balance */\n      dup3\n        /* \"staking.sol\":9016:9023  _amount */\n      dup6\n        /* \"staking.sol\":9016:9034  _amount == balance */\n      eq\n        /* \"staking.sol\":9013:9215  if(_amount == balance){... */\n      iszero\n      tag_290\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":9056:9081  level1Balance[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":9056:9069  level1Balance */\n      0x0f\n        /* \"staking.sol\":9056:9081  level1Balance[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":9049:9081  delete level1Balance[_msgSender] */\n      dup4\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup5\n      swap1\n      sstore\n      0x02\n      add\n      dup4\n      swap1\n      sstore\n        /* \"staking.sol\":9101:9109  isLevel1 */\n      0x0e\n        /* \"staking.sol\":9101:9121  isLevel1[_msgSender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":9101:9129  isLevel1[_msgSender] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"staking.sol\":9013:9215  if(_amount == balance){... */\n      jump(tag_291)\n    tag_290:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":9160:9185  level1Balance[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":9160:9173  level1Balance */\n      0x0f\n        /* \"staking.sol\":9160:9185  level1Balance[_msgSender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"staking.sol\":9160:9204  level1Balance[_msgSender].balance -= _amount */\n      dup1\n      sload\n        /* \"staking.sol\":9197:9204  _amount */\n      dup8\n      swap3\n        /* \"staking.sol\":9160:9185  level1Balance[_msgSender] */\n      swap1\n        /* \"staking.sol\":9160:9204  level1Balance[_msgSender].balance -= _amount */\n      tag_292\n      swap1\n        /* \"staking.sol\":9197:9204  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":9160:9204  level1Balance[_msgSender].balance -= _amount */\n      tag_209\n      jump\t// in\n    tag_292:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":9013:9215  if(_amount == balance){... */\n    tag_291:\n        /* \"staking.sol\":9228:9237  _isOnTime */\n      dup2\n        /* \"staking.sol\":9225:9503  if(_isOnTime){... */\n      iszero\n      tag_293\n      jumpi\n        /* \"staking.sol\":9252:9265  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":9252:9295  acceptedToken.transfer(_msgSender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7287:7319   */\n      dup7\n      dup2\n      and\n        /* \"staking.sol\":9252:9295  acceptedToken.transfer(_msgSender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7269:7320   */\n      mstore\n        /* \"#utility.yul\":7336:7354   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7329:7363   */\n      dup9\n      swap1\n      mstore\n        /* \"staking.sol\":9252:9265  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":9252:9274  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7242:7260   */\n      0x44\n      add\n        /* \"staking.sol\":9252:9295  acceptedToken.transfer(_msgSender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_296:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_297\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_297:\n      pop\n        /* \"staking.sol\":9309:9322  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":9336:9349  reserveWallet */\n      sload(0x0b)\n        /* \"staking.sol\":9309:9372  acceptedToken.transferFrom(reserveWallet, _msgSender, earnings) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":9309:9322  acceptedToken */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"staking.sol\":9309:9335  acceptedToken.transferFrom */\n      0x23b872dd\n      swap3\n        /* \"staking.sol\":9309:9372  acceptedToken.transferFrom(reserveWallet, _msgSender, earnings) */\n      tag_298\n      swap3\n        /* \"staking.sol\":9336:9349  reserveWallet */\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":9351:9361  _msgSender */\n      dup9\n      swap1\n        /* \"staking.sol\":9363:9371  earnings */\n      dup7\n      swap1\n        /* \"staking.sol\":9309:9372  acceptedToken.transferFrom(reserveWallet, _msgSender, earnings) */\n      0x04\n      add\n      tag_176\n      jump\t// in\n    tag_298:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_300\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_300:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_301\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_301:\n      pop\n        /* \"staking.sol\":9225:9503  if(_isOnTime){... */\n      jump(tag_302)\n    tag_293:\n      pop\n        /* \"staking.sol\":9438:9451  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":9438:9481  acceptedToken.transfer(_msgSender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7287:7319   */\n      dup6\n      dup2\n      and\n        /* \"staking.sol\":9438:9481  acceptedToken.transfer(_msgSender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7269:7320   */\n      mstore\n        /* \"#utility.yul\":7336:7354   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7329:7363   */\n      dup8\n      swap1\n      mstore\n        /* \"staking.sol\":9414:9415  0 */\n      0x00\n      swap3\n        /* \"staking.sol\":9438:9451  acceptedToken */\n      and\n      swap1\n        /* \"staking.sol\":9438:9460  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7242:7260   */\n      0x44\n      add\n        /* \"staking.sol\":9438:9481  acceptedToken.transfer(_msgSender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_305\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_305:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_306\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_306:\n      pop\n        /* \"staking.sol\":9225:9503  if(_isOnTime){... */\n    tag_302:\n        /* \"staking.sol\":9518:9571  withdraw(_msgSender, 1, _isOnTime, _amount, earnings) */\n      0xa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b\n        /* \"staking.sol\":9527:9537  _msgSender */\n      dup5\n        /* \"staking.sol\":9539:9540  1 */\n      0x01\n        /* \"staking.sol\":9542:9551  _isOnTime */\n      dup5\n        /* \"staking.sol\":9553:9560  _amount */\n      dup9\n        /* \"staking.sol\":9562:9570  earnings */\n      dup6\n        /* \"staking.sol\":9518:9571  withdraw(_msgSender, 1, _isOnTime, _amount, earnings) */\n      mload(0x40)\n      tag_225\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n        /* \"staking.sol\":4766:5465  function enterVip (uint256 _amount) public whenNotPaused {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_311:\n        /* \"staking.sol\":4852:4863  levelVipMax */\n      sload(0x0a)\n        /* \"staking.sol\":4841:4848  _amount */\n      dup2\n        /* \"staking.sol\":4841:4863  _amount <= levelVipMax */\n      gt\n      iszero\n        /* \"staking.sol\":4841:4889  _amount <= levelVipMax && _amount >= levelVipMin */\n      dup1\n      iszero\n      tag_314\n      jumpi\n      pop\n        /* \"staking.sol\":4878:4889  levelVipMin */\n      sload(0x09)\n        /* \"staking.sol\":4867:4874  _amount */\n      dup2\n        /* \"staking.sol\":4867:4889  _amount >= levelVipMin */\n      lt\n      iszero\n        /* \"staking.sol\":4841:4889  _amount <= levelVipMax && _amount >= levelVipMin */\n    tag_314:\n        /* \"staking.sol\":4833:4944  require(_amount <= levelVipMax && _amount >= levelVipMin, \"Amount needs to be more than min and less than max\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_171\n      jump\t// in\n    tag_315:\n        /* \"staking.sol\":4975:4985  msg.sender */\n      caller\n        /* \"staking.sol\":4954:4972  address _msgSender */\n      0x00\n        /* \"staking.sol\":5017:5034  isVip[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":5017:5022  isVip */\n      0x10\n        /* \"staking.sol\":5017:5034  isVip[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"staking.sol\":5016:5034  !isVip[_msgSender] */\n      iszero\n        /* \"staking.sol\":5008:5070  require(!isVip[_msgSender], \"You're already in the Vip Stake\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9841:9843   */\n      0x20\n        /* \"staking.sol\":5008:5070  require(!isVip[_msgSender], \"You're already in the Vip Stake\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9823:9844   */\n      mstore\n        /* \"#utility.yul\":9880:9882   */\n      0x1f\n        /* \"#utility.yul\":9860:9878   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9853:9883   */\n      mstore\n        /* \"#utility.yul\":9919:9952   */\n      0x596f7527726520616c726561647920696e2074686520566970205374616b6500\n        /* \"#utility.yul\":9899:9917   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9892:9953   */\n      mstore\n        /* \"#utility.yul\":9970:9988   */\n      0x64\n      add\n        /* \"staking.sol\":5008:5070  require(!isVip[_msgSender], \"You're already in the Vip Stake\") */\n      tag_165\n        /* \"#utility.yul\":9639:9994   */\n      jump\n        /* \"staking.sol\":5008:5070  require(!isVip[_msgSender], \"You're already in the Vip Stake\") */\n    tag_317:\n        /* \"staking.sol\":5089:5102  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":5089:5151  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":5089:5102  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":5089:5115  acceptedToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"staking.sol\":5089:5151  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      tag_320\n      swap1\n        /* \"staking.sol\":5116:5126  _msgSender */\n      dup5\n      swap1\n        /* \"staking.sol\":5136:5140  this */\n      address\n      swap1\n        /* \"staking.sol\":5143:5150  _amount */\n      dup8\n      swap1\n        /* \"staking.sol\":5089:5151  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x04\n      add\n      tag_176\n      jump\t// in\n    tag_320:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_322\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_322:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_323\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_323:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":5162:5179  isVip[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5162:5167  isVip */\n      0x10\n        /* \"staking.sol\":5162:5179  isVip[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":5162:5186  isVip[_msgSender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"staking.sol\":5182:5186  true */\n      0x01\n        /* \"staking.sol\":5162:5186  isVip[_msgSender] = true */\n      or\n      swap1\n      sstore\n        /* \"staking.sol\":5221:5359  _user ({... */\n      dup2\n      mload\n      0x60\n      dup2\n      add\n      dup4\n      mstore\n      dup5\n      dup2\n      mstore\n        /* \"staking.sol\":5283:5298  block.timestamp */\n      timestamp\n        /* \"staking.sol\":5221:5359  _user ({... */\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap2\n      dup3\n      add\n      swap1\n        /* \"staking.sol\":5323:5348  block.timestamp + 90 days */\n      tag_324\n      swap1\n        /* \"staking.sol\":5341:5348  90 days */\n      0x76a700\n        /* \"staking.sol\":5323:5348  block.timestamp + 90 days */\n      tag_182\n      jump\t// in\n    tag_324:\n        /* \"staking.sol\":5221:5359  _user ({... */\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":5196:5218  vipBalance[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5196:5206  vipBalance */\n      0x11\n        /* \"staking.sol\":5196:5218  vipBalance[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":5196:5359  vipBalance[_msgSender] = _user ({... */\n      dup4\n      mload\n      dup2\n      sstore\n      swap1\n      dup4\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      swap2\n      add\n      mload\n      0x02\n      swap2\n      dup3\n      add\n      sstore\n        /* \"staking.sol\":5382:5458  deposit (_msgSender, 2, _amount, block.timestamp, block.timestamp + 90 days) */\n      0x17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f23\n      swap1\n        /* \"staking.sol\":5207:5217  _msgSender */\n      dup3\n      swap1\n        /* \"staking.sol\":5406:5413  _amount */\n      dup5\n        /* \"staking.sol\":5415:5430  block.timestamp */\n      timestamp\n        /* \"staking.sol\":5432:5457  block.timestamp + 90 days */\n      tag_183\n        /* \"staking.sol\":5415:5430  block.timestamp */\n      dup2\n        /* \"staking.sol\":5450:5457  90 days */\n      0x76a700\n        /* \"staking.sol\":5432:5457  block.timestamp + 90 days */\n      tag_182\n      jump\t// in\n        /* \"staking.sol\":2019:2138  function setReserveWallet (address _reserveWallet) external onlyOwner{... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_192\n      jump\t// in\n    tag_331:\n        /* \"staking.sol\":2098:2111  reserveWallet */\n      0x0b\n        /* \"staking.sol\":2098:2128  reserveWallet = _reserveWallet */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"staking.sol\":2019:2138  function setReserveWallet (address _reserveWallet) external onlyOwner{... */\n      jump\t// out\n        /* \"staking.sol\":2205:2413  function setNewAPY ( uint256 _level0APY, uint256 _level1APY, uint256 _vipLevelAPY) external onlyOwner{... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_337\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_192\n      jump\t// in\n    tag_337:\n        /* \"staking.sol\":2316:2325  level0APY */\n      0x02\n        /* \"staking.sol\":2316:2338  level0APY = _level0APY */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"staking.sol\":2348:2357  level1APY */\n      0x03\n        /* \"staking.sol\":2348:2370  level1APY = _level1APY */\n      sstore\n        /* \"staking.sol\":2380:2391  vipLevelAPY */\n      0x04\n        /* \"staking.sol\":2380:2406  vipLevelAPY = _vipLevelAPY */\n      sstore\n        /* \"staking.sol\":2205:2413  function setNewAPY ( uint256 _level0APY, uint256 _level1APY, uint256 _vipLevelAPY) external onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_192\n      jump\t// in\n    tag_343:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10712:10714   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10694:10715   */\n      mstore\n        /* \"#utility.yul\":10751:10753   */\n      0x26\n        /* \"#utility.yul\":10731:10749   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10724:10754   */\n      mstore\n        /* \"#utility.yul\":10790:10824   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":10770:10788   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10763:10825   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":10841:10859   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10834:10870   */\n      mstore\n        /* \"#utility.yul\":10887:10906   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_165\n        /* \"#utility.yul\":10510:10912   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_346:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_349\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_245\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_349:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":2495:2867  function setNewMaxMin (uint256 _level0Min, uint256 _level0Max, uint256 _level1Min, uint256 _level1Max, uint256 _levelVipMin, uint256 _levelVipMax) external onlyOwner{... */\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_192\n      jump\t// in\n    tag_353:\n        /* \"staking.sol\":2670:2679  level0Min */\n      0x05\n        /* \"staking.sol\":2670:2692  level0Min = _level0Min */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"staking.sol\":2702:2711  level0Max */\n      0x06\n        /* \"staking.sol\":2702:2724  level0Max = _level0Max */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"staking.sol\":2734:2743  level1Min */\n      0x07\n        /* \"staking.sol\":2734:2756  level1Min = _level1Min */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"staking.sol\":2766:2775  level1Max */\n      0x08\n        /* \"staking.sol\":2766:2788  level1Max = _level1Max */\n      sstore\n        /* \"staking.sol\":2798:2809  levelVipMin */\n      0x09\n        /* \"staking.sol\":2798:2824  levelVipMin = _levelVipMin */\n      sstore\n        /* \"staking.sol\":2834:2845  levelVipMax */\n      0x0a\n        /* \"staking.sol\":2834:2860  levelVipMax = _levelVipMax */\n      sstore\n        /* \"staking.sol\":2495:2867  function setNewMaxMin (uint256 _level0Min, uint256 _level0Max, uint256 _level1Min, uint256 _level1Max, uint256 _levelVipMin, uint256 _levelVipMax) external onlyOwner{... */\n      jump\t// out\n        /* \"staking.sol\":5610:6109  function isOnTime (address user, uint8 class) public view returns (bool) {... */\n    tag_157:\n        /* \"staking.sol\":5677:5681  bool */\n      0x00\n      dup1\n        /* \"staking.sol\":5725:5735  class == 0 */\n      0xff\n      dup4\n      and\n        /* \"staking.sol\":5722:6056  if(class == 0){... */\n      tag_357\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":5764:5783  level0Balance[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5764:5777  level0Balance */\n      0x0d\n        /* \"staking.sol\":5764:5783  level0Balance[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":5764:5794  level0Balance[user].timeFinish */\n      0x02\n      add\n      sload\n        /* \"staking.sol\":5722:6056  if(class == 0){... */\n      jump(tag_362)\n    tag_357:\n        /* \"staking.sol\":5826:5831  class */\n      dup3\n        /* \"staking.sol\":5826:5836  class == 1 */\n      0xff\n      and\n        /* \"staking.sol\":5835:5836  1 */\n      0x01\n        /* \"staking.sol\":5826:5836  class == 1 */\n      eq\n        /* \"staking.sol\":5822:6056  if (class == 1){... */\n      iszero\n      tag_359\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":5865:5884  level1Balance[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5865:5878  level1Balance */\n      0x0f\n        /* \"staking.sol\":5865:5884  level1Balance[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":5865:5895  level1Balance[user].timeFinish */\n      0x02\n      add\n      sload\n        /* \"staking.sol\":5822:6056  if (class == 1){... */\n      jump(tag_362)\n    tag_359:\n        /* \"staking.sol\":5925:5930  class */\n      dup3\n        /* \"staking.sol\":5925:5935  class == 2 */\n      0xff\n      and\n        /* \"staking.sol\":5934:5935  2 */\n      0x02\n        /* \"staking.sol\":5925:5935  class == 2 */\n      eq\n        /* \"staking.sol\":5921:6056  if (class == 2){... */\n      iszero\n      tag_361\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":5964:5980  vipBalance[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5964:5974  vipBalance */\n      0x11\n        /* \"staking.sol\":5964:5980  vipBalance[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":5964:5991  vipBalance[user].timeFinish */\n      0x02\n      add\n      sload\n        /* \"staking.sol\":5921:6056  if (class == 2){... */\n      jump(tag_362)\n    tag_361:\n        /* \"staking.sol\":6040:6045  false */\n      0x00\n        /* \"staking.sol\":6033:6045  return false */\n      swap2\n      pop\n      pop\n      jump(tag_356)\n        /* \"staking.sol\":5921:6056  if (class == 2){... */\n    tag_362:\n        /* \"staking.sol\":6072:6087  block.timestamp */\n      timestamp\n        /* \"staking.sol\":6072:6102  block.timestamp >= releaseTime */\n      lt\n      iszero\n      swap1\n      pop\n        /* \"staking.sol\":5610:6109  function isOnTime (address user, uint8 class) public view returns (bool) {... */\n    tag_356:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":3016:3717  function enterLevel0 (uint256 _amount) public whenNotPaused {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_365:\n        /* \"staking.sol\":3105:3114  level0Max */\n      sload(0x06)\n        /* \"staking.sol\":3094:3101  _amount */\n      dup2\n        /* \"staking.sol\":3094:3114  _amount <= level0Max */\n      gt\n      iszero\n        /* \"staking.sol\":3094:3138  _amount <= level0Max && _amount >= level0Min */\n      dup1\n      iszero\n      tag_368\n      jumpi\n      pop\n        /* \"staking.sol\":3129:3138  level0Min */\n      sload(0x05)\n        /* \"staking.sol\":3118:3125  _amount */\n      dup2\n        /* \"staking.sol\":3118:3138  _amount >= level0Min */\n      lt\n      iszero\n        /* \"staking.sol\":3094:3138  _amount <= level0Max && _amount >= level0Min */\n    tag_368:\n        /* \"staking.sol\":3086:3193  require(_amount <= level0Max && _amount >= level0Min, \"Amount needs to be more than min and less than max\") */\n      tag_369\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_171\n      jump\t// in\n    tag_369:\n        /* \"staking.sol\":3224:3234  msg.sender */\n      caller\n        /* \"staking.sol\":3203:3221  address _msgSender */\n      0x00\n        /* \"staking.sol\":3258:3278  isLevel0[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":3258:3266  isLevel0 */\n      0x0c\n        /* \"staking.sol\":3258:3278  isLevel0[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"staking.sol\":3257:3278  !isLevel0[_msgSender] */\n      iszero\n        /* \"staking.sol\":3249:3317  require(!isLevel0[_msgSender], \"You're already in this Stake level\") */\n      tag_371\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_174\n      jump\t// in\n    tag_371:\n        /* \"staking.sol\":3332:3345  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":3332:3394  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3332:3345  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":3332:3358  acceptedToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"staking.sol\":3332:3394  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      tag_373\n      swap1\n        /* \"staking.sol\":3359:3369  _msgSender */\n      dup5\n      swap1\n        /* \"staking.sol\":3379:3383  this */\n      address\n      swap1\n        /* \"staking.sol\":3386:3393  _amount */\n      dup8\n      swap1\n        /* \"staking.sol\":3332:3394  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x04\n      add\n      tag_176\n      jump\t// in\n    tag_373:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_375\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_375:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_376\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_376:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3405:3425  isLevel0[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3405:3413  isLevel0 */\n      0x0c\n        /* \"staking.sol\":3405:3425  isLevel0[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":3405:3432  isLevel0[_msgSender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"staking.sol\":3428:3432  true */\n      0x01\n        /* \"staking.sol\":3405:3432  isLevel0[_msgSender] = true */\n      or\n      swap1\n      sstore\n        /* \"staking.sol\":3470:3610  _user ({... */\n      dup2\n      mload\n      0x60\n      dup2\n      add\n      dup4\n      mstore\n      dup5\n      dup2\n      mstore\n        /* \"staking.sol\":3534:3549  block.timestamp */\n      timestamp\n        /* \"staking.sol\":3470:3610  _user ({... */\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap2\n      dup3\n      add\n      swap1\n        /* \"staking.sol\":3575:3599  block.timestamp + 7 days */\n      tag_377\n      swap1\n        /* \"staking.sol\":3593:3599  7 days */\n      0x093a80\n        /* \"staking.sol\":3575:3599  block.timestamp + 7 days */\n      tag_182\n      jump\t// in\n    tag_377:\n        /* \"staking.sol\":3470:3610  _user ({... */\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":3442:3467  level0Balance[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":3442:3455  level0Balance */\n      0x0d\n        /* \"staking.sol\":3442:3467  level0Balance[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":3442:3610  level0Balance[_msgSender] = _user ({... */\n      dup5\n      mload\n      dup2\n      sstore\n      swap2\n      dup5\n      add\n      mload\n      0x01\n      dup4\n      add\n      sstore\n      swap3\n      swap1\n      swap3\n      add\n      mload\n      0x02\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"staking.sol\":3635:3710  deposit (_msgSender, 0, _amount, block.timestamp, block.timestamp + 7 days) */\n      0x17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f23\n      swap1\n        /* \"staking.sol\":3456:3466  _msgSender */\n      dup3\n      swap1\n        /* \"staking.sol\":3659:3666  _amount */\n      dup5\n        /* \"staking.sol\":3668:3683  block.timestamp */\n      timestamp\n        /* \"staking.sol\":3685:3709  block.timestamp + 7 days */\n      tag_183\n        /* \"staking.sol\":3668:3683  block.timestamp */\n      dup2\n        /* \"staking.sol\":3703:3709  7 days */\n      0x093a80\n        /* \"staking.sol\":3685:3709  block.timestamp + 7 days */\n      tag_182\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11630:11632   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11612:11633   */\n      mstore\n        /* \"#utility.yul\":11669:11671   */\n      0x14\n        /* \"#utility.yul\":11649:11667   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11642:11672   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":11688:11706   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11681:11731   */\n      mstore\n        /* \"#utility.yul\":11748:11766   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_165\n        /* \"#utility.yul\":11428:11772   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n    tag_384:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2178:2183  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2168:2183  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2207:2219  _msgSender() */\n    tag_388:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":559:591   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":541:592   */\n      dup2\n      mstore\n        /* \"#utility.yul\":529:531   */\n      0x20\n        /* \"#utility.yul\":514:532   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"staking.sol\":6936:7300  function calculateInterest (uint256 _balance, uint256 _timeStarted, uint256 _APY) internal view returns (uint256){... */\n    tag_230:\n        /* \"staking.sol\":7041:7048  uint256 */\n      0x00\n      dup1\n        /* \"staking.sol\":7080:7110  block.timestamp - _timeStarted */\n      tag_391\n        /* \"staking.sol\":7098:7110  _timeStarted */\n      dup5\n        /* \"staking.sol\":7080:7095  block.timestamp */\n      timestamp\n        /* \"staking.sol\":7080:7110  block.timestamp - _timeStarted */\n      tag_209\n      jump\t// in\n    tag_391:\n        /* \"staking.sol\":7059:7110  uint256 timeStaked = block.timestamp - _timeStarted */\n      swap1\n      pop\n        /* \"staking.sol\":7128:7153  uint256 interestPerSecond */\n      0x00\n        /* \"staking.sol\":7186:7194  365 days */\n      0x01e13380\n        /* \"staking.sol\":7177:7182  10000 */\n      0x2710\n        /* \"staking.sol\":7158:7173  _balance * _APY */\n      tag_392\n        /* \"staking.sol\":7169:7173  _APY */\n      dup7\n        /* \"staking.sol\":7158:7166  _balance */\n      dup10\n        /* \"staking.sol\":7158:7173  _balance * _APY */\n      tag_393\n      jump\t// in\n    tag_392:\n        /* \"staking.sol\":7157:7182  (_balance * _APY) / 10000 */\n      tag_394\n      swap2\n      swap1\n      tag_395\n      jump\t// in\n    tag_394:\n        /* \"staking.sol\":7156:7194  ((_balance * _APY) / 10000) / 365 days */\n      tag_396\n      swap2\n      swap1\n      tag_395\n      jump\t// in\n    tag_396:\n        /* \"staking.sol\":7128:7194  uint256 interestPerSecond = ((_balance * _APY) / 10000) / 365 days */\n      swap1\n      pop\n        /* \"staking.sol\":7204:7227  uint256 interestsEarned */\n      0x00\n        /* \"staking.sol\":7230:7260  timeStaked * interestPerSecond */\n      tag_397\n        /* \"staking.sol\":7128:7194  uint256 interestPerSecond = ((_balance * _APY) / 10000) / 365 days */\n      dup3\n        /* \"staking.sol\":7230:7240  timeStaked */\n      dup5\n        /* \"staking.sol\":7230:7260  timeStaked * interestPerSecond */\n      tag_393\n      jump\t// in\n    tag_397:\n        /* \"staking.sol\":7204:7260  uint256 interestsEarned = timeStaked * interestPerSecond */\n      swap8\n        /* \"staking.sol\":6936:7300  function calculateInterest (uint256 _balance, uint256 _timeStarted, uint256 _APY) internal view returns (uint256){... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1863:1978  function _pause() internal virtual whenNotPaused {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_401\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_401:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1929  _paused */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1936  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1951:1971  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1958:1970  _msgSender() */\n      tag_388\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"#utility.yul\":196:376   */\n    tag_50:\n        /* \"#utility.yul\":255:261   */\n      0x00\n        /* \"#utility.yul\":308:310   */\n      0x20\n        /* \"#utility.yul\":296:305   */\n      dup3\n        /* \"#utility.yul\":287:294   */\n      dup5\n        /* \"#utility.yul\":283:306   */\n      sub\n        /* \"#utility.yul\":279:311   */\n      slt\n        /* \"#utility.yul\":276:328   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":324:325   */\n      0x00\n        /* \"#utility.yul\":321:322   */\n      dup1\n        /* \"#utility.yul\":314:326   */\n      revert\n        /* \"#utility.yul\":276:328   */\n    tag_412:\n      pop\n        /* \"#utility.yul\":347:370   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":196:376   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":795:968   */\n    tag_406:\n        /* \"#utility.yul\":863:883   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":912:943   */\n      dup2\n      and\n        /* \"#utility.yul\":902:944   */\n      dup2\n      eq\n        /* \"#utility.yul\":892:962   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":955:956   */\n      dup1\n        /* \"#utility.yul\":948:960   */\n      revert\n        /* \"#utility.yul\":892:962   */\n    tag_416:\n        /* \"#utility.yul\":795:968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":973:1159   */\n    tag_70:\n        /* \"#utility.yul\":1032:1038   */\n      0x00\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1073:1082   */\n      dup3\n        /* \"#utility.yul\":1064:1071   */\n      dup5\n        /* \"#utility.yul\":1060:1083   */\n      sub\n        /* \"#utility.yul\":1056:1088   */\n      slt\n        /* \"#utility.yul\":1053:1105   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":1101:1102   */\n      0x00\n        /* \"#utility.yul\":1098:1099   */\n      dup1\n        /* \"#utility.yul\":1091:1103   */\n      revert\n        /* \"#utility.yul\":1053:1105   */\n    tag_418:\n        /* \"#utility.yul\":1124:1153   */\n      tag_237\n        /* \"#utility.yul\":1143:1152   */\n      dup3\n        /* \"#utility.yul\":1124:1153   */\n      tag_406\n      jump\t// in\n        /* \"#utility.yul\":1488:1644   */\n    tag_407:\n        /* \"#utility.yul\":1554:1574   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1614:1618   */\n      0xff\n        /* \"#utility.yul\":1603:1619   */\n      dup2\n      and\n        /* \"#utility.yul\":1593:1620   */\n      dup2\n      eq\n        /* \"#utility.yul\":1583:1638   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":1634:1635   */\n      0x00\n        /* \"#utility.yul\":1631:1632   */\n      dup1\n        /* \"#utility.yul\":1624:1636   */\n      revert\n        /* \"#utility.yul\":1649:1973   */\n    tag_90:\n        /* \"#utility.yul\":1724:1730   */\n      0x00\n        /* \"#utility.yul\":1732:1738   */\n      dup1\n        /* \"#utility.yul\":1740:1746   */\n      0x00\n        /* \"#utility.yul\":1793:1795   */\n      0x60\n        /* \"#utility.yul\":1781:1790   */\n      dup5\n        /* \"#utility.yul\":1772:1779   */\n      dup7\n        /* \"#utility.yul\":1768:1791   */\n      sub\n        /* \"#utility.yul\":1764:1796   */\n      slt\n        /* \"#utility.yul\":1761:1813   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":1809:1810   */\n      0x00\n        /* \"#utility.yul\":1806:1807   */\n      dup1\n        /* \"#utility.yul\":1799:1811   */\n      revert\n        /* \"#utility.yul\":1761:1813   */\n    tag_424:\n        /* \"#utility.yul\":1832:1861   */\n      tag_425\n        /* \"#utility.yul\":1851:1860   */\n      dup5\n        /* \"#utility.yul\":1832:1861   */\n      tag_406\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":1822:1861   */\n      swap3\n      pop\n        /* \"#utility.yul\":1880:1916   */\n      tag_426\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1901:1910   */\n      dup6\n        /* \"#utility.yul\":1897:1915   */\n      add\n        /* \"#utility.yul\":1880:1916   */\n      tag_407\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":1870:1916   */\n      swap2\n      pop\n        /* \"#utility.yul\":1963:1965   */\n      0x40\n        /* \"#utility.yul\":1952:1961   */\n      dup5\n        /* \"#utility.yul\":1948:1966   */\n      add\n        /* \"#utility.yul\":1935:1967   */\n      calldataload\n        /* \"#utility.yul\":1925:1967   */\n      swap1\n      pop\n        /* \"#utility.yul\":1649:1973   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2186:2502   */\n    tag_145:\n        /* \"#utility.yul\":2263:2269   */\n      0x00\n        /* \"#utility.yul\":2271:2277   */\n      dup1\n        /* \"#utility.yul\":2279:2285   */\n      0x00\n        /* \"#utility.yul\":2332:2334   */\n      0x60\n        /* \"#utility.yul\":2320:2329   */\n      dup5\n        /* \"#utility.yul\":2311:2318   */\n      dup7\n        /* \"#utility.yul\":2307:2330   */\n      sub\n        /* \"#utility.yul\":2303:2335   */\n      slt\n        /* \"#utility.yul\":2300:2352   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2345:2346   */\n      dup1\n        /* \"#utility.yul\":2338:2350   */\n      revert\n        /* \"#utility.yul\":2300:2352   */\n    tag_429:\n      pop\n      pop\n        /* \"#utility.yul\":2371:2394   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":2441:2443   */\n      0x20\n        /* \"#utility.yul\":2426:2444   */\n      dup4\n      add\n        /* \"#utility.yul\":2413:2445   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2492:2494   */\n      0x40\n        /* \"#utility.yul\":2477:2495   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2464:2496   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2186:2502   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2507:3030   */\n    tag_152:\n        /* \"#utility.yul\":2611:2617   */\n      0x00\n        /* \"#utility.yul\":2619:2625   */\n      dup1\n        /* \"#utility.yul\":2627:2633   */\n      0x00\n        /* \"#utility.yul\":2635:2641   */\n      dup1\n        /* \"#utility.yul\":2643:2649   */\n      0x00\n        /* \"#utility.yul\":2651:2657   */\n      dup1\n        /* \"#utility.yul\":2704:2707   */\n      0xc0\n        /* \"#utility.yul\":2692:2701   */\n      dup8\n        /* \"#utility.yul\":2683:2690   */\n      dup10\n        /* \"#utility.yul\":2679:2702   */\n      sub\n        /* \"#utility.yul\":2675:2708   */\n      slt\n        /* \"#utility.yul\":2672:2725   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":2721:2722   */\n      0x00\n        /* \"#utility.yul\":2718:2719   */\n      dup1\n        /* \"#utility.yul\":2711:2723   */\n      revert\n        /* \"#utility.yul\":2672:2725   */\n    tag_431:\n      pop\n      pop\n        /* \"#utility.yul\":2744:2767   */\n      dup5\n      calldataload\n      swap7\n        /* \"#utility.yul\":2814:2816   */\n      0x20\n        /* \"#utility.yul\":2799:2817   */\n      dup7\n      add\n        /* \"#utility.yul\":2786:2818   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":2865:2867   */\n      0x40\n        /* \"#utility.yul\":2850:2868   */\n      dup7\n      add\n        /* \"#utility.yul\":2837:2869   */\n      calldataload\n      swap6\n        /* \"#utility.yul\":2916:2918   */\n      0x60\n        /* \"#utility.yul\":2901:2919   */\n      dup2\n      add\n        /* \"#utility.yul\":2888:2920   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2967:2970   */\n      0x80\n        /* \"#utility.yul\":2952:2971   */\n      dup2\n      add\n        /* \"#utility.yul\":2939:2972   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":3019:3022   */\n      0xa0\n        /* \"#utility.yul\":3004:3023   */\n      add\n        /* \"#utility.yul\":2991:3024   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":2507:3030   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3035:3291   */\n    tag_156:\n        /* \"#utility.yul\":3101:3107   */\n      0x00\n        /* \"#utility.yul\":3109:3115   */\n      dup1\n        /* \"#utility.yul\":3162:3164   */\n      0x40\n        /* \"#utility.yul\":3150:3159   */\n      dup4\n        /* \"#utility.yul\":3141:3148   */\n      dup6\n        /* \"#utility.yul\":3137:3160   */\n      sub\n        /* \"#utility.yul\":3133:3165   */\n      slt\n        /* \"#utility.yul\":3130:3182   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":3178:3179   */\n      0x00\n        /* \"#utility.yul\":3175:3176   */\n      dup1\n        /* \"#utility.yul\":3168:3180   */\n      revert\n        /* \"#utility.yul\":3130:3182   */\n    tag_433:\n        /* \"#utility.yul\":3201:3230   */\n      tag_434\n        /* \"#utility.yul\":3220:3229   */\n      dup4\n        /* \"#utility.yul\":3201:3230   */\n      tag_406\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":3191:3230   */\n      swap2\n      pop\n        /* \"#utility.yul\":3249:3285   */\n      tag_435\n        /* \"#utility.yul\":3281:3283   */\n      0x20\n        /* \"#utility.yul\":3270:3279   */\n      dup5\n        /* \"#utility.yul\":3266:3284   */\n      add\n        /* \"#utility.yul\":3249:3285   */\n      tag_407\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3239:3285   */\n      swap1\n      pop\n        /* \"#utility.yul\":3035:3291   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3296:3636   */\n    tag_166:\n        /* \"#utility.yul\":3498:3500   */\n      0x20\n        /* \"#utility.yul\":3480:3501   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3537:3539   */\n      0x10\n        /* \"#utility.yul\":3517:3535   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3510:3540   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":3571:3573   */\n      0x40\n        /* \"#utility.yul\":3556:3574   */\n      dup3\n      add\n        /* \"#utility.yul\":3549:3595   */\n      mstore\n        /* \"#utility.yul\":3627:3629   */\n      0x60\n        /* \"#utility.yul\":3612:3630   */\n      add\n      swap1\n        /* \"#utility.yul\":3296:3636   */\n      jump\t// out\n        /* \"#utility.yul\":3641:4055   */\n    tag_171:\n        /* \"#utility.yul\":3843:3845   */\n      0x20\n        /* \"#utility.yul\":3825:3846   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3882:3884   */\n      0x32\n        /* \"#utility.yul\":3862:3880   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3855:3885   */\n      mstore\n        /* \"#utility.yul\":3921:3955   */\n      0x416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e\n        /* \"#utility.yul\":3916:3918   */\n      0x40\n        /* \"#utility.yul\":3901:3919   */\n      dup3\n      add\n        /* \"#utility.yul\":3894:3956   */\n      mstore\n      shl(0x73, 0x040c2dcc840d8cae6e640e8d0c2dc40dac2f)\n        /* \"#utility.yul\":3987:3989   */\n      0x60\n        /* \"#utility.yul\":3972:3990   */\n      dup3\n      add\n        /* \"#utility.yul\":3965:4013   */\n      mstore\n        /* \"#utility.yul\":4045:4048   */\n      0x80\n        /* \"#utility.yul\":4030:4049   */\n      add\n      swap1\n        /* \"#utility.yul\":3641:4055   */\n      jump\t// out\n        /* \"#utility.yul\":4060:4458   */\n    tag_174:\n        /* \"#utility.yul\":4262:4264   */\n      0x20\n        /* \"#utility.yul\":4244:4265   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4301:4303   */\n      0x22\n        /* \"#utility.yul\":4281:4299   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4274:4304   */\n      mstore\n        /* \"#utility.yul\":4340:4374   */\n      0x596f7527726520616c726561647920696e2074686973205374616b65206c6576\n        /* \"#utility.yul\":4335:4337   */\n      0x40\n        /* \"#utility.yul\":4320:4338   */\n      dup3\n      add\n        /* \"#utility.yul\":4313:4375   */\n      mstore\n      shl(0xf2, 0x195b)\n        /* \"#utility.yul\":4406:4408   */\n      0x60\n        /* \"#utility.yul\":4391:4409   */\n      dup3\n      add\n        /* \"#utility.yul\":4384:4416   */\n      mstore\n        /* \"#utility.yul\":4448:4451   */\n      0x80\n        /* \"#utility.yul\":4433:4452   */\n      add\n      swap1\n        /* \"#utility.yul\":4060:4458   */\n      jump\t// out\n        /* \"#utility.yul\":4463:4838   */\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4721:4736   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":4703:4737   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4773:4788   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":4768:4770   */\n      0x20\n        /* \"#utility.yul\":4753:4771   */\n      dup3\n      add\n        /* \"#utility.yul\":4746:4789   */\n      mstore\n        /* \"#utility.yul\":4820:4822   */\n      0x40\n        /* \"#utility.yul\":4805:4823   */\n      dup2\n      add\n        /* \"#utility.yul\":4798:4832   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4653:4655   */\n      0x60\n        /* \"#utility.yul\":4638:4656   */\n      add\n      swap1\n        /* \"#utility.yul\":4463:4838   */\n      jump\t// out\n        /* \"#utility.yul\":4843:5120   */\n    tag_180:\n        /* \"#utility.yul\":4910:4916   */\n      0x00\n        /* \"#utility.yul\":4963:4965   */\n      0x20\n        /* \"#utility.yul\":4951:4960   */\n      dup3\n        /* \"#utility.yul\":4942:4949   */\n      dup5\n        /* \"#utility.yul\":4938:4961   */\n      sub\n        /* \"#utility.yul\":4934:4966   */\n      slt\n        /* \"#utility.yul\":4931:4983   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":4979:4980   */\n      0x00\n        /* \"#utility.yul\":4976:4977   */\n      dup1\n        /* \"#utility.yul\":4969:4981   */\n      revert\n        /* \"#utility.yul\":4931:4983   */\n    tag_441:\n        /* \"#utility.yul\":5011:5020   */\n      dup2\n        /* \"#utility.yul\":5005:5021   */\n      mload\n        /* \"#utility.yul\":5064:5069   */\n      dup1\n        /* \"#utility.yul\":5057:5070   */\n      iszero\n        /* \"#utility.yul\":5050:5071   */\n      iszero\n        /* \"#utility.yul\":5043:5048   */\n      dup2\n        /* \"#utility.yul\":5040:5072   */\n      eq\n        /* \"#utility.yul\":5030:5090   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":5086:5087   */\n      0x00\n        /* \"#utility.yul\":5083:5084   */\n      dup1\n        /* \"#utility.yul\":5076:5088   */\n      revert\n        /* \"#utility.yul\":5125:5252   */\n    tag_408:\n        /* \"#utility.yul\":5186:5196   */\n      0x4e487b71\n        /* \"#utility.yul\":5181:5184   */\n      0xe0\n        /* \"#utility.yul\":5177:5197   */\n      shl\n        /* \"#utility.yul\":5174:5175   */\n      0x00\n        /* \"#utility.yul\":5167:5198   */\n      mstore\n        /* \"#utility.yul\":5217:5221   */\n      0x11\n        /* \"#utility.yul\":5214:5215   */\n      0x04\n        /* \"#utility.yul\":5207:5222   */\n      mstore\n        /* \"#utility.yul\":5241:5245   */\n      0x24\n        /* \"#utility.yul\":5238:5239   */\n      0x00\n        /* \"#utility.yul\":5231:5246   */\n      revert\n        /* \"#utility.yul\":5257:5385   */\n    tag_182:\n        /* \"#utility.yul\":5297:5300   */\n      0x00\n        /* \"#utility.yul\":5328:5329   */\n      dup3\n        /* \"#utility.yul\":5324:5330   */\n      not\n        /* \"#utility.yul\":5321:5322   */\n      dup3\n        /* \"#utility.yul\":5318:5331   */\n      gt\n        /* \"#utility.yul\":5315:5354   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":5334:5352   */\n      tag_446\n      tag_408\n      jump\t// in\n    tag_446:\n      pop\n        /* \"#utility.yul\":5370:5379   */\n      add\n      swap1\n        /* \"#utility.yul\":5257:5385   */\n      jump\t// out\n        /* \"#utility.yul\":5901:6257   */\n    tag_192:\n        /* \"#utility.yul\":6103:6105   */\n      0x20\n        /* \"#utility.yul\":6085:6106   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6122:6140   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":6115:6145   */\n      mstore\n        /* \"#utility.yul\":6181:6215   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6176:6178   */\n      0x40\n        /* \"#utility.yul\":6161:6179   */\n      dup3\n      add\n        /* \"#utility.yul\":6154:6216   */\n      mstore\n        /* \"#utility.yul\":6248:6250   */\n      0x60\n        /* \"#utility.yul\":6233:6251   */\n      add\n      swap1\n        /* \"#utility.yul\":5901:6257   */\n      jump\t// out\n        /* \"#utility.yul\":6606:6960   */\n    tag_203:\n        /* \"#utility.yul\":6808:6810   */\n      0x20\n        /* \"#utility.yul\":6790:6811   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6847:6849   */\n      0x1e\n        /* \"#utility.yul\":6827:6845   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6820:6850   */\n      mstore\n        /* \"#utility.yul\":6886:6918   */\n      0x4e6f7420656e6f7567682062616c616e636520746f2077697468647261770000\n        /* \"#utility.yul\":6881:6883   */\n      0x40\n        /* \"#utility.yul\":6866:6884   */\n      dup3\n      add\n        /* \"#utility.yul\":6859:6919   */\n      mstore\n        /* \"#utility.yul\":6951:6953   */\n      0x60\n        /* \"#utility.yul\":6936:6954   */\n      add\n      swap1\n        /* \"#utility.yul\":6606:6960   */\n      jump\t// out\n        /* \"#utility.yul\":6965:7090   */\n    tag_209:\n        /* \"#utility.yul\":7005:7009   */\n      0x00\n        /* \"#utility.yul\":7033:7034   */\n      dup3\n        /* \"#utility.yul\":7030:7031   */\n      dup3\n        /* \"#utility.yul\":7027:7035   */\n      lt\n        /* \"#utility.yul\":7024:7058   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":7038:7056   */\n      tag_453\n      tag_408\n      jump\t// in\n    tag_453:\n      pop\n        /* \"#utility.yul\":7075:7084   */\n      sub\n      swap1\n        /* \"#utility.yul\":6965:7090   */\n      jump\t// out\n        /* \"#utility.yul\":7374:7890   */\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7651:7683   */\n      swap6\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":7633:7684   */\n      dup6\n      mstore\n        /* \"#utility.yul\":7732:7736   */\n      0xff\n        /* \"#utility.yul\":7720:7737   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":7715:7717   */\n      0x20\n        /* \"#utility.yul\":7700:7718   */\n      dup6\n      add\n        /* \"#utility.yul\":7693:7738   */\n      mstore\n        /* \"#utility.yul\":7781:7795   */\n      swap1\n      iszero\n        /* \"#utility.yul\":7774:7796   */\n      iszero\n        /* \"#utility.yul\":7769:7771   */\n      0x40\n        /* \"#utility.yul\":7754:7772   */\n      dup5\n      add\n        /* \"#utility.yul\":7747:7797   */\n      mstore\n        /* \"#utility.yul\":7828:7830   */\n      0x60\n        /* \"#utility.yul\":7813:7831   */\n      dup4\n      add\n        /* \"#utility.yul\":7806:7840   */\n      mstore\n        /* \"#utility.yul\":7871:7874   */\n      0x80\n        /* \"#utility.yul\":7856:7875   */\n      dup3\n      add\n        /* \"#utility.yul\":7849:7884   */\n      mstore\n        /* \"#utility.yul\":7620:7623   */\n      0xa0\n        /* \"#utility.yul\":7605:7624   */\n      add\n      swap1\n        /* \"#utility.yul\":7374:7890   */\n      jump\t// out\n        /* \"#utility.yul\":11777:11945   */\n    tag_393:\n        /* \"#utility.yul\":11817:11824   */\n      0x00\n        /* \"#utility.yul\":11883:11884   */\n      dup2\n        /* \"#utility.yul\":11879:11880   */\n      0x00\n        /* \"#utility.yul\":11875:11881   */\n      not\n        /* \"#utility.yul\":11871:11885   */\n      div\n        /* \"#utility.yul\":11868:11869   */\n      dup4\n        /* \"#utility.yul\":11865:11886   */\n      gt\n        /* \"#utility.yul\":11860:11861   */\n      dup3\n        /* \"#utility.yul\":11853:11862   */\n      iszero\n        /* \"#utility.yul\":11846:11863   */\n      iszero\n        /* \"#utility.yul\":11842:11887   */\n      and\n        /* \"#utility.yul\":11839:11910   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":11890:11908   */\n      tag_467\n      tag_408\n      jump\t// in\n    tag_467:\n      pop\n        /* \"#utility.yul\":11930:11939   */\n      mul\n      swap1\n        /* \"#utility.yul\":11777:11945   */\n      jump\t// out\n        /* \"#utility.yul\":11950:12167   */\n    tag_395:\n        /* \"#utility.yul\":11990:11991   */\n      0x00\n        /* \"#utility.yul\":12016:12017   */\n      dup3\n        /* \"#utility.yul\":12006:12138   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":12060:12070   */\n      0x4e487b71\n        /* \"#utility.yul\":12055:12058   */\n      0xe0\n        /* \"#utility.yul\":12051:12071   */\n      shl\n        /* \"#utility.yul\":12048:12049   */\n      0x00\n        /* \"#utility.yul\":12041:12072   */\n      mstore\n        /* \"#utility.yul\":12095:12099   */\n      0x12\n        /* \"#utility.yul\":12092:12093   */\n      0x04\n        /* \"#utility.yul\":12085:12100   */\n      mstore\n        /* \"#utility.yul\":12123:12127   */\n      0x24\n        /* \"#utility.yul\":12120:12121   */\n      0x00\n        /* \"#utility.yul\":12113:12128   */\n      revert\n        /* \"#utility.yul\":12006:12138   */\n    tag_469:\n      pop\n        /* \"#utility.yul\":12152:12161   */\n      div\n      swap1\n        /* \"#utility.yul\":11950:12167   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b1817615e6b3db0d0d7b1b78f19962be2cc09238ad00b903b554a0599706815564736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_437": {
									"entryPoint": null,
									"id": 437,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 231,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:491:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:5"
															},
															"nodeType": "YulIf",
															"src": "115:70:5"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:5"
															},
															"nodeType": "YulIf",
															"src": "304:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:5",
														"type": ""
													}
												],
												"src": "196:293:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052610a8c600255610e746003556112c06004556802b5e3af16b18800006005556b019d971e4fe8401e7400000060065568056bc75e2d631000006007556b019d971e4fe8401e74000000600855680ad78ebc5ac62000006009556b0813f3978f89409844000000600a553480156200007a57600080fd5b5060405162001d4138038062001d418339810160408190526200009d9162000154565b620000a833620000e7565b6000805460ff60a01b19169055600180546001600160a01b039384166001600160a01b031991821617909155600b80549290931691161790556200018c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200014f57600080fd5b919050565b600080604083850312156200016857600080fd5b620001738362000137565b9150620001836020840162000137565b90509250929050565b611ba5806200019c6000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806384203f4b1161011a578063bf01651a116100ad578063e5d157011161007c578063e5d157011461048c578063f2fde38b1461049f578063f4217e1e146104b2578063f7edf9ab146104c5578063fe2981b5146104d857600080fd5b8063bf01651a1461044a578063d3900a521461045d578063d72b11bd14610466578063dda4fa8f1461047957600080fd5b806391789cef116100e957806391789cef146103ec578063927e5998146103f557806397e9c5fe14610408578063bb6648641461043757600080fd5b806384203f4b146103a75780638456cb59146103ca5780638da5cb5b146103d25780638f0fb2b7146103e357600080fd5b8063635ef2851161019d57806369e068481161016c57806369e068481461034b578063715018a61461035e57806371a1609b146103665780637fe509d71461036f5780638275b1811461039e57600080fd5b8063635ef285146102c25780636505cf31146102e55780636636389e146102ee57806367911ba41461030157600080fd5b80633f4ba83a116101d95780633f4ba83a1461024e578063451c3d80146102565780635c975abb146102815780636296e7501461029f57600080fd5b806301ef47391461020b5780631ed81ff8146102275780631ff08fee1461023c57806332938e3a14610245575b600080fd5b61021460075481565b6040519081526020015b60405180910390f35b61023a610235366004611809565b6104eb565b005b61021460035481565b61021460045481565b61023a6106e8565b600154610269906001600160a01b031681565b6040516001600160a01b03909116815260200161021e565b600054600160a01b900460ff165b604051901515815260200161021e565b61028f6102ad36600461183e565b600c6020526000908152604090205460ff1681565b61028f6102d036600461183e565b600e6020526000908152604090205460ff1681565b61021460055481565b61023a6102fc366004611809565b61071c565b61033061030f36600461183e565b600d6020526000908152604090208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161021e565b61021461035936600461186a565b6109fb565b61023a610ab4565b61021460065481565b61033061037d36600461183e565b600f6020526000908152604090208054600182015460029092015490919083565b61021460025481565b61028f6103b536600461183e565b60106020526000908152604090205460ff1681565b61023a610ae8565b6000546001600160a01b0316610269565b610214600a5481565b61021460095481565b61023a610403366004611809565b610b1a565b61033061041636600461183e565b60116020526000908152604090208054600182015460029092015490919083565b61023a610445366004611809565b610df1565b61023a610458366004611809565b6110c8565b61021460085481565b600b54610269906001600160a01b031681565b61023a61048736600461183e565b6112ab565b61023a61049a3660046118a6565b6112f7565b61023a6104ad36600461183e565b61132f565b61023a6104c03660046118d2565b6113ca565b61028f6104d3366004611915565b611411565b61023a6104e6366004611809565b6114b0565b600054600160a01b900460ff161561051e5760405162461bcd60e51b815260040161051590611948565b60405180910390fd5b600854811115801561053257506007548110155b61054e5760405162461bcd60e51b815260040161051590611972565b336000818152600e602052604090205460ff161561057e5760405162461bcd60e51b8152600401610515906119c4565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906105b290849030908790600401611a06565b6020604051808303816000875af11580156105d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f59190611a2a565b506001600160a01b0381166000908152600e6020908152604091829020805460ff19166001179055815160608101835284815242918101829052918201906106409062278d00611a62565b90526001600160a01b0382166000908152600f6020908152604091829020835181559083015160018083019190915592909101516002909101557f17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f2390829084426106ad8162278d00611a62565b604080516001600160a01b03909616865260ff9094166020860152928401919091526060830152608082015260a00160405180910390a15050565b6000546001600160a01b031633146107125760405162461bcd60e51b815260040161051590611a7a565b61071a611667565b565b3360008181526010602052604090205460ff1661076d5760405162461bcd60e51b815260206004820152600f60248201526e055736572206973206e6f742056697608c1b6044820152606401610515565b6001600160a01b038116600090815260116020526040902054828110156107a65760405162461bcd60e51b815260040161051590611aaf565b60006107b3836002611411565b905060006107c3846002876109fb565b90508285141561080c576001600160a01b03841660009081526011602090815260408083208381556001810184905560020183905560109091529020805460ff1916905561083a565b6001600160a01b03841660009081526011602052604081208054879290610834908490611ae6565b90915550505b81156109395760015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b79190611a2a565b50600154600b546040516323b872dd60e01b81526001600160a01b03928316926323b872dd926108f09291169088908690600401611a06565b6020604051808303816000875af115801561090f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109339190611a2a565b506109b4565b5060015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052600092169063a9059cbb906044016020604051808303816000875af115801561098e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b29190611a2a565b505b7fa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b8460028488856040516109ec959493929190611afd565b60405180910390a15050505050565b600060ff8316610a39576001600160a01b0384166000908152600d6020526040902060010154600254610a319084908390611704565b915050610aad565b8260ff1660011415610a71576001600160a01b0384166000908152600f6020526040902060010154600354610a319084908390611704565b8260ff1660021415610aa9576001600160a01b038416600090815260116020526040902060010154600454610a319084908390611704565b5060005b9392505050565b6000546001600160a01b03163314610ade5760405162461bcd60e51b815260040161051590611a7a565b61071a6000611754565b6000546001600160a01b03163314610b125760405162461bcd60e51b815260040161051590611a7a565b61071a6117a4565b336000818152600c602052604090205460ff16610b725760405162461bcd60e51b8152602060048201526016602482015275055736572206973206e6f74206f6e204c6576656c20360541b6044820152606401610515565b6001600160a01b0381166000908152600d602052604090205482811015610bab5760405162461bcd60e51b815260040161051590611aaf565b6000610bb8836000611411565b90506000610bc8846000876109fb565b905082851415610c11576001600160a01b0384166000908152600d6020908152604080832083815560018101849055600201839055600c9091529020805460ff19169055610c3f565b6001600160a01b0384166000908152600d602052604081208054879290610c39908490611ae6565b90915550505b8115610d3e5760015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbc9190611a2a565b50600154600b546040516323b872dd60e01b81526001600160a01b03928316926323b872dd92610cf59291169088908690600401611a06565b6020604051808303816000875af1158015610d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d389190611a2a565b50610db9565b5060015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052600092169063a9059cbb906044016020604051808303816000875af1158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db79190611a2a565b505b7fa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b8460008488856040516109ec959493929190611afd565b336000818152600e602052604090205460ff16610e495760405162461bcd60e51b815260206004820152601660248201527555736572206973206e6f74206f6e204c6576656c203160501b6044820152606401610515565b6001600160a01b0381166000908152600f602052604090205482811015610e825760405162461bcd60e51b815260040161051590611aaf565b6000610e8f836001611411565b90506000610e9f846001876109fb565b905082851415610ee8576001600160a01b0384166000908152600f6020908152604080832083815560018101849055600201839055600e9091529020805460ff19169055610f16565b6001600160a01b0384166000908152600f602052604081208054879290610f10908490611ae6565b90915550505b81156110155760015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f939190611a2a565b50600154600b546040516323b872dd60e01b81526001600160a01b03928316926323b872dd92610fcc9291169088908690600401611a06565b6020604051808303816000875af1158015610feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100f9190611a2a565b50611090565b5060015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052600092169063a9059cbb906044016020604051808303816000875af115801561106a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108e9190611a2a565b505b7fa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b8460018488856040516109ec959493929190611afd565b600054600160a01b900460ff16156110f25760405162461bcd60e51b815260040161051590611948565b600a54811115801561110657506009548110155b6111225760405162461bcd60e51b815260040161051590611972565b3360008181526010602052604090205460ff16156111825760405162461bcd60e51b815260206004820152601f60248201527f596f7527726520616c726561647920696e2074686520566970205374616b65006044820152606401610515565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906111b690849030908790600401611a06565b6020604051808303816000875af11580156111d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f99190611a2a565b506001600160a01b038116600090815260106020908152604091829020805460ff1916600117905581516060810183528481524291810182905291820190611244906276a700611a62565b90526001600160a01b038216600090815260116020908152604091829020835181559083015160018201559101516002918201557f17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f2390829084426106ad816276a700611a62565b6000546001600160a01b031633146112d55760405162461bcd60e51b815260040161051590611a7a565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146113215760405162461bcd60e51b815260040161051590611a7a565b600292909255600355600455565b6000546001600160a01b031633146113595760405162461bcd60e51b815260040161051590611a7a565b6001600160a01b0381166113be5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610515565b6113c781611754565b50565b6000546001600160a01b031633146113f45760405162461bcd60e51b815260040161051590611a7a565b600595909555600693909355600791909155600855600955600a55565b60008060ff831661143e57506001600160a01b0383166000908152600d60205260409020600201546114a4565b8260ff166001141561146c57506001600160a01b0383166000908152600f60205260409020600201546114a4565b8260ff166002141561149a57506001600160a01b0383166000908152601160205260409020600201546114a4565b60009150506114aa565b42101590505b92915050565b600054600160a01b900460ff16156114da5760405162461bcd60e51b815260040161051590611948565b60065481111580156114ee57506005548110155b61150a5760405162461bcd60e51b815260040161051590611972565b336000818152600c602052604090205460ff161561153a5760405162461bcd60e51b8152600401610515906119c4565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061156e90849030908790600401611a06565b6020604051808303816000875af115801561158d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b19190611a2a565b506001600160a01b0381166000908152600c6020908152604091829020805460ff19166001179055815160608101835284815242918101829052918201906115fc9062093a80611a62565b90526001600160a01b0382166000908152600d602090815260408083208451815591840151600183015592909201516002909201919091557f17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f2390829084426106ad8162093a80611a62565b600054600160a01b900460ff166116b75760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610515565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000806117118442611ae6565b905060006301e133806127106117278689611b2e565b6117319190611b4d565b61173b9190611b4d565b905060006117498284611b2e565b979650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156117ce5760405162461bcd60e51b815260040161051590611948565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116e73390565b60006020828403121561181b57600080fd5b5035919050565b80356001600160a01b038116811461183957600080fd5b919050565b60006020828403121561185057600080fd5b610aad82611822565b803560ff8116811461183957600080fd5b60008060006060848603121561187f57600080fd5b61188884611822565b925061189660208501611859565b9150604084013590509250925092565b6000806000606084860312156118bb57600080fd5b505081359360208301359350604090920135919050565b60008060008060008060c087890312156118eb57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000806040838503121561192857600080fd5b61193183611822565b915061193f60208401611859565b90509250929050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526032908201527f416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e604082015271040c2dcc840d8cae6e640e8d0c2dc40dac2f60731b606082015260800190565b60208082526022908201527f596f7527726520616c726561647920696e2074686973205374616b65206c6576604082015261195b60f21b606082015260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611a3c57600080fd5b81518015158114610aad57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611a7557611a75611a4c565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f4e6f7420656e6f7567682062616c616e636520746f2077697468647261770000604082015260600190565b600082821015611af857611af8611a4c565b500390565b6001600160a01b0395909516855260ff93909316602085015290151560408401526060830152608082015260a00190565b6000816000190483118215151615611b4857611b48611a4c565b500290565b600082611b6a57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220b1817615e6b3db0d0d7b1b78f19962be2cc09238ad00b903b554a0599706815564736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH2 0xA8C PUSH1 0x2 SSTORE PUSH2 0xE74 PUSH1 0x3 SSTORE PUSH2 0x12C0 PUSH1 0x4 SSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x5 SSTORE PUSH12 0x19D971E4FE8401E74000000 PUSH1 0x6 SSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x7 SSTORE PUSH12 0x19D971E4FE8401E74000000 PUSH1 0x8 SSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x9 SSTORE PUSH12 0x813F3978F89409844000000 PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D41 CODESIZE SUB DUP1 PUSH3 0x1D41 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x9D SWAP2 PUSH3 0x154 JUMP JUMPDEST PUSH3 0xA8 CALLER PUSH3 0xE7 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xB DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH3 0x18C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x173 DUP4 PUSH3 0x137 JUMP JUMPDEST SWAP2 POP PUSH3 0x183 PUSH1 0x20 DUP5 ADD PUSH3 0x137 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BA5 DUP1 PUSH3 0x19C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84203F4B GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xBF01651A GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE5D15701 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE5D15701 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xF4217E1E EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xF7EDF9AB EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xFE2981B5 EQ PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBF01651A EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xD3900A52 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xD72B11BD EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xDDA4FA8F EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91789CEF GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x91789CEF EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x927E5998 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x97E9C5FE EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xBB664864 EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84203F4B EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x8F0FB2B7 EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x635EF285 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x69E06848 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x69E06848 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x71A1609B EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x7FE509D7 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x8275B181 EQ PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x635EF285 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x6505CF31 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x6636389E EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x67911BA4 EQ PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x6296E750 EQ PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1EF4739 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x1ED81FF8 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x1FF08FEE EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x32938E3A EQ PUSH2 0x245 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x214 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x269 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0x28F PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x28F PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH2 0x330 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0x214 PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x186A JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x23A PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28F PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x269 JUMP JUMPDEST PUSH2 0x214 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x330 PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x445 CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x10C8 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x269 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x23A PUSH2 0x49A CALLDATASIZE PUSH1 0x4 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x132F JUMP JUMPDEST PUSH2 0x23A PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x13CA JUMP JUMPDEST PUSH2 0x28F PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x51E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI POP PUSH1 0x7 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1972 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x19C4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x5B2 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP5 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD SWAP1 PUSH2 0x640 SWAP1 PUSH3 0x278D00 PUSH2 0x1A62 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH32 0x17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23 SWAP1 DUP3 SWAP1 DUP5 TIMESTAMP PUSH2 0x6AD DUP2 PUSH3 0x278D00 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0xFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x71A PUSH2 0x1667 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x76D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x55736572206973206E6F742056697 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B3 DUP4 PUSH1 0x2 PUSH2 0x1411 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7C3 DUP5 PUSH1 0x2 DUP8 PUSH2 0x9FB JUMP JUMPDEST SWAP1 POP DUP3 DUP6 EQ ISZERO PUSH2 0x80C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP4 SWAP1 SSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x83A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x834 SWAP1 DUP5 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0x939 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B7 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x8F0 SWAP3 SWAP2 AND SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x90F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x933 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH2 0x9B4 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP JUMPDEST PUSH32 0xA3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B DUP5 PUSH1 0x2 DUP5 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9EC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP4 AND PUSH2 0xA39 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x2 SLOAD PUSH2 0xA31 SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x1704 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAD JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0xA71 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0xA31 SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x1704 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0xA31 SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x1704 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x71A PUSH1 0x0 PUSH2 0x1754 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x71A PUSH2 0x17A4 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x55736572206973206E6F74206F6E204C6576656C203 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xBAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 DUP4 PUSH1 0x0 PUSH2 0x1411 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBC8 DUP5 PUSH1 0x0 DUP8 PUSH2 0x9FB JUMP JUMPDEST SWAP1 POP DUP3 DUP6 EQ ISZERO PUSH2 0xC11 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP4 SWAP1 SSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xC39 SWAP1 DUP5 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0xD3E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0xCF5 SWAP3 SWAP2 AND SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD38 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH2 0xDB9 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB7 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP JUMPDEST PUSH32 0xA3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B DUP5 PUSH1 0x0 DUP5 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9EC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xE49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x55736572206973206E6F74206F6E204C6576656C2031 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xE82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8F DUP4 PUSH1 0x1 PUSH2 0x1411 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE9F DUP5 PUSH1 0x1 DUP8 PUSH2 0x9FB JUMP JUMPDEST SWAP1 POP DUP3 DUP6 EQ ISZERO PUSH2 0xEE8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP4 SWAP1 SSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xF10 SWAP1 DUP5 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0x1015 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0xFCC SWAP3 SWAP2 AND SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH2 0x1090 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x106A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP JUMPDEST PUSH32 0xA3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B DUP5 PUSH1 0x1 DUP5 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9EC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x1106 JUMPI POP PUSH1 0x9 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x1122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1972 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1182 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7527726520616C726561647920696E2074686520566970205374616B6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x11B6 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F9 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP5 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD SWAP1 PUSH2 0x1244 SWAP1 PUSH3 0x76A700 PUSH2 0x1A62 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 ADD MLOAD PUSH1 0x2 SWAP2 DUP3 ADD SSTORE PUSH32 0x17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23 SWAP1 DUP3 SWAP1 DUP5 TIMESTAMP PUSH2 0x6AD DUP2 PUSH3 0x76A700 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1321 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x2 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x3 SSTORE PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1359 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x515 JUMP JUMPDEST PUSH2 0x13C7 DUP2 PUSH2 0x1754 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x5 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 AND PUSH2 0x143E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x14A4 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x146C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x14A4 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x149A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x14AA JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x14EE JUMPI POP PUSH1 0x5 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1972 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x153A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x19C4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x156E SWAP1 DUP5 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x158D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15B1 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP5 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD SWAP1 PUSH2 0x15FC SWAP1 PUSH3 0x93A80 PUSH2 0x1A62 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE SWAP3 SWAP1 SWAP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23 SWAP1 DUP3 SWAP1 DUP5 TIMESTAMP PUSH2 0x6AD DUP2 PUSH3 0x93A80 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x515 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1711 DUP5 TIMESTAMP PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0x1727 DUP7 DUP10 PUSH2 0x1B2E JUMP JUMPDEST PUSH2 0x1731 SWAP2 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x173B SWAP2 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1749 DUP3 DUP5 PUSH2 0x1B2E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x17CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x16E7 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAAD DUP3 PUSH2 0x1822 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x187F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1888 DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH2 0x1896 PUSH1 0x20 DUP6 ADD PUSH2 0x1859 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x18EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 CALLDATALOAD SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1931 DUP4 PUSH2 0x1822 JUMP JUMPDEST SWAP2 POP PUSH2 0x193F PUSH1 0x20 DUP5 ADD PUSH2 0x1859 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206E6565647320746F206265206D6F7265207468616E206D696E PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x40C2DCC840D8CAE6E640E8D0C2DC40DAC2F PUSH1 0x73 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7527726520616C726561647920696E2074686973205374616B65206C6576 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x195B PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1A75 JUMPI PUSH2 0x1A75 PUSH2 0x1A4C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F2077697468647261770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1AF8 JUMPI PUSH2 0x1AF8 PUSH2 0x1A4C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0xFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B48 JUMPI PUSH2 0x1B48 PUSH2 0x1A4C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B6A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP2 PUSH23 0x15E6B3DB0D0D7B1B78F19962BE2CC09238AD00B903B554 LOG0 MSIZE SWAP8 MOD DUP2 SSTORE PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "225:10475:4:-:0;;;557:4;529:32;;594:4;567:31;;633:4;604:33;;705:11;678:38;;749:18;722:45;;800:12;773:39;;845:18;818:45;;898:12;869:41;;945:19;916:48;;1627:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:3;921:18:0;:32::i;:::-;991:5:1;981:15;;-1:-1:-1;;;;981:15:1;;;;1690:30:4;;-1:-1:-1;;;;;1690:30:4;;;-1:-1:-1;;;;;;1690:30:4;;;;;;;1730:13;:30;;;;;;;;;;;225:10475;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:177:5:-;93:13;;-1:-1:-1;;;;;135:31:5;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;225:10475:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_179": {
									"entryPoint": 6052,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 5972,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_195": {
									"entryPoint": 5735,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptedToken_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateInterest_931": {
									"entryPoint": 5892,
									"id": 931,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@enterLevel0_612": {
									"entryPoint": 5296,
									"id": 612,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@enterLevel1_688": {
									"entryPoint": 1259,
									"id": 688,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@enterVip_764": {
									"entryPoint": 4296,
									"id": 764,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getInterest_892": {
									"entryPoint": 2555,
									"id": 892,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isLevel0_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isLevel1_381": {
									"entryPoint": null,
									"id": 381,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isOnTime_822": {
									"entryPoint": 5137,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isVip_390": {
									"entryPoint": null,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level0APY_318": {
									"entryPoint": null,
									"id": 318,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level0Balance_377": {
									"entryPoint": null,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level0Max_338": {
									"entryPoint": null,
									"id": 338,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level0Min_331": {
									"entryPoint": null,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level1APY_321": {
									"entryPoint": null,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level1Balance_386": {
									"entryPoint": null,
									"id": 386,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level1Max_352": {
									"entryPoint": null,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level1Min_345": {
									"entryPoint": null,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@levelVipMax_366": {
									"entryPoint": null,
									"id": 366,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@levelVipMin_359": {
									"entryPoint": null,
									"id": 359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_446": {
									"entryPoint": 2792,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2740,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveWallet_368": {
									"entryPoint": null,
									"id": 368,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setNewAPY_493": {
									"entryPoint": 4855,
									"id": 493,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setNewMaxMin_536": {
									"entryPoint": 5066,
									"id": 536,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@setReserveWallet_468": {
									"entryPoint": 4779,
									"id": 468,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 4911,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_455": {
									"entryPoint": 1768,
									"id": 455,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vipBalance_395": {
									"entryPoint": null,
									"id": 395,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vipLevelAPY_324": {
									"entryPoint": null,
									"id": 324,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawLevel0_1041": {
									"entryPoint": 2842,
									"id": 1041,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawLevel1_1151": {
									"entryPoint": 3569,
									"id": 1151,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawVip_1261": {
									"entryPoint": 1820,
									"id": 1261,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint8": {
									"entryPoint": 6421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint8t_uint256": {
									"entryPoint": 6250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 6310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 6354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_uint8": {
									"entryPoint": 6233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_1_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_1_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_2_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6909,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_2_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_591dc1182a2386b4749ced023bc81df809d47be83533f1ef6275681de1e04c04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6bdfb0dc4c4c59115de16dba1fe971a1a93a7298738a304cd5bd53a9e8420e1c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a7563a6a5744ba74585ebbf959f95f0839d04ae841bce20f759f432de3f6ca18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_daf93fd023ea17bf0c263d023c3e511dcafa853cd1782f387ee74b6b6866acdb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6732,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12169:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "266:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "312:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "321:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "324:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "314:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "314:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "314:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "287:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "296:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "283:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "283:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "308:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "279:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "279:32:5"
															},
															"nodeType": "YulIf",
															"src": "276:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "337:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "360:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "347:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "337:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "232:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "243:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "255:6:5",
														"type": ""
													}
												],
												"src": "196:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "496:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "506:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "518:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "529:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "514:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "514:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "506:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "548:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "563:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "579:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "584:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "575:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "575:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "588:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "571:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "571:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "559:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "559:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "541:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "541:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "465:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "476:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "487:4:5",
														"type": ""
													}
												],
												"src": "381:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "698:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "708:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "720:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "731:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "716:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "708:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "750:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "775:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "768:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "768:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "761:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "761:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "743:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "743:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "667:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "678:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "689:4:5",
														"type": ""
													}
												],
												"src": "603:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "844:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "854:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "876:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "863:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "854:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "946:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "955:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "958:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "948:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "948:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "948:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "905:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "916:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "931:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "936:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "927:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "927:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "940:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "923:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "923:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "912:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "902:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "902:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "895:50:5"
															},
															"nodeType": "YulIf",
															"src": "892:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "823:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "834:5:5",
														"type": ""
													}
												],
												"src": "795:173:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1043:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1089:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1098:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1101:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1091:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1091:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1091:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1064:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1073:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1060:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1060:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1056:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1056:32:5"
															},
															"nodeType": "YulIf",
															"src": "1053:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1114:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1143:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1124:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1124:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1114:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1009:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1020:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1032:6:5",
														"type": ""
													}
												],
												"src": "973:186:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1321:162:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1331:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1343:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1354:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1339:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1339:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1331:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1373:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1384:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1366:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1366:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1366:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1411:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1422:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1407:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1407:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1427:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1400:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1400:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1454:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1465:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1450:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1450:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1470:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1443:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1443:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1443:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1274:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1285:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1293:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1301:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1312:4:5",
														"type": ""
													}
												],
												"src": "1164:319:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1535:109:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1545:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1567:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1554:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1554:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1545:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1622:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1631:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1634:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1624:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1624:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1624:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1596:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1607:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1614:4:5",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1603:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1603:16:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1593:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1593:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1586:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1586:35:5"
															},
															"nodeType": "YulIf",
															"src": "1583:55:5"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1514:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1525:5:5",
														"type": ""
													}
												],
												"src": "1488:156:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1751:222:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1797:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1806:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1809:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1799:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1799:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1772:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1781:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1768:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1768:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1793:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1764:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1764:32:5"
															},
															"nodeType": "YulIf",
															"src": "1761:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1822:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1851:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1832:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1832:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1870:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1901:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1912:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1897:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1897:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "1880:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1880:36:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1870:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1925:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1952:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1963:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1948:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1948:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1935:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1925:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint8t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1701:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1712:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1724:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1732:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1740:6:5",
														"type": ""
													}
												],
												"src": "1649:324:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2079:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2089:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2101:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2112:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2097:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2097:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2089:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2131:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2146:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2162:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2167:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2158:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2158:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2171:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2142:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2142:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2124:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2124:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2124:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2048:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2059:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2070:4:5",
														"type": ""
													}
												],
												"src": "1978:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2290:212:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2336:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2345:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2348:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2338:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2338:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2338:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2311:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2320:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2307:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2307:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2332:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2303:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2303:32:5"
															},
															"nodeType": "YulIf",
															"src": "2300:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2361:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2384:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2371:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2371:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2361:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2403:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2430:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2441:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2426:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2426:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2413:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2413:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2403:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2454:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2481:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2492:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2477:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2477:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2464:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2464:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2454:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2240:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2251:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2263:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2271:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2279:6:5",
														"type": ""
													}
												],
												"src": "2186:316:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2662:368:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2709:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2718:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2721:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2711:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2711:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2711:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2683:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2692:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2679:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2679:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2704:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2675:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2675:33:5"
															},
															"nodeType": "YulIf",
															"src": "2672:53:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2734:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2757:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2744:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2744:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2734:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2776:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2803:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2814:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2799:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2799:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2786:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2786:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2776:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2827:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2854:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2865:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2850:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2850:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2837:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2837:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2827:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2878:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2905:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2916:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2901:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2901:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2888:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2888:32:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2878:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2929:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2956:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2967:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2952:19:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2939:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2939:33:5"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2929:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2981:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3008:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3019:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3004:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3004:19:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2991:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:33:5"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "2981:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2588:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2599:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2611:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2619:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2627:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2635:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2643:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2651:6:5",
														"type": ""
													}
												],
												"src": "2507:523:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3120:171:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3166:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3175:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3178:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3168:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3168:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3168:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3141:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3150:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3137:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3162:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3133:32:5"
															},
															"nodeType": "YulIf",
															"src": "3130:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3191:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3220:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3201:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3191:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3239:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3270:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3281:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3266:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3266:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "3249:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3249:36:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3239:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3078:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3089:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3101:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3109:6:5",
														"type": ""
													}
												],
												"src": "3035:256:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3470:166:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3487:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3498:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3480:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3480:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3480:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3521:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3532:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3517:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3517:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3537:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3510:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3510:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3560:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3571:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3556:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3556:18:5"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3576:18:5",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3549:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3549:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3549:46:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3604:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3616:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3627:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3612:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3612:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3604:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3447:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3461:4:5",
														"type": ""
													}
												],
												"src": "3296:340:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3815:240:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3832:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3843:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3825:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3825:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3825:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3866:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3877:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3862:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3862:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3882:2:5",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3855:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3855:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3855:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3905:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3916:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3901:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3901:18:5"
																	},
																	{
																		"hexValue": "416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3921:34:5",
																		"type": "",
																		"value": "Amount needs to be more than min"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3894:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3894:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3894:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3976:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3972:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3972:18:5"
																	},
																	{
																		"hexValue": "20616e64206c657373207468616e206d6178",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3992:20:5",
																		"type": "",
																		"value": " and less than max"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3965:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3965:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4022:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4034:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4030:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4030:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4022:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3792:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3806:4:5",
														"type": ""
													}
												],
												"src": "3641:414:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4234:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4251:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4262:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4244:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4244:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4244:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4285:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4296:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4281:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4281:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4301:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4274:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4274:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4274:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4324:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4335:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4320:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4320:18:5"
																	},
																	{
																		"hexValue": "596f7527726520616c726561647920696e2074686973205374616b65206c6576",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4340:34:5",
																		"type": "",
																		"value": "You're already in this Stake lev"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4313:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4313:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4313:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4395:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4406:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4391:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4391:18:5"
																	},
																	{
																		"hexValue": "656c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4411:4:5",
																		"type": "",
																		"value": "el"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4384:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4384:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4384:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4425:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4437:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4448:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4433:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4433:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4425:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4211:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4225:4:5",
														"type": ""
													}
												],
												"src": "4060:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4620:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4630:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4638:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4665:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4683:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4688:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4679:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4679:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4692:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4675:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4675:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4669:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4710:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4725:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4733:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4721:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4721:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4703:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4703:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4703:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4757:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4768:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4753:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4753:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4777:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4785:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4773:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4773:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4746:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4746:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4809:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4820:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4805:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4805:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4825:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4798:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4798:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4573:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4584:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4592:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4600:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4611:4:5",
														"type": ""
													}
												],
												"src": "4463:375:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4921:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4967:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4976:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4979:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4969:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4969:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4969:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4942:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4951:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4938:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4963:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4934:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4934:32:5"
															},
															"nodeType": "YulIf",
															"src": "4931:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4992:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5011:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5005:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4996:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5074:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5083:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5086:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5076:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5076:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5076:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5043:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5064:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5057:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5057:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5050:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5050:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5040:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5040:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5033:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5033:40:5"
															},
															"nodeType": "YulIf",
															"src": "5030:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5099:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5109:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5099:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4887:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4898:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4910:6:5",
														"type": ""
													}
												],
												"src": "4843:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5157:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5174:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5181:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5186:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5177:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5177:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5167:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5167:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5167:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5214:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5217:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5207:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5207:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5238:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5241:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5231:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5231:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5231:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5125:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5305:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5332:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5334:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5334:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5334:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5321:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5328:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5324:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5324:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5318:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5318:13:5"
															},
															"nodeType": "YulIf",
															"src": "5315:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5363:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5374:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5377:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5370:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5370:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5363:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5288:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5291:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5297:3:5",
														"type": ""
													}
												],
												"src": "5257:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5609:287:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5619:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5631:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5642:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5627:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5627:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5619:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5662:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5677:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5693:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5698:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5689:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5689:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5702:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5685:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5685:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5673:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5673:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5655:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5655:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5655:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5726:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5737:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5722:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5722:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5746:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5754:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5742:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5742:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5715:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5715:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5715:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5780:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5791:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5776:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5776:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5796:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5769:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5769:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5769:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5823:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5834:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5819:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5819:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5839:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5812:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5812:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5812:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5866:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5877:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5862:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5862:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5855:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5855:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5855:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_1_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5546:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5557:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5565:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5573:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5581:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5589:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5600:4:5",
														"type": ""
													}
												],
												"src": "5390:506:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6075:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6092:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6103:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6085:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6085:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6085:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6126:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6137:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6122:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6122:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6142:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6115:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6115:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6115:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6165:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6176:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6161:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6161:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6181:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6154:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6154:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6154:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6225:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6237:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6248:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6233:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6233:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6225:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6052:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6066:4:5",
														"type": ""
													}
												],
												"src": "5901:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6436:165:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6453:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6464:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6446:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6446:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6446:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6487:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6498:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6483:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6483:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6503:2:5",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6476:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6476:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6476:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6526:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6537:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6522:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6522:18:5"
																	},
																	{
																		"hexValue": "55736572206973206e6f7420566970",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6542:17:5",
																		"type": "",
																		"value": "User is not Vip"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6515:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6515:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6515:45:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6569:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6581:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6592:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6577:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6577:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6569:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a7563a6a5744ba74585ebbf959f95f0839d04ae841bce20f759f432de3f6ca18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6413:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6427:4:5",
														"type": ""
													}
												],
												"src": "6262:339:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6780:180:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6797:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6808:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6790:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6790:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6790:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6831:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6842:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6827:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6827:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6847:2:5",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6820:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6820:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6870:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6881:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6866:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6866:18:5"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682062616c616e636520746f207769746864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6886:32:5",
																		"type": "",
																		"value": "Not enough balance to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6859:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6859:60:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6859:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6928:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6940:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6951:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6936:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6936:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6928:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6757:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6771:4:5",
														"type": ""
													}
												],
												"src": "6606:354:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7014:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7036:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7038:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7038:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7038:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7030:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7033:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7027:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7027:8:5"
															},
															"nodeType": "YulIf",
															"src": "7024:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7067:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7079:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7082:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7075:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7075:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7067:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6996:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6999:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7005:4:5",
														"type": ""
													}
												],
												"src": "6965:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7224:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7234:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7246:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7257:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7242:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7242:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7234:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7276:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7291:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7307:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7312:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7303:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7303:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7316:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7299:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7299:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7287:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7287:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7340:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7351:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7336:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7336:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7356:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7329:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7329:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7329:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7185:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7196:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7204:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7215:4:5",
														"type": ""
													}
												],
												"src": "7095:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7587:303:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7597:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7609:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7620:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7605:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7597:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7640:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7655:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7671:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7676:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7667:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7667:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7680:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7663:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7663:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7651:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7651:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7633:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7633:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7633:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7704:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7715:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7700:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7700:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7724:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7732:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7720:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7720:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7693:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7693:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7693:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7758:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7769:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7754:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7754:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "7788:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7781:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7781:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7774:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7774:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7747:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7747:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7747:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7817:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7828:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7813:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7813:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7833:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7806:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7806:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7806:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7860:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7871:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7856:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7856:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7877:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7849:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7849:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_2_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7524:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7535:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7543:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7551:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7559:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7567:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7578:4:5",
														"type": ""
													}
												],
												"src": "7374:516:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8069:172:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8086:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8097:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8079:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8079:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8079:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8120:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8131:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8116:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8116:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8136:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8109:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8109:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8109:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8159:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8170:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8155:18:5"
																	},
																	{
																		"hexValue": "55736572206973206e6f74206f6e204c6576656c2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8175:24:5",
																		"type": "",
																		"value": "User is not on Level 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8148:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8148:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8209:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8221:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8232:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8217:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8209:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6bdfb0dc4c4c59115de16dba1fe971a1a93a7298738a304cd5bd53a9e8420e1c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8046:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8060:4:5",
														"type": ""
													}
												],
												"src": "7895:346:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8459:303:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8469:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8481:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8492:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8477:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8477:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8469:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8512:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8527:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8543:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8548:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8539:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8539:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8552:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8535:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8535:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8523:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8523:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8505:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8505:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8505:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8576:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8587:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8572:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8572:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8596:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8604:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8592:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8592:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8565:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8565:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8630:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8641:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8626:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8626:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "8660:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8653:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8653:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8646:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8646:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8619:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8689:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8700:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8685:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8685:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8705:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8678:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8678:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8678:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8732:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8743:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8728:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8728:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8749:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8721:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8721:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8721:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8396:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8407:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8415:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8423:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8431:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8439:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8450:4:5",
														"type": ""
													}
												],
												"src": "8246:516:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8941:172:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8958:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8969:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8951:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8951:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8951:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8992:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9003:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8988:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8988:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9008:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8981:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8981:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8981:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9031:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9042:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9027:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9027:18:5"
																	},
																	{
																		"hexValue": "55736572206973206e6f74206f6e204c6576656c2031",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9047:24:5",
																		"type": "",
																		"value": "User is not on Level 1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9020:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9020:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9020:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9081:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9093:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9104:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9089:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9089:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9081:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_591dc1182a2386b4749ced023bc81df809d47be83533f1ef6275681de1e04c04__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8918:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8932:4:5",
														"type": ""
													}
												],
												"src": "8767:346:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9331:303:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9341:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9353:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9364:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9349:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9349:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9341:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9384:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9399:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9415:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9420:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9411:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9411:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9424:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9407:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9407:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9395:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9395:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9377:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9377:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9377:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9448:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9459:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9444:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9444:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9468:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9476:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9464:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9464:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9437:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9437:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9437:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9502:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9513:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9498:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9498:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "9532:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9525:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9525:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9518:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9518:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9491:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9491:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9491:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9561:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9572:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9557:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9557:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9577:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9550:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9550:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9550:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9604:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9615:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9600:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9600:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "9621:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9593:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9593:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9593:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_1_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9268:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9279:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9287:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9295:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9303:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9311:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9322:4:5",
														"type": ""
													}
												],
												"src": "9118:516:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9813:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9830:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9841:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9823:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9823:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9823:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9864:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9875:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9860:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9860:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9880:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9853:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9853:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9853:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9903:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9914:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9899:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9899:18:5"
																	},
																	{
																		"hexValue": "596f7527726520616c726561647920696e2074686520566970205374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9919:33:5",
																		"type": "",
																		"value": "You're already in the Vip Stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9892:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9892:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9892:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9962:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9974:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9985:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9970:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9970:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9962:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daf93fd023ea17bf0c263d023c3e511dcafa853cd1782f387ee74b6b6866acdb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9790:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9804:4:5",
														"type": ""
													}
												],
												"src": "9639:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10218:287:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10228:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10240:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10251:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10236:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10236:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10228:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10271:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10286:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10302:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10307:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10298:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10298:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10311:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10294:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10294:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10282:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10282:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10264:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10264:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10264:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10335:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10346:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10331:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10331:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10355:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10363:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10351:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10351:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10324:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10324:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10324:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10389:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10400:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10385:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10385:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10405:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10378:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10378:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10378:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10432:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10443:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10428:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10428:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10448:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10421:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10421:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10421:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10475:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10486:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10471:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10471:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10492:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10464:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10464:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10464:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_2_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10155:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10166:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10174:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10182:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10190:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10198:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10209:4:5",
														"type": ""
													}
												],
												"src": "9999:506:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10684:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10701:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10712:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10694:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10694:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10735:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10746:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10731:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10731:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10751:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10724:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10724:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10724:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10774:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10785:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10770:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10770:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10790:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10763:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10763:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10763:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10845:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10856:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10841:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10841:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10861:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10834:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10834:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10834:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10879:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10891:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10902:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10887:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10887:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10879:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10661:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10675:4:5",
														"type": ""
													}
												],
												"src": "10510:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11136:287:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11146:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11158:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11169:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11154:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11154:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11146:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11189:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11204:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11220:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11225:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "11216:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11216:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11229:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "11212:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11212:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11200:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11200:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11182:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11182:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11182:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11253:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11264:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11249:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11249:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11273:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11281:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11269:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11269:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11242:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11242:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11307:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11318:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11303:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11303:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11323:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11296:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11296:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11296:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11350:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11361:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11346:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11346:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11366:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11339:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11339:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11339:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11393:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11404:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11389:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11389:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "11410:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11382:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11382:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11382:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11073:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11084:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11092:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11100:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11108:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11116:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11127:4:5",
														"type": ""
													}
												],
												"src": "10917:506:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11602:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11619:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11630:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11612:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11612:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11612:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11653:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11664:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11649:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11649:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11669:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11642:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11642:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11642:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11692:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11703:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11688:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11688:18:5"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11708:22:5",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11681:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11681:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11681:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11740:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11752:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11763:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11748:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11748:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11740:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11579:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11593:4:5",
														"type": ""
													}
												],
												"src": "11428:344:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11829:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11888:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11890:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11890:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11890:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11860:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11853:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11853:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11846:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11846:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11868:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11879:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "11875:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11875:6:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11883:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "11871:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11871:14:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11865:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11865:21:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11842:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11842:45:5"
															},
															"nodeType": "YulIf",
															"src": "11839:71:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11919:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11934:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11937:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11930:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11930:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11919:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11808:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11811:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11817:7:5",
														"type": ""
													}
												],
												"src": "11777:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11996:171:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12027:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12048:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12055:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12060:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12051:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12051:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12041:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12041:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12041:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12092:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12095:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12085:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12085:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12085:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12120:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12123:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12113:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12113:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12113:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12016:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12009:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12009:9:5"
															},
															"nodeType": "YulIf",
															"src": "12006:132:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12147:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12156:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12159:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12152:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12152:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12147:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11981:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11984:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11990:1:5",
														"type": ""
													}
												],
												"src": "11950:217:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint8t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Amount needs to be more than min\")\n        mstore(add(headStart, 96), \" and less than max\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"You're already in this Stake lev\")\n        mstore(add(headStart, 96), \"el\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_rational_1_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a7563a6a5744ba74585ebbf959f95f0839d04ae841bce20f759f432de3f6ca18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"User is not Vip\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Not enough balance to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_rational_2_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_6bdfb0dc4c4c59115de16dba1fe971a1a93a7298738a304cd5bd53a9e8420e1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"User is not on Level 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_591dc1182a2386b4749ced023bc81df809d47be83533f1ef6275681de1e04c04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"User is not on Level 1\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_rational_1_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_daf93fd023ea17bf0c263d023c3e511dcafa853cd1782f387ee74b6b6866acdb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"You're already in the Vip Stake\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_rational_2_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102065760003560e01c806384203f4b1161011a578063bf01651a116100ad578063e5d157011161007c578063e5d157011461048c578063f2fde38b1461049f578063f4217e1e146104b2578063f7edf9ab146104c5578063fe2981b5146104d857600080fd5b8063bf01651a1461044a578063d3900a521461045d578063d72b11bd14610466578063dda4fa8f1461047957600080fd5b806391789cef116100e957806391789cef146103ec578063927e5998146103f557806397e9c5fe14610408578063bb6648641461043757600080fd5b806384203f4b146103a75780638456cb59146103ca5780638da5cb5b146103d25780638f0fb2b7146103e357600080fd5b8063635ef2851161019d57806369e068481161016c57806369e068481461034b578063715018a61461035e57806371a1609b146103665780637fe509d71461036f5780638275b1811461039e57600080fd5b8063635ef285146102c25780636505cf31146102e55780636636389e146102ee57806367911ba41461030157600080fd5b80633f4ba83a116101d95780633f4ba83a1461024e578063451c3d80146102565780635c975abb146102815780636296e7501461029f57600080fd5b806301ef47391461020b5780631ed81ff8146102275780631ff08fee1461023c57806332938e3a14610245575b600080fd5b61021460075481565b6040519081526020015b60405180910390f35b61023a610235366004611809565b6104eb565b005b61021460035481565b61021460045481565b61023a6106e8565b600154610269906001600160a01b031681565b6040516001600160a01b03909116815260200161021e565b600054600160a01b900460ff165b604051901515815260200161021e565b61028f6102ad36600461183e565b600c6020526000908152604090205460ff1681565b61028f6102d036600461183e565b600e6020526000908152604090205460ff1681565b61021460055481565b61023a6102fc366004611809565b61071c565b61033061030f36600461183e565b600d6020526000908152604090208054600182015460029092015490919083565b6040805193845260208401929092529082015260600161021e565b61021461035936600461186a565b6109fb565b61023a610ab4565b61021460065481565b61033061037d36600461183e565b600f6020526000908152604090208054600182015460029092015490919083565b61021460025481565b61028f6103b536600461183e565b60106020526000908152604090205460ff1681565b61023a610ae8565b6000546001600160a01b0316610269565b610214600a5481565b61021460095481565b61023a610403366004611809565b610b1a565b61033061041636600461183e565b60116020526000908152604090208054600182015460029092015490919083565b61023a610445366004611809565b610df1565b61023a610458366004611809565b6110c8565b61021460085481565b600b54610269906001600160a01b031681565b61023a61048736600461183e565b6112ab565b61023a61049a3660046118a6565b6112f7565b61023a6104ad36600461183e565b61132f565b61023a6104c03660046118d2565b6113ca565b61028f6104d3366004611915565b611411565b61023a6104e6366004611809565b6114b0565b600054600160a01b900460ff161561051e5760405162461bcd60e51b815260040161051590611948565b60405180910390fd5b600854811115801561053257506007548110155b61054e5760405162461bcd60e51b815260040161051590611972565b336000818152600e602052604090205460ff161561057e5760405162461bcd60e51b8152600401610515906119c4565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906105b290849030908790600401611a06565b6020604051808303816000875af11580156105d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f59190611a2a565b506001600160a01b0381166000908152600e6020908152604091829020805460ff19166001179055815160608101835284815242918101829052918201906106409062278d00611a62565b90526001600160a01b0382166000908152600f6020908152604091829020835181559083015160018083019190915592909101516002909101557f17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f2390829084426106ad8162278d00611a62565b604080516001600160a01b03909616865260ff9094166020860152928401919091526060830152608082015260a00160405180910390a15050565b6000546001600160a01b031633146107125760405162461bcd60e51b815260040161051590611a7a565b61071a611667565b565b3360008181526010602052604090205460ff1661076d5760405162461bcd60e51b815260206004820152600f60248201526e055736572206973206e6f742056697608c1b6044820152606401610515565b6001600160a01b038116600090815260116020526040902054828110156107a65760405162461bcd60e51b815260040161051590611aaf565b60006107b3836002611411565b905060006107c3846002876109fb565b90508285141561080c576001600160a01b03841660009081526011602090815260408083208381556001810184905560020183905560109091529020805460ff1916905561083a565b6001600160a01b03841660009081526011602052604081208054879290610834908490611ae6565b90915550505b81156109395760015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b79190611a2a565b50600154600b546040516323b872dd60e01b81526001600160a01b03928316926323b872dd926108f09291169088908690600401611a06565b6020604051808303816000875af115801561090f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109339190611a2a565b506109b4565b5060015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052600092169063a9059cbb906044016020604051808303816000875af115801561098e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b29190611a2a565b505b7fa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b8460028488856040516109ec959493929190611afd565b60405180910390a15050505050565b600060ff8316610a39576001600160a01b0384166000908152600d6020526040902060010154600254610a319084908390611704565b915050610aad565b8260ff1660011415610a71576001600160a01b0384166000908152600f6020526040902060010154600354610a319084908390611704565b8260ff1660021415610aa9576001600160a01b038416600090815260116020526040902060010154600454610a319084908390611704565b5060005b9392505050565b6000546001600160a01b03163314610ade5760405162461bcd60e51b815260040161051590611a7a565b61071a6000611754565b6000546001600160a01b03163314610b125760405162461bcd60e51b815260040161051590611a7a565b61071a6117a4565b336000818152600c602052604090205460ff16610b725760405162461bcd60e51b8152602060048201526016602482015275055736572206973206e6f74206f6e204c6576656c20360541b6044820152606401610515565b6001600160a01b0381166000908152600d602052604090205482811015610bab5760405162461bcd60e51b815260040161051590611aaf565b6000610bb8836000611411565b90506000610bc8846000876109fb565b905082851415610c11576001600160a01b0384166000908152600d6020908152604080832083815560018101849055600201839055600c9091529020805460ff19169055610c3f565b6001600160a01b0384166000908152600d602052604081208054879290610c39908490611ae6565b90915550505b8115610d3e5760015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbc9190611a2a565b50600154600b546040516323b872dd60e01b81526001600160a01b03928316926323b872dd92610cf59291169088908690600401611a06565b6020604051808303816000875af1158015610d14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d389190611a2a565b50610db9565b5060015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052600092169063a9059cbb906044016020604051808303816000875af1158015610d93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db79190611a2a565b505b7fa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b8460008488856040516109ec959493929190611afd565b336000818152600e602052604090205460ff16610e495760405162461bcd60e51b815260206004820152601660248201527555736572206973206e6f74206f6e204c6576656c203160501b6044820152606401610515565b6001600160a01b0381166000908152600f602052604090205482811015610e825760405162461bcd60e51b815260040161051590611aaf565b6000610e8f836001611411565b90506000610e9f846001876109fb565b905082851415610ee8576001600160a01b0384166000908152600f6020908152604080832083815560018101849055600201839055600e9091529020805460ff19169055610f16565b6001600160a01b0384166000908152600f602052604081208054879290610f10908490611ae6565b90915550505b81156110155760015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610f6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f939190611a2a565b50600154600b546040516323b872dd60e01b81526001600160a01b03928316926323b872dd92610fcc9291169088908690600401611a06565b6020604051808303816000875af1158015610feb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100f9190611a2a565b50611090565b5060015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052600092169063a9059cbb906044016020604051808303816000875af115801561106a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108e9190611a2a565b505b7fa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b8460018488856040516109ec959493929190611afd565b600054600160a01b900460ff16156110f25760405162461bcd60e51b815260040161051590611948565b600a54811115801561110657506009548110155b6111225760405162461bcd60e51b815260040161051590611972565b3360008181526010602052604090205460ff16156111825760405162461bcd60e51b815260206004820152601f60248201527f596f7527726520616c726561647920696e2074686520566970205374616b65006044820152606401610515565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906111b690849030908790600401611a06565b6020604051808303816000875af11580156111d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f99190611a2a565b506001600160a01b038116600090815260106020908152604091829020805460ff1916600117905581516060810183528481524291810182905291820190611244906276a700611a62565b90526001600160a01b038216600090815260116020908152604091829020835181559083015160018201559101516002918201557f17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f2390829084426106ad816276a700611a62565b6000546001600160a01b031633146112d55760405162461bcd60e51b815260040161051590611a7a565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146113215760405162461bcd60e51b815260040161051590611a7a565b600292909255600355600455565b6000546001600160a01b031633146113595760405162461bcd60e51b815260040161051590611a7a565b6001600160a01b0381166113be5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610515565b6113c781611754565b50565b6000546001600160a01b031633146113f45760405162461bcd60e51b815260040161051590611a7a565b600595909555600693909355600791909155600855600955600a55565b60008060ff831661143e57506001600160a01b0383166000908152600d60205260409020600201546114a4565b8260ff166001141561146c57506001600160a01b0383166000908152600f60205260409020600201546114a4565b8260ff166002141561149a57506001600160a01b0383166000908152601160205260409020600201546114a4565b60009150506114aa565b42101590505b92915050565b600054600160a01b900460ff16156114da5760405162461bcd60e51b815260040161051590611948565b60065481111580156114ee57506005548110155b61150a5760405162461bcd60e51b815260040161051590611972565b336000818152600c602052604090205460ff161561153a5760405162461bcd60e51b8152600401610515906119c4565b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061156e90849030908790600401611a06565b6020604051808303816000875af115801561158d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115b19190611a2a565b506001600160a01b0381166000908152600c6020908152604091829020805460ff19166001179055815160608101835284815242918101829052918201906115fc9062093a80611a62565b90526001600160a01b0382166000908152600d602090815260408083208451815591840151600183015592909201516002909201919091557f17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f2390829084426106ad8162093a80611a62565b600054600160a01b900460ff166116b75760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610515565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6000806117118442611ae6565b905060006301e133806127106117278689611b2e565b6117319190611b4d565b61173b9190611b4d565b905060006117498284611b2e565b979650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156117ce5760405162461bcd60e51b815260040161051590611948565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116e73390565b60006020828403121561181b57600080fd5b5035919050565b80356001600160a01b038116811461183957600080fd5b919050565b60006020828403121561185057600080fd5b610aad82611822565b803560ff8116811461183957600080fd5b60008060006060848603121561187f57600080fd5b61188884611822565b925061189660208501611859565b9150604084013590509250925092565b6000806000606084860312156118bb57600080fd5b505081359360208301359350604090920135919050565b60008060008060008060c087890312156118eb57600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b6000806040838503121561192857600080fd5b61193183611822565b915061193f60208401611859565b90509250929050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526032908201527f416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e604082015271040c2dcc840d8cae6e640e8d0c2dc40dac2f60731b606082015260800190565b60208082526022908201527f596f7527726520616c726561647920696e2074686973205374616b65206c6576604082015261195b60f21b606082015260800190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611a3c57600080fd5b81518015158114610aad57600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611a7557611a75611a4c565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f4e6f7420656e6f7567682062616c616e636520746f2077697468647261770000604082015260600190565b600082821015611af857611af8611a4c565b500390565b6001600160a01b0395909516855260ff93909316602085015290151560408401526060830152608082015260a00190565b6000816000190483118215151615611b4857611b48611a4c565b500290565b600082611b6a57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220b1817615e6b3db0d0d7b1b78f19962be2cc09238ad00b903b554a0599706815564736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84203F4B GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xBF01651A GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE5D15701 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE5D15701 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xF4217E1E EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xF7EDF9AB EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xFE2981B5 EQ PUSH2 0x4D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBF01651A EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xD3900A52 EQ PUSH2 0x45D JUMPI DUP1 PUSH4 0xD72B11BD EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xDDA4FA8F EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91789CEF GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x91789CEF EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0x927E5998 EQ PUSH2 0x3F5 JUMPI DUP1 PUSH4 0x97E9C5FE EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0xBB664864 EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x84203F4B EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0x8F0FB2B7 EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x635EF285 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x69E06848 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x69E06848 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0x71A1609B EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x7FE509D7 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x8275B181 EQ PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x635EF285 EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x6505CF31 EQ PUSH2 0x2E5 JUMPI DUP1 PUSH4 0x6636389E EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x67911BA4 EQ PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0x6296E750 EQ PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1EF4739 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x1ED81FF8 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x1FF08FEE EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x32938E3A EQ PUSH2 0x245 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x214 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23A PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x4EB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x6E8 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x269 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0x28F PUSH2 0x2AD CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x28F PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST PUSH2 0x330 PUSH2 0x30F CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x21E JUMP JUMPDEST PUSH2 0x214 PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x186A JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST PUSH2 0x23A PUSH2 0xAB4 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x330 PUSH2 0x37D CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x28F PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0xAE8 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x269 JUMP JUMPDEST PUSH2 0x214 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0xB1A JUMP JUMPDEST PUSH2 0x330 PUSH2 0x416 CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x445 CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0xDF1 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x10C8 JUMP JUMPDEST PUSH2 0x214 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x269 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x487 CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x23A PUSH2 0x49A CALLDATASIZE PUSH1 0x4 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x12F7 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x183E JUMP JUMPDEST PUSH2 0x132F JUMP JUMPDEST PUSH2 0x23A PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x18D2 JUMP JUMPDEST PUSH2 0x13CA JUMP JUMPDEST PUSH2 0x28F PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x1411 JUMP JUMPDEST PUSH2 0x23A PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1809 JUMP JUMPDEST PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x51E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x532 JUMPI POP PUSH1 0x7 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x54E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1972 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x19C4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x5B2 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F5 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP5 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD SWAP1 PUSH2 0x640 SWAP1 PUSH3 0x278D00 PUSH2 0x1A62 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH32 0x17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23 SWAP1 DUP3 SWAP1 DUP5 TIMESTAMP PUSH2 0x6AD DUP2 PUSH3 0x278D00 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0xFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x71A PUSH2 0x1667 JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x76D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x55736572206973206E6F742056697 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B3 DUP4 PUSH1 0x2 PUSH2 0x1411 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7C3 DUP5 PUSH1 0x2 DUP8 PUSH2 0x9FB JUMP JUMPDEST SWAP1 POP DUP3 DUP6 EQ ISZERO PUSH2 0x80C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP4 SWAP1 SSTORE PUSH1 0x10 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x83A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x834 SWAP1 DUP5 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0x939 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x893 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B7 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x8F0 SWAP3 SWAP2 AND SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x90F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x933 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH2 0x9B4 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x98E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B2 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP JUMPDEST PUSH32 0xA3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B DUP5 PUSH1 0x2 DUP5 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9EC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP4 AND PUSH2 0xA39 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x2 SLOAD PUSH2 0xA31 SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x1704 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAAD JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0xA71 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0xA31 SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x1704 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0xA31 SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x1704 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x71A PUSH1 0x0 PUSH2 0x1754 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH2 0x71A PUSH2 0x17A4 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x55736572206973206E6F74206F6E204C6576656C203 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xBAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 DUP4 PUSH1 0x0 PUSH2 0x1411 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBC8 DUP5 PUSH1 0x0 DUP8 PUSH2 0x9FB JUMP JUMPDEST SWAP1 POP DUP3 DUP6 EQ ISZERO PUSH2 0xC11 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP4 SWAP1 SSTORE PUSH1 0xC SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xC3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xC39 SWAP1 DUP5 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0xD3E JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0xCF5 SWAP3 SWAP2 AND SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD38 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH2 0xDB9 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD93 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB7 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP JUMPDEST PUSH32 0xA3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B DUP5 PUSH1 0x0 DUP5 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9EC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xE49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x55736572206973206E6F74206F6E204C6576656C2031 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xE82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1AAF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE8F DUP4 PUSH1 0x1 PUSH2 0x1411 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE9F DUP5 PUSH1 0x1 DUP8 PUSH2 0x9FB JUMP JUMPDEST SWAP1 POP DUP3 DUP6 EQ ISZERO PUSH2 0xEE8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP4 SWAP1 SSTORE PUSH1 0xE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xF16 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xF10 SWAP1 DUP5 SWAP1 PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0x1015 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF6F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF93 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0xFCC SWAP3 SWAP2 AND SWAP1 DUP9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFEB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x100F SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH2 0x1090 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x106A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x108E SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP JUMPDEST PUSH32 0xA3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B DUP5 PUSH1 0x1 DUP5 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9EC SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10F2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x1106 JUMPI POP PUSH1 0x9 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x1122 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1972 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1182 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7527726520616C726561647920696E2074686520566970205374616B6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x515 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x11B6 SWAP1 DUP5 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11D5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11F9 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP5 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD SWAP1 PUSH2 0x1244 SWAP1 PUSH3 0x76A700 PUSH2 0x1A62 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 ADD MLOAD PUSH1 0x2 SWAP2 DUP3 ADD SSTORE PUSH32 0x17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23 SWAP1 DUP3 SWAP1 DUP5 TIMESTAMP PUSH2 0x6AD DUP2 PUSH3 0x76A700 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1321 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x2 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x3 SSTORE PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1359 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x515 JUMP JUMPDEST PUSH2 0x13C7 DUP2 PUSH2 0x1754 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1A7A JUMP JUMPDEST PUSH1 0x5 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 AND PUSH2 0x143E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x14A4 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x146C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x14A4 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x149A JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x14A4 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x14AA JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x14DA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x14EE JUMPI POP PUSH1 0x5 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x150A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1972 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x153A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x19C4 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x156E SWAP1 DUP5 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x158D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15B1 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP5 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD SWAP1 PUSH2 0x15FC SWAP1 PUSH3 0x93A80 PUSH2 0x1A62 JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE SWAP3 SWAP1 SWAP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23 SWAP1 DUP3 SWAP1 DUP5 TIMESTAMP PUSH2 0x6AD DUP2 PUSH3 0x93A80 PUSH2 0x1A62 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x515 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1711 DUP5 TIMESTAMP PUSH2 0x1AE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0x1727 DUP7 DUP10 PUSH2 0x1B2E JUMP JUMPDEST PUSH2 0x1731 SWAP2 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST PUSH2 0x173B SWAP2 SWAP1 PUSH2 0x1B4D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1749 DUP3 DUP5 PUSH2 0x1B2E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x17CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x515 SWAP1 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x16E7 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x181B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAAD DUP3 PUSH2 0x1822 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1839 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x187F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1888 DUP5 PUSH2 0x1822 JUMP JUMPDEST SWAP3 POP PUSH2 0x1896 PUSH1 0x20 DUP6 ADD PUSH2 0x1859 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x18BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x18EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 CALLDATALOAD SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1931 DUP4 PUSH2 0x1822 JUMP JUMPDEST SWAP2 POP PUSH2 0x193F PUSH1 0x20 DUP5 ADD PUSH2 0x1859 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206E6565647320746F206265206D6F7265207468616E206D696E PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x40C2DCC840D8CAE6E640E8D0C2DC40DAC2F PUSH1 0x73 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7527726520616C726561647920696E2074686973205374616B65206C6576 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x195B PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A3C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xAAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1A75 JUMPI PUSH2 0x1A75 PUSH2 0x1A4C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F2077697468647261770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1AF8 JUMPI PUSH2 0x1AF8 PUSH2 0x1A4C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0xFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B48 JUMPI PUSH2 0x1B48 PUSH2 0x1A4C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B6A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 DUP2 PUSH23 0x15E6B3DB0D0D7B1B78F19962BE2CC09238AD00B903B554 LOG0 MSIZE SWAP8 MOD DUP2 SSTORE PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "225:10475:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;773:39;;;;;;;;;160:25:5;;;148:2;133:18;773:39:4;;;;;;;;3873:694;;;;;;:::i;:::-;;:::i;:::-;;567:31;;;;;;604:33;;;;;;1895:64;;;:::i;320:27::-;;;;;-1:-1:-1;;;;;320:27:4;;;;;;-1:-1:-1;;;;;559:32:5;;;541:51;;529:2;514:18;320:27:4;381:217:5;1098:84:1;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1098:84;;;768:14:5;;761:22;743:41;;731:2;716:18;1098:84:1;603:187:5;1084:41:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1184;;;;;;:::i;:::-;;;;;;;;;;;;;;;;678:38;;;;;;9736:960;;;;;;:::i;:::-;;:::i;1131:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1366:25:5;;;1422:2;1407:18;;1400:34;;;;1450:18;;;1443:34;1354:2;1339:18;1131:47:4;1164:319:5;6244:686:4;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;722:45:4:-;;;;;;1231:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;529:32;;;;;;1284:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1825:60;;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;916:48:4;;;;;;869:41;;;;;;7458:982;;;;;;:::i;:::-;;:::i;1328:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;8598:980;;;;;;:::i;:::-;;:::i;4766:699::-;;;;;;:::i;:::-;;:::i;818:45::-;;;;;;997:28;;;;;-1:-1:-1;;;;;997:28:4;;;2019:119;;;;;;:::i;:::-;;:::i;2205:208::-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;2495:372:4:-;;;;;;:::i;:::-;;:::i;5610:499::-;;;;;;:::i;:::-;;:::i;3016:701::-;;;;;;:::i;:::-;;:::i;3873:694::-;1145:4:1;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;;;;;;;;;3962:9:4::1;;3951:7;:20;;:44;;;;;3986:9;;3975:7;:20;;3951:44;3943:107;;;;-1:-1:-1::0;;;3943:107:4::1;;;;;;;:::i;:::-;4081:10;4060:18;4112:20:::0;;;:8:::1;:20;::::0;;;;;::::1;;4111:21;4103:68;;;;-1:-1:-1::0;;;4103:68:4::1;;;;;;;:::i;:::-;4188:13;::::0;:62:::1;::::0;-1:-1:-1;;;4188:62:4;;-1:-1:-1;;;;;4188:13:4;;::::1;::::0;:26:::1;::::0;:62:::1;::::0;4215:10;;4235:4:::1;::::0;4242:7;;4188:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;4261:20:4;::::1;;::::0;;;:8:::1;:20;::::0;;;;;;;;:27;;-1:-1:-1;;4261:27:4::1;4284:4;4261:27;::::0;;4326:138;;::::1;::::0;::::1;::::0;;;;;4388:15:::1;4326:138:::0;;::::1;::::0;;;;;;;4428:25:::1;::::0;4446:7:::1;4428:25;:::i;:::-;4326:138:::0;;-1:-1:-1;;;;;4298:25:4;::::1;;::::0;;;:13:::1;:25;::::0;;;;;;;;:166;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;4484:76:::1;::::0;4312:10;;4508:7;4517:15:::1;4534:25;4517:15:::0;4552:7:::1;4534:25;:::i;:::-;4484:76;::::0;;-1:-1:-1;;;;;5673:32:5;;;5655:51;;5754:4;5742:17;;;5737:2;5722:18;;5715:45;5776:18;;;5769:34;;;;5834:2;5819:18;;5812:34;5877:3;5862:19;;5855:35;5642:3;5627:19;4484:76:4::1;;;;;;;3933:634;3873:694:::0;:::o;1895:64::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1942:10:4::1;:8;:10::i;:::-;1895:64::o:0;9736:960::-;9814:10;9793:18;9842:17;;;:5;:17;;;;;;;;9834:45;;;;-1:-1:-1;;;9834:45:4;;6464:2:5;9834:45:4;;;6446:21:5;6503:2;6483:18;;;6476:30;-1:-1:-1;;;6522:18:5;;;6515:45;6577:18;;9834:45:4;6262:339:5;9834:45:4;-1:-1:-1;;;;;9912:22:4;;9894:15;9912:22;;;:10;:22;;;;;:30;9960:18;;;;9952:61;;;;-1:-1:-1;;;9952:61:4;;;;;;;:::i;:::-;10024:14;10041:23;10050:10;10062:1;10041:8;:23::i;:::-;10024:40;;10074:16;10093:35;10105:10;10117:1;10120:7;10093:11;:35::i;:::-;10074:54;;10153:7;10142;:18;10139:192;;;-1:-1:-1;;;;;10182:22:4;;;;;;:10;:22;;;;;;;;10175:29;;;;;;;;;;;;;;10223:5;:17;;;;;:25;;-1:-1:-1;;10223:25:4;;;10139:192;;;-1:-1:-1;;;;;10279:22:4;;;;;;:10;:22;;;;;:41;;10313:7;;10279:22;:41;;10313:7;;10279:41;:::i;:::-;;;;-1:-1:-1;;10139:192:4;10344:9;10341:280;;;10368:13;;:43;;-1:-1:-1;;;10368:43:4;;-1:-1:-1;;;;;7287:32:5;;;10368:43:4;;;7269:51:5;7336:18;;;7329:34;;;10368:13:4;;;;:22;;7242:18:5;;10368:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;10425:13:4;;10452;;10425:63;;-1:-1:-1;;;10425:63:4;;-1:-1:-1;;;;;10425:13:4;;;;:26;;:63;;10452:13;;;10467:10;;10479:8;;10425:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10341:280;;;-1:-1:-1;10556:13:4;;:43;;-1:-1:-1;;;10556:43:4;;-1:-1:-1;;;;;7287:32:5;;;10556:43:4;;;7269:51:5;7336:18;;;7329:34;;;10530:1:4;;10556:13;;:22;;7242:18:5;;10556:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10341:280;10636:53;10645:10;10657:1;10660:9;10671:7;10680:8;10636:53;;;;;;;;;;:::i;:::-;;;;;;;;9783:913;;;;9736:960;:::o;6244:686::-;6331:7;6352:10;;;6349:575;;-1:-1:-1;;;;;6411:19:4;;6388:20;6411:19;;;:13;:19;;;;;:31;;;6504:9;;6464:50;;6482:7;;6411:31;;6464:17;:50::i;:::-;6457:57;;;;;6349:575;6535:5;:10;;6544:1;6535:10;6531:393;;;-1:-1:-1;;;;;6589:19:4;;6566:20;6589:19;;;:13;:19;;;;;:31;;;6682:9;;6642:50;;6660:7;;6589:31;;6642:17;:50::i;6531:393::-;6713:5;:10;;6722:1;6713:10;6709:215;;;-1:-1:-1;;;;;6772:16:4;;6749:20;6772:16;;;:10;:16;;;;;:28;;;6862:11;;6822:52;;6840:7;;6772:28;;6822:17;:52::i;6709:215::-;-1:-1:-1;6912:1:4;6709:215;6244:686;;;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;1825:60:4:-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1870:8:4::1;:6;:8::i;7458:982::-:0;7539:10;7518:18;7567:20;;;:8;:20;;;;;;;;7559:55;;;;-1:-1:-1;;;7559:55:4;;8097:2:5;7559:55:4;;;8079:21:5;8136:2;8116:18;;;8109:30;-1:-1:-1;;;8155:18:5;;;8148:52;8217:18;;7559:55:4;7895:346:5;7559:55:4;-1:-1:-1;;;;;7643:25:4;;7625:15;7643:25;;;:13;:25;;;;;:33;7694:18;;;;7686:61;;;;-1:-1:-1;;;7686:61:4;;;;;;;:::i;:::-;7758:14;7775:23;7784:10;7796:1;7775:8;:23::i;:::-;7758:40;;7808:16;7827:35;7839:10;7851:1;7854:7;7827:11;:35::i;:::-;7808:54;;7887:7;7876;:18;7873:202;;;-1:-1:-1;;;;;7916:25:4;;;;;;:13;:25;;;;;;;;7909:32;;;;;;;;;;;;;;7961:8;:20;;;;;:28;;-1:-1:-1;;7961:28:4;;;7873:202;;;-1:-1:-1;;;;;8020:25:4;;;;;;:13;:25;;;;;:44;;8057:7;;8020:25;:44;;8057:7;;8020:44;:::i;:::-;;;;-1:-1:-1;;7873:202:4;8088:9;8085:276;;;8112:13;;:43;;-1:-1:-1;;;8112:43:4;;-1:-1:-1;;;;;7287:32:5;;;8112:43:4;;;7269:51:5;7336:18;;;7329:34;;;8112:13:4;;;;:22;;7242:18:5;;8112:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8169:13:4;;8196;;8169:63;;-1:-1:-1;;;8169:63:4;;-1:-1:-1;;;;;8169:13:4;;;;:26;;:63;;8196:13;;;8211:10;;8223:8;;8169:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8085:276;;;-1:-1:-1;8296:13:4;;:43;;-1:-1:-1;;;8296:43:4;;-1:-1:-1;;;;;7287:32:5;;;8296:43:4;;;7269:51:5;7336:18;;;7329:34;;;8274:1:4;;8296:13;;:22;;7242:18:5;;8296:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8085:276;8380:53;8389:10;8401:1;8404:9;8415:7;8424:8;8380:53;;;;;;;;;;:::i;8598:980::-;8679:10;8658:18;8707:20;;;:8;:20;;;;;;;;8699:55;;;;-1:-1:-1;;;8699:55:4;;8969:2:5;8699:55:4;;;8951:21:5;9008:2;8988:18;;;8981:30;-1:-1:-1;;;9027:18:5;;;9020:52;9089:18;;8699:55:4;8767:346:5;8699:55:4;-1:-1:-1;;;;;8783:25:4;;8765:15;8783:25;;;:13;:25;;;;;:33;8834:18;;;;8826:61;;;;-1:-1:-1;;;8826:61:4;;;;;;;:::i;:::-;8898:14;8915:23;8924:10;8936:1;8915:8;:23::i;:::-;8898:40;;8948:16;8967:35;8979:10;8991:1;8994:7;8967:11;:35::i;:::-;8948:54;;9027:7;9016;:18;9013:202;;;-1:-1:-1;;;;;9056:25:4;;;;;;:13;:25;;;;;;;;9049:32;;;;;;;;;;;;;;9101:8;:20;;;;;:28;;-1:-1:-1;;9101:28:4;;;9013:202;;;-1:-1:-1;;;;;9160:25:4;;;;;;:13;:25;;;;;:44;;9197:7;;9160:25;:44;;9197:7;;9160:44;:::i;:::-;;;;-1:-1:-1;;9013:202:4;9228:9;9225:278;;;9252:13;;:43;;-1:-1:-1;;;9252:43:4;;-1:-1:-1;;;;;7287:32:5;;;9252:43:4;;;7269:51:5;7336:18;;;7329:34;;;9252:13:4;;;;:22;;7242:18:5;;9252:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9309:13:4;;9336;;9309:63;;-1:-1:-1;;;9309:63:4;;-1:-1:-1;;;;;9309:13:4;;;;:26;;:63;;9336:13;;;9351:10;;9363:8;;9309:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9225:278;;;-1:-1:-1;9438:13:4;;:43;;-1:-1:-1;;;9438:43:4;;-1:-1:-1;;;;;7287:32:5;;;9438:43:4;;;7269:51:5;7336:18;;;7329:34;;;9414:1:4;;9438:13;;:22;;7242:18:5;;9438:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9225:278;9518:53;9527:10;9539:1;9542:9;9553:7;9562:8;9518:53;;;;;;;;;;:::i;4766:699::-;1145:4:1;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;4852:11:4::1;;4841:7;:22;;:48;;;;;4878:11;;4867:7;:22;;4841:48;4833:111;;;;-1:-1:-1::0;;;4833:111:4::1;;;;;;;:::i;:::-;4975:10;4954:18;5017:17:::0;;;:5:::1;:17;::::0;;;;;::::1;;5016:18;5008:62;;;::::0;-1:-1:-1;;;5008:62:4;;9841:2:5;5008:62:4::1;::::0;::::1;9823:21:5::0;9880:2;9860:18;;;9853:30;9919:33;9899:18;;;9892:61;9970:18;;5008:62:4::1;9639:355:5::0;5008:62:4::1;5089:13;::::0;:62:::1;::::0;-1:-1:-1;;;5089:62:4;;-1:-1:-1;;;;;5089:13:4;;::::1;::::0;:26:::1;::::0;:62:::1;::::0;5116:10;;5136:4:::1;::::0;5143:7;;5089:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;5162:17:4;::::1;;::::0;;;:5:::1;:17;::::0;;;;;;;;:24;;-1:-1:-1;;5162:24:4::1;5182:4;5162:24;::::0;;5221:138;;::::1;::::0;::::1;::::0;;;;;5283:15:::1;5221:138:::0;;::::1;::::0;;;;;;;5323:25:::1;::::0;5341:7:::1;5323:25;:::i;:::-;5221:138:::0;;-1:-1:-1;;;;;5196:22:4;::::1;;::::0;;;:10:::1;:22;::::0;;;;;;;;:163;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;5382:76:::1;::::0;5207:10;;5406:7;5415:15:::1;5432:25;5415:15:::0;5450:7:::1;5432:25;:::i;2019:119::-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2098:13:4::1;:30:::0;;-1:-1:-1;;;;;;2098:30:4::1;-1:-1:-1::0;;;;;2098:30:4;;;::::1;::::0;;;::::1;::::0;;2019:119::o;2205:208::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2316:9:4::1;:22:::0;;;;2348:9:::1;:22:::0;2380:11:::1;:26:::0;2205:208::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;10712:2:5;1998:73:0::1;::::0;::::1;10694:21:5::0;10751:2;10731:18;;;10724:30;10790:34;10770:18;;;10763:62;-1:-1:-1;;;10841:18:5;;;10834:36;10887:19;;1998:73:0::1;10510:402:5::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2495:372:4:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2670:9:4::1;:22:::0;;;;2702:9:::1;:22:::0;;;;2734:9:::1;:22:::0;;;;2766:9:::1;:22:::0;2798:11:::1;:26:::0;2834:11:::1;:26:::0;2495:372::o;5610:499::-;5677:4;;5725:10;;;5722:334;;-1:-1:-1;;;;;;5764:19:4;;;;;;:13;:19;;;;;:30;;;5722:334;;;5826:5;:10;;5835:1;5826:10;5822:234;;;-1:-1:-1;;;;;;5865:19:4;;;;;;:13;:19;;;;;:30;;;5822:234;;;5925:5;:10;;5934:1;5925:10;5921:135;;;-1:-1:-1;;;;;;5964:16:4;;;;;;:10;:16;;;;;:27;;;5921:135;;;6040:5;6033:12;;;;;5921:135;6072:15;:30;;;-1:-1:-1;5610:499:4;;;;;:::o;3016:701::-;1145:4:1;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;3105:9:4::1;;3094:7;:20;;:44;;;;;3129:9;;3118:7;:20;;3094:44;3086:107;;;;-1:-1:-1::0;;;3086:107:4::1;;;;;;;:::i;:::-;3224:10;3203:18;3258:20:::0;;;:8:::1;:20;::::0;;;;;::::1;;3257:21;3249:68;;;;-1:-1:-1::0;;;3249:68:4::1;;;;;;;:::i;:::-;3332:13;::::0;:62:::1;::::0;-1:-1:-1;;;3332:62:4;;-1:-1:-1;;;;;3332:13:4;;::::1;::::0;:26:::1;::::0;:62:::1;::::0;3359:10;;3379:4:::1;::::0;3386:7;;3332:62:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;3405:20:4;::::1;;::::0;;;:8:::1;:20;::::0;;;;;;;;:27;;-1:-1:-1;;3405:27:4::1;3428:4;3405:27;::::0;;3470:140;;::::1;::::0;::::1;::::0;;;;;3534:15:::1;3470:140:::0;;::::1;::::0;;;;;;;3575:24:::1;::::0;3593:6:::1;3575:24;:::i;:::-;3470:140:::0;;-1:-1:-1;;;;;3442:25:4;::::1;;::::0;;;:13:::1;:25;::::0;;;;;;;:168;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;3635:75:::1;::::0;3456:10;;3659:7;3668:15:::1;3685:24;3668:15:::0;3703:6:::1;3685:24;:::i;2110:117:1:-:0;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;11630:2:5;1669:41:1;;;11612:21:5;11669:2;11649:18;;;11642:30;-1:-1:-1;;;11688:18:5;;;11681:50;11748:18;;1669:41:1;11428:344:5;1669:41:1;2178:5:::1;2168:15:::0;;-1:-1:-1;;;;2168:15:1::1;::::0;;2198:22:::1;719:10:3::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;559:32:5;;;541:51;;529:2;514:18;2198:22:1::1;;;;;;;2110:117::o:0;6936:364:4:-;7041:7;;7080:30;7098:12;7080:15;:30;:::i;:::-;7059:51;-1:-1:-1;7128:25:4;7186:8;7177:5;7158:15;7169:4;7158:8;:15;:::i;:::-;7157:25;;;;:::i;:::-;7156:38;;;;:::i;:::-;7128:66;-1:-1:-1;7204:23:4;7230:30;7128:66;7230:10;:30;:::i;:::-;7204:56;6936:364;-1:-1:-1;;;;;;;6936:364:4:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;;;1922:14:1::1;-1:-1:-1::0;;;1922:14:1::1;::::0;;1951:20:::1;1958:12;719:10:3::0;;640:96;196:180:5;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;347:23:5;;196:180;-1:-1:-1;196:180:5:o;795:173::-;863:20;;-1:-1:-1;;;;;912:31:5;;902:42;;892:70;;958:1;955;948:12;892:70;795:173;;;:::o;973:186::-;1032:6;1085:2;1073:9;1064:7;1060:23;1056:32;1053:52;;;1101:1;1098;1091:12;1053:52;1124:29;1143:9;1124:29;:::i;1488:156::-;1554:20;;1614:4;1603:16;;1593:27;;1583:55;;1634:1;1631;1624:12;1649:324;1724:6;1732;1740;1793:2;1781:9;1772:7;1768:23;1764:32;1761:52;;;1809:1;1806;1799:12;1761:52;1832:29;1851:9;1832:29;:::i;:::-;1822:39;;1880:36;1912:2;1901:9;1897:18;1880:36;:::i;:::-;1870:46;;1963:2;1952:9;1948:18;1935:32;1925:42;;1649:324;;;;;:::o;2186:316::-;2263:6;2271;2279;2332:2;2320:9;2311:7;2307:23;2303:32;2300:52;;;2348:1;2345;2338:12;2300:52;-1:-1:-1;;2371:23:5;;;2441:2;2426:18;;2413:32;;-1:-1:-1;2492:2:5;2477:18;;;2464:32;;2186:316;-1:-1:-1;2186:316:5:o;2507:523::-;2611:6;2619;2627;2635;2643;2651;2704:3;2692:9;2683:7;2679:23;2675:33;2672:53;;;2721:1;2718;2711:12;2672:53;-1:-1:-1;;2744:23:5;;;2814:2;2799:18;;2786:32;;-1:-1:-1;2865:2:5;2850:18;;2837:32;;2916:2;2901:18;;2888:32;;-1:-1:-1;2967:3:5;2952:19;;2939:33;;-1:-1:-1;3019:3:5;3004:19;2991:33;;-1:-1:-1;2507:523:5;-1:-1:-1;2507:523:5:o;3035:256::-;3101:6;3109;3162:2;3150:9;3141:7;3137:23;3133:32;3130:52;;;3178:1;3175;3168:12;3130:52;3201:29;3220:9;3201:29;:::i;:::-;3191:39;;3249:36;3281:2;3270:9;3266:18;3249:36;:::i;:::-;3239:46;;3035:256;;;;;:::o;3296:340::-;3498:2;3480:21;;;3537:2;3517:18;;;3510:30;-1:-1:-1;;;3571:2:5;3556:18;;3549:46;3627:2;3612:18;;3296:340::o;3641:414::-;3843:2;3825:21;;;3882:2;3862:18;;;3855:30;3921:34;3916:2;3901:18;;3894:62;-1:-1:-1;;;3987:2:5;3972:18;;3965:48;4045:3;4030:19;;3641:414::o;4060:398::-;4262:2;4244:21;;;4301:2;4281:18;;;4274:30;4340:34;4335:2;4320:18;;4313:62;-1:-1:-1;;;4406:2:5;4391:18;;4384:32;4448:3;4433:19;;4060:398::o;4463:375::-;-1:-1:-1;;;;;4721:15:5;;;4703:34;;4773:15;;;;4768:2;4753:18;;4746:43;4820:2;4805:18;;4798:34;;;;4653:2;4638:18;;4463:375::o;4843:277::-;4910:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:52;;;4979:1;4976;4969:12;4931:52;5011:9;5005:16;5064:5;5057:13;5050:21;5043:5;5040:32;5030:60;;5086:1;5083;5076:12;5125:127;5186:10;5181:3;5177:20;5174:1;5167:31;5217:4;5214:1;5207:15;5241:4;5238:1;5231:15;5257:128;5297:3;5328:1;5324:6;5321:1;5318:13;5315:39;;;5334:18;;:::i;:::-;-1:-1:-1;5370:9:5;;5257:128::o;5901:356::-;6103:2;6085:21;;;6122:18;;;6115:30;6181:34;6176:2;6161:18;;6154:62;6248:2;6233:18;;5901:356::o;6606:354::-;6808:2;6790:21;;;6847:2;6827:18;;;6820:30;6886:32;6881:2;6866:18;;6859:60;6951:2;6936:18;;6606:354::o;6965:125::-;7005:4;7033:1;7030;7027:8;7024:34;;;7038:18;;:::i;:::-;-1:-1:-1;7075:9:5;;6965:125::o;7374:516::-;-1:-1:-1;;;;;7651:32:5;;;;7633:51;;7732:4;7720:17;;;;7715:2;7700:18;;7693:45;7781:14;;7774:22;7769:2;7754:18;;7747:50;7828:2;7813:18;;7806:34;7871:3;7856:19;;7849:35;7620:3;7605:19;;7374:516::o;11777:168::-;11817:7;11883:1;11879;11875:6;11871:14;11868:1;11865:21;11860:1;11853:9;11846:17;11842:45;11839:71;;;11890:18;;:::i;:::-;-1:-1:-1;11930:9:5;;11777:168::o;11950:217::-;11990:1;12016;12006:132;;12060:10;12055:3;12051:20;12048:1;12041:31;12095:4;12092:1;12085:15;12123:4;12120:1;12113:15;12006:132;-1:-1:-1;12152:9:5;;11950:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1415400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptedToken()": "2405",
								"enterLevel0(uint256)": "infinite",
								"enterLevel1(uint256)": "infinite",
								"enterVip(uint256)": "infinite",
								"getInterest(address,uint8,uint256)": "infinite",
								"isLevel0(address)": "2643",
								"isLevel1(address)": "2577",
								"isOnTime(address,uint8)": "infinite",
								"isVip(address)": "2577",
								"level0APY()": "2417",
								"level0Balance(address)": "6906",
								"level0Max()": "2373",
								"level0Min()": "2352",
								"level1APY()": "2375",
								"level1Balance(address)": "6905",
								"level1Max()": "2351",
								"level1Min()": "2331",
								"levelVipMax()": "2396",
								"levelVipMin()": "2329",
								"owner()": "2421",
								"pause()": "29847",
								"paused()": "2400",
								"renounceOwnership()": "28181",
								"reserveWallet()": "2426",
								"setNewAPY(uint256,uint256,uint256)": "68769",
								"setNewMaxMin(uint256,uint256,uint256,uint256,uint256,uint256)": "135194",
								"setReserveWallet(address)": "26822",
								"transferOwnership(address)": "28375",
								"unpause()": "29796",
								"vipBalance(address)": "6883",
								"vipLevelAPY()": "2397",
								"withdrawLevel0(uint256)": "infinite",
								"withdrawLevel1(uint256)": "infinite",
								"withdrawVip(uint256)": "infinite"
							},
							"internal": {
								"calculateInterest(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 225,
									"end": 10700,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 225,
									"end": 10700,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 225,
									"end": 10700,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 557,
									"end": 561,
									"name": "PUSH",
									"source": 4,
									"value": "A8C"
								},
								{
									"begin": 529,
									"end": 561,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 529,
									"end": 561,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 594,
									"end": 598,
									"name": "PUSH",
									"source": 4,
									"value": "E74"
								},
								{
									"begin": 567,
									"end": 598,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 567,
									"end": 598,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 633,
									"end": 637,
									"name": "PUSH",
									"source": 4,
									"value": "12C0"
								},
								{
									"begin": 604,
									"end": 637,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 604,
									"end": 637,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 705,
									"end": 716,
									"name": "PUSH",
									"source": 4,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 678,
									"end": 716,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 678,
									"end": 716,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 749,
									"end": 767,
									"name": "PUSH",
									"source": 4,
									"value": "19D971E4FE8401E74000000"
								},
								{
									"begin": 722,
									"end": 767,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 722,
									"end": 767,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 800,
									"end": 812,
									"name": "PUSH",
									"source": 4,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 773,
									"end": 812,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 845,
									"end": 863,
									"name": "PUSH",
									"source": 4,
									"value": "19D971E4FE8401E74000000"
								},
								{
									"begin": 818,
									"end": 863,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 818,
									"end": 863,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 898,
									"end": 910,
									"name": "PUSH",
									"source": 4,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 869,
									"end": 910,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 869,
									"end": 910,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 945,
									"end": 964,
									"name": "PUSH",
									"source": 4,
									"value": "813F3978F89409844000000"
								},
								{
									"begin": 916,
									"end": 964,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 916,
									"end": 964,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1627,
									"end": 1774,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 991,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1720,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1743,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 1730,
									"end": 1760,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1760,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1760,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1760,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1760,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1760,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1760,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1760,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1760,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1760,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1730,
									"end": 1760,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 225,
									"end": 10700,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 225,
									"end": 10700,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 225,
									"end": 10700,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 10700,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 225,
									"end": 10700,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 225,
									"end": 10700,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 10700,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 225,
									"end": 10700,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 225,
									"end": 10700,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b1817615e6b3db0d0d7b1b78f19962be2cc09238ad00b903b554a0599706815564736f6c634300080b0033",
									".code": [
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "84203F4B"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "BF01651A"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "E5D15701"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "E5D15701"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "F4217E1E"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "F7EDF9AB"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "FE2981B5"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "BF01651A"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "D3900A52"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "D72B11BD"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "DDA4FA8F"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "91789CEF"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "91789CEF"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "927E5998"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "97E9C5FE"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "BB664864"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "84203F4B"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "8F0FB2B7"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "635EF285"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "69E06848"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "69E06848"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "71A1609B"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "7FE509D7"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "8275B181"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "635EF285"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "6505CF31"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "6636389E"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "67911BA4"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "3F4BA83A"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "3F4BA83A"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "451C3D80"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "5C975ABB"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "6296E750"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "1EF4739"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "1ED81FF8"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "1FF08FEE"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "32938E3A"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 225,
											"end": 10700,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 773,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 773,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 773,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 773,
											"end": 812,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 773,
											"end": 812,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 773,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 773,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 773,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 773,
											"end": 812,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 773,
											"end": 812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 773,
											"end": 812,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 812,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 773,
											"end": 812,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 773,
											"end": 812,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 567,
											"end": 598,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 567,
											"end": 598,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 567,
											"end": 598,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 567,
											"end": 598,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 604,
											"end": 637,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 604,
											"end": 637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 604,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 604,
											"end": 637,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 637,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 604,
											"end": 637,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 604,
											"end": 637,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1959,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1895,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1895,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1895,
											"end": 1959,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 320,
											"end": 347,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 320,
											"end": 347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 320,
											"end": 347,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 320,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 320,
											"end": 347,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 320,
											"end": 347,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 320,
											"end": 347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 320,
											"end": 347,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 320,
											"end": 347,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 320,
											"end": 347,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 347,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 320,
											"end": 347,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 559,
											"end": 591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 559,
											"end": 591,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 559,
											"end": 591,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 541,
											"end": 592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 541,
											"end": 592,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 529,
											"end": 531,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 320,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 381,
											"end": 598,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 768,
											"end": 782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 768,
											"end": 782,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 761,
											"end": 783,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 743,
											"end": 784,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 743,
											"end": 784,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 731,
											"end": 733,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 734,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 603,
											"end": 790,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1125,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 678,
											"end": 716,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 678,
											"end": 716,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 678,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 678,
											"end": 716,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 678,
											"end": 716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 678,
											"end": 716,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 678,
											"end": 716,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1366,
											"end": 1391,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1391,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1366,
											"end": 1391,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1422,
											"end": 1424,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1425,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1434,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1400,
											"end": 1434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1468,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1468,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1468,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1477,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1354,
											"end": 1356,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1339,
											"end": 1357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1178,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1164,
											"end": 1483,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 722,
											"end": 767,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 722,
											"end": 767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 722,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 722,
											"end": 767,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 722,
											"end": 767,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 722,
											"end": 767,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 722,
											"end": 767,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1231,
											"end": 1278,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 529,
											"end": 561,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 529,
											"end": 561,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 529,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 529,
											"end": 561,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 529,
											"end": 561,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 529,
											"end": 561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 529,
											"end": 561,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1322,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1885,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1825,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1825,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1825,
											"end": 1885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 916,
											"end": 964,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 916,
											"end": 964,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 916,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 916,
											"end": 964,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 916,
											"end": 964,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 916,
											"end": 964,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 916,
											"end": 964,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 869,
											"end": 910,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 869,
											"end": 910,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 869,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 869,
											"end": 910,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 869,
											"end": 910,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 869,
											"end": 910,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 869,
											"end": 910,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1372,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 818,
											"end": 863,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 818,
											"end": 863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 818,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 818,
											"end": 863,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 818,
											"end": 863,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 818,
											"end": 863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 818,
											"end": 863,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1025,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 997,
											"end": 1025,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1025,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 997,
											"end": 1025,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1025,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 997,
											"end": 1025,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 997,
											"end": 1025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1025,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 997,
											"end": 1025,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 3971,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3962,
											"end": 3971,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3958,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3971,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3995,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3995,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3951,
											"end": 3995,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3995,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3986,
											"end": 3995,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3975,
											"end": 3982,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3975,
											"end": 3995,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3975,
											"end": 3995,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 3995,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3951,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 3943,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4081,
											"end": 4091,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4060,
											"end": 4078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4120,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4112,
											"end": 4132,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4132,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 4103,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 4188,
											"end": 4214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4225,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4235,
											"end": 4239,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4235,
											"end": 4239,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4242,
											"end": 4249,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4242,
											"end": 4249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4188,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4269,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4281,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4288,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4288,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4261,
											"end": 4288,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4288,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4261,
											"end": 4288,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4288,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4261,
											"end": 4288,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4388,
											"end": 4403,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4446,
											"end": 4453,
											"name": "PUSH",
											"source": 4,
											"value": "278D00"
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 4428,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4326,
											"end": 4464,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4311,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4323,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4298,
											"end": 4464,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4560,
											"name": "PUSH",
											"source": 4,
											"value": "17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23"
										},
										{
											"begin": 4484,
											"end": 4560,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4322,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4312,
											"end": 4322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4508,
											"end": 4515,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4517,
											"end": 4532,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4534,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4517,
											"end": 4532,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4552,
											"end": 4559,
											"name": "PUSH",
											"source": 4,
											"value": "278D00"
										},
										{
											"begin": 4534,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 4534,
											"end": 4559,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4534,
											"end": 4559,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 4534,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4560,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4484,
											"end": 4560,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4560,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5673,
											"end": 5705,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5673,
											"end": 5705,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 5673,
											"end": 5705,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5655,
											"end": 5706,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5655,
											"end": 5706,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5754,
											"end": 5758,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5742,
											"end": 5759,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5759,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5742,
											"end": 5759,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5739,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5722,
											"end": 5740,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5740,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5715,
											"end": 5760,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5776,
											"end": 5794,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5803,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5819,
											"end": 5837,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5819,
											"end": 5837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5812,
											"end": 5846,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5877,
											"end": 5880,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 5862,
											"end": 5881,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5862,
											"end": 5881,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5855,
											"end": 5890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5642,
											"end": 5645,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5627,
											"end": 5646,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4484,
											"end": 4560,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4484,
											"end": 4560,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4560,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4560,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4560,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4560,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4484,
											"end": 4560,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 3933,
											"end": 4567,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4567,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1895,
											"end": 1959,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1895,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1942,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1942,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 1942,
											"end": 1952,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1942,
											"end": 1952,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1942,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1895,
											"end": 1959,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9814,
											"end": 9824,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9793,
											"end": 9811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 9847,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9842,
											"end": 9859,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9834,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 9834,
											"end": 9879,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9834,
											"end": 9879,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9834,
											"end": 9879,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9834,
											"end": 9879,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9834,
											"end": 9879,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6466,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9834,
											"end": 9879,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9834,
											"end": 9879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9834,
											"end": 9879,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6446,
											"end": 6467,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6503,
											"end": 6505,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 6483,
											"end": 6501,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6483,
											"end": 6501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55736572206973206E6F742056697"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6522,
											"end": 6540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6515,
											"end": 6560,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6577,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6577,
											"end": 6595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 6262,
											"end": 6601,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9879,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 9834,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9912,
											"end": 9934,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9912,
											"end": 9934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9894,
											"end": 9909,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9912,
											"end": 9934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9912,
											"end": 9934,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9912,
											"end": 9934,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9912,
											"end": 9922,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 9912,
											"end": 9934,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9912,
											"end": 9934,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9912,
											"end": 9934,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9912,
											"end": 9934,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9912,
											"end": 9934,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9912,
											"end": 9942,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9960,
											"end": 9978,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9960,
											"end": 9978,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9960,
											"end": 9978,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9960,
											"end": 9978,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 9952,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10024,
											"end": 10038,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10041,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 10050,
											"end": 10060,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10062,
											"end": 10063,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10041,
											"end": 10049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 10041,
											"end": 10064,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10041,
											"end": 10064,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 10041,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10024,
											"end": 10064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10024,
											"end": 10064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10074,
											"end": 10090,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10093,
											"end": 10128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 10105,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10117,
											"end": 10118,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10120,
											"end": 10127,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10093,
											"end": 10104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 10093,
											"end": 10128,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10093,
											"end": 10128,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 10093,
											"end": 10128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10074,
											"end": 10128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10074,
											"end": 10128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10153,
											"end": 10160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10142,
											"end": 10149,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10142,
											"end": 10160,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10139,
											"end": 10331,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10139,
											"end": 10331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 10139,
											"end": 10331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10182,
											"end": 10192,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10182,
											"end": 10204,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10175,
											"end": 10204,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10228,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 10223,
											"end": 10240,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10240,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10240,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10240,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10240,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10248,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10248,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10223,
											"end": 10248,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10223,
											"end": 10248,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10139,
											"end": 10331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 10139,
											"end": 10331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10139,
											"end": 10331,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 10139,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10279,
											"end": 10301,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10301,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10301,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10279,
											"end": 10301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10301,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10301,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10289,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 10279,
											"end": 10301,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10279,
											"end": 10301,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10301,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10279,
											"end": 10301,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10301,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10313,
											"end": 10320,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10313,
											"end": 10320,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10313,
											"end": 10320,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10313,
											"end": 10320,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10279,
											"end": 10320,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10139,
											"end": 10331,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 10139,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10344,
											"end": 10353,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10341,
											"end": 10621,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10341,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 10341,
											"end": 10621,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10381,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10368,
											"end": 10381,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10368,
											"end": 10381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10381,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10390,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 10368,
											"end": 10390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 10368,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10425,
											"end": 10438,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10425,
											"end": 10438,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10452,
											"end": 10465,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 10452,
											"end": 10465,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10425,
											"end": 10438,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10438,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10438,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10438,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 10425,
											"end": 10451,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10452,
											"end": 10465,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10452,
											"end": 10465,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10452,
											"end": 10465,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10477,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 10467,
											"end": 10477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10479,
											"end": 10487,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10479,
											"end": 10487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10425,
											"end": 10488,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10341,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 10341,
											"end": 10621,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10341,
											"end": 10621,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 10341,
											"end": 10621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10556,
											"end": 10569,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10556,
											"end": 10569,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10569,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10569,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10578,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 10556,
											"end": 10578,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10556,
											"end": 10599,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10341,
											"end": 10621,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 10341,
											"end": 10621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "PUSH",
											"source": 4,
											"value": "A3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B"
										},
										{
											"begin": 10645,
											"end": 10655,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10657,
											"end": 10658,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10660,
											"end": 10669,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10671,
											"end": 10678,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 10680,
											"end": 10688,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10636,
											"end": 10689,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 9783,
											"end": 10696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9783,
											"end": 10696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9783,
											"end": 10696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9783,
											"end": 10696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9736,
											"end": 10696,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6331,
											"end": 6338,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6362,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6352,
											"end": 6362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6349,
											"end": 6924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6411,
											"end": 6430,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6430,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6388,
											"end": 6408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6411,
											"end": 6430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6430,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6430,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6424,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 6411,
											"end": 6430,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6411,
											"end": 6430,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6430,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6411,
											"end": 6430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6430,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6442,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6411,
											"end": 6442,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6442,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6504,
											"end": 6513,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6504,
											"end": 6513,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6464,
											"end": 6514,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6482,
											"end": 6489,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6482,
											"end": 6489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6442,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6442,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 6464,
											"end": 6514,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6464,
											"end": 6514,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6464,
											"end": 6514,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6514,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6514,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 6457,
											"end": 6514,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6349,
											"end": 6924,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6349,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6535,
											"end": 6540,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6535,
											"end": 6545,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6535,
											"end": 6545,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6544,
											"end": 6545,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6535,
											"end": 6545,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6924,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6531,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 6531,
											"end": 6924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6566,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6602,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6620,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6589,
											"end": 6620,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6620,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6682,
											"end": 6691,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6682,
											"end": 6691,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6642,
											"end": 6692,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6642,
											"end": 6692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6660,
											"end": 6667,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6660,
											"end": 6667,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6620,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6642,
											"end": 6659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 6642,
											"end": 6692,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6531,
											"end": 6924,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 6531,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6713,
											"end": 6718,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6713,
											"end": 6723,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6713,
											"end": 6723,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6722,
											"end": 6723,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6713,
											"end": 6723,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6709,
											"end": 6924,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6709,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 6709,
											"end": 6924,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6749,
											"end": 6769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6772,
											"end": 6782,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6772,
											"end": 6788,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6862,
											"end": 6873,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6862,
											"end": 6873,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6822,
											"end": 6874,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6847,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6772,
											"end": 6800,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6822,
											"end": 6839,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 6822,
											"end": 6874,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6709,
											"end": 6924,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 6709,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6912,
											"end": 6913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6709,
											"end": 6924,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 6709,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6244,
											"end": 6930,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1825,
											"end": 1885,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1825,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1870,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 1870,
											"end": 1878,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 7458,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7539,
											"end": 7549,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7518,
											"end": 7536,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7567,
											"end": 7587,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7567,
											"end": 7587,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7567,
											"end": 7587,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7567,
											"end": 7575,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 7567,
											"end": 7587,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7567,
											"end": 7587,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7567,
											"end": 7587,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7567,
											"end": 7587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7567,
											"end": 7587,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7567,
											"end": 7587,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7567,
											"end": 7587,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 7567,
											"end": 7587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 7559,
											"end": 7614,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7559,
											"end": 7614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7559,
											"end": 7614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8097,
											"end": 8099,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7559,
											"end": 7614,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7559,
											"end": 7614,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8079,
											"end": 8100,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8136,
											"end": 8138,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8116,
											"end": 8134,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8109,
											"end": 8139,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55736572206973206E6F74206F6E204C6576656C203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8173,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8200,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8217,
											"end": 8235,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8217,
											"end": 8235,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7559,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7895,
											"end": 8241,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7559,
											"end": 7614,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 7559,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7643,
											"end": 7668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7643,
											"end": 7668,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7625,
											"end": 7640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7643,
											"end": 7668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7643,
											"end": 7668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7643,
											"end": 7668,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7643,
											"end": 7656,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 7643,
											"end": 7668,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7643,
											"end": 7668,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7643,
											"end": 7668,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7643,
											"end": 7668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7643,
											"end": 7668,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7643,
											"end": 7676,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 7686,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7772,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 7784,
											"end": 7794,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7796,
											"end": 7797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7775,
											"end": 7783,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 7775,
											"end": 7798,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7775,
											"end": 7798,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 7775,
											"end": 7798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7798,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7758,
											"end": 7798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7808,
											"end": 7824,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7827,
											"end": 7862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 7839,
											"end": 7849,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7851,
											"end": 7852,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7854,
											"end": 7861,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 7827,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 7827,
											"end": 7862,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7827,
											"end": 7862,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 7827,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7808,
											"end": 7862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7808,
											"end": 7862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7883,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7876,
											"end": 7894,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7873,
											"end": 8075,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7873,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 7873,
											"end": 8075,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7929,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7941,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7909,
											"end": 7941,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7969,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7981,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7989,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7989,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7961,
											"end": 7989,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7989,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7989,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7873,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7873,
											"end": 8075,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7873,
											"end": 8075,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 7873,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8033,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8064,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8057,
											"end": 8064,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8057,
											"end": 8064,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 8020,
											"end": 8064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8057,
											"end": 8064,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8057,
											"end": 8064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8020,
											"end": 8064,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8020,
											"end": 8064,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 8020,
											"end": 8064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8064,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8020,
											"end": 8064,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7873,
											"end": 8075,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 7873,
											"end": 8075,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8088,
											"end": 8097,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8361,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 8085,
											"end": 8361,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8125,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8112,
											"end": 8125,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8125,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8125,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8125,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8134,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 8112,
											"end": 8134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 8112,
											"end": 8155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8169,
											"end": 8182,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8169,
											"end": 8182,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8196,
											"end": 8209,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 8196,
											"end": 8209,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8169,
											"end": 8182,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8182,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8182,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8195,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 8169,
											"end": 8195,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8196,
											"end": 8209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8196,
											"end": 8209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8196,
											"end": 8209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8211,
											"end": 8221,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8211,
											"end": 8221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8223,
											"end": 8231,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8223,
											"end": 8231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8169,
											"end": 8232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 8085,
											"end": 8361,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8361,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 8085,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8296,
											"end": 8309,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8296,
											"end": 8309,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8274,
											"end": 8275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8274,
											"end": 8275,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8309,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8318,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 8296,
											"end": 8318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8296,
											"end": 8339,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8361,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 8085,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8380,
											"end": 8433,
											"name": "PUSH",
											"source": 4,
											"value": "A3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B"
										},
										{
											"begin": 8389,
											"end": 8399,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8404,
											"end": 8413,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8415,
											"end": 8422,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8424,
											"end": 8432,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8380,
											"end": 8433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8380,
											"end": 8433,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8380,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 8380,
											"end": 8433,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 8380,
											"end": 8433,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 8380,
											"end": 8433,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8380,
											"end": 8433,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8380,
											"end": 8433,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8380,
											"end": 8433,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8380,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 8380,
											"end": 8433,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 8598,
											"end": 9578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8679,
											"end": 8689,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8658,
											"end": 8676,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8715,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 8707,
											"end": 8727,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8699,
											"end": 8754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 8699,
											"end": 8754,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8699,
											"end": 8754,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8699,
											"end": 8754,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8699,
											"end": 8754,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8699,
											"end": 8754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8969,
											"end": 8971,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8699,
											"end": 8754,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8699,
											"end": 8754,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8699,
											"end": 8754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8951,
											"end": 8972,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9008,
											"end": 9010,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 8988,
											"end": 9006,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8988,
											"end": 9006,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8988,
											"end": 9006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8981,
											"end": 9011,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55736572206973206E6F74206F6E204C6576656C2031"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9027,
											"end": 9045,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 9027,
											"end": 9045,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9027,
											"end": 9045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9020,
											"end": 9072,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8699,
											"end": 8754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 8767,
											"end": 9113,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8699,
											"end": 8754,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 8699,
											"end": 8754,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8783,
											"end": 8808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8783,
											"end": 8808,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8765,
											"end": 8780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8783,
											"end": 8808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8783,
											"end": 8808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8783,
											"end": 8808,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8783,
											"end": 8796,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 8783,
											"end": 8808,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8783,
											"end": 8808,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8783,
											"end": 8808,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8783,
											"end": 8808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8783,
											"end": 8808,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8783,
											"end": 8816,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8834,
											"end": 8852,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8834,
											"end": 8852,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8834,
											"end": 8852,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8834,
											"end": 8852,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 8826,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 8912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8915,
											"end": 8938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 8924,
											"end": 8934,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8936,
											"end": 8937,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8915,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 8915,
											"end": 8938,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8915,
											"end": 8938,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 8915,
											"end": 8938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 8938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8898,
											"end": 8938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8948,
											"end": 8964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8967,
											"end": 9002,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 8979,
											"end": 8989,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8991,
											"end": 8992,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9001,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8967,
											"end": 8978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 8967,
											"end": 9002,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8967,
											"end": 9002,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 8967,
											"end": 9002,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8948,
											"end": 9002,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8948,
											"end": 9002,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9027,
											"end": 9034,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9023,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9016,
											"end": 9034,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9013,
											"end": 9215,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9013,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 9013,
											"end": 9215,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9069,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9056,
											"end": 9081,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9049,
											"end": 9081,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9109,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9121,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9129,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9129,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9101,
											"end": 9129,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9129,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9101,
											"end": 9129,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9013,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9013,
											"end": 9215,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9013,
											"end": 9215,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 9013,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9173,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9204,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9204,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9197,
											"end": 9204,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9197,
											"end": 9204,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 9160,
											"end": 9204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9197,
											"end": 9204,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9197,
											"end": 9204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 9160,
											"end": 9204,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9160,
											"end": 9204,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 9160,
											"end": 9204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9204,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9013,
											"end": 9215,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 9013,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9228,
											"end": 9237,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9503,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 9225,
											"end": 9503,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9265,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9252,
											"end": 9265,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9252,
											"end": 9265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9265,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9274,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 9252,
											"end": 9274,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 9252,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9309,
											"end": 9322,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9309,
											"end": 9322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9349,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 9336,
											"end": 9349,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9309,
											"end": 9322,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9322,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9322,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9335,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 9309,
											"end": 9335,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9349,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9349,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9349,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9351,
											"end": 9361,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9351,
											"end": 9361,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9363,
											"end": 9371,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9363,
											"end": 9371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9309,
											"end": 9372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 9225,
											"end": 9503,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9503,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 9225,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9438,
											"end": 9451,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9438,
											"end": 9451,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7319,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7329,
											"end": 7363,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9414,
											"end": 9415,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9414,
											"end": 9415,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9451,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9451,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9460,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 9438,
											"end": 9460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7242,
											"end": 7260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "tag",
											"source": 4,
											"value": "305"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9438,
											"end": 9481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9225,
											"end": 9503,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 9225,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9571,
											"name": "PUSH",
											"source": 4,
											"value": "A3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B"
										},
										{
											"begin": 9527,
											"end": 9537,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9539,
											"end": 9540,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9542,
											"end": 9551,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9560,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9562,
											"end": 9570,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9571,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9518,
											"end": 9571,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 9518,
											"end": 9571,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9571,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9571,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9571,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9571,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 9518,
											"end": 9571,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 4766,
											"end": 5465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4863,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 4852,
											"end": 4863,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4848,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4863,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4889,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 4841,
											"end": 4889,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4889,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4878,
											"end": 4889,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4874,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4889,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4867,
											"end": 4889,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4889,
											"name": "tag",
											"source": 4,
											"value": "314"
										},
										{
											"begin": 4841,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "tag",
											"source": 4,
											"value": "315"
										},
										{
											"begin": 4833,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4975,
											"end": 4985,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4954,
											"end": 4972,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5017,
											"end": 5034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5022,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 5017,
											"end": 5034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5017,
											"end": 5034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5034,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5017,
											"end": 5034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5034,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5034,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5034,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5017,
											"end": 5034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5008,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 5008,
											"end": 5070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5008,
											"end": 5070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5070,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5008,
											"end": 5070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5008,
											"end": 5070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9841,
											"end": 9843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5008,
											"end": 5070,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5008,
											"end": 5070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5008,
											"end": 5070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9823,
											"end": 9844,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9880,
											"end": 9882,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9853,
											"end": 9883,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9919,
											"end": 9952,
											"name": "PUSH",
											"source": 5,
											"value": "596F7527726520616C726561647920696E2074686520566970205374616B6500"
										},
										{
											"begin": 9899,
											"end": 9917,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 9899,
											"end": 9917,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9899,
											"end": 9917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9892,
											"end": 9953,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9970,
											"end": 9988,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 9639,
											"end": 9994,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5070,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 5008,
											"end": 5070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5102,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5089,
											"end": 5102,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5089,
											"end": 5102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5102,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5102,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5115,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 5089,
											"end": 5115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5116,
											"end": 5126,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5116,
											"end": 5126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5136,
											"end": 5140,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5136,
											"end": 5140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5150,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5143,
											"end": 5150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 5089,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5167,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5179,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5186,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5186,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5162,
											"end": 5186,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5186,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5162,
											"end": 5186,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5186,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5186,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5283,
											"end": 5298,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5323,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 5323,
											"end": 5348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5341,
											"end": 5348,
											"name": "PUSH",
											"source": 4,
											"value": "76A700"
										},
										{
											"begin": 5323,
											"end": 5348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5323,
											"end": 5348,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5323,
											"end": 5348,
											"name": "tag",
											"source": 4,
											"value": "324"
										},
										{
											"begin": 5323,
											"end": 5348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5221,
											"end": 5359,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5206,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5196,
											"end": 5359,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5382,
											"end": 5458,
											"name": "PUSH",
											"source": 4,
											"value": "17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23"
										},
										{
											"begin": 5382,
											"end": 5458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5217,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5207,
											"end": 5217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5406,
											"end": 5413,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5415,
											"end": 5430,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 5432,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 5415,
											"end": 5430,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5450,
											"end": 5457,
											"name": "PUSH",
											"source": 4,
											"value": "76A700"
										},
										{
											"begin": 5432,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5432,
											"end": 5457,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2098,
											"end": 2111,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2128,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2019,
											"end": 2138,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2325,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2357,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2348,
											"end": 2370,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2380,
											"end": 2391,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2205,
											"end": 2413,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10712,
											"end": 10714,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10694,
											"end": 10715,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10751,
											"end": 10753,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10731,
											"end": 10749,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10724,
											"end": 10754,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10790,
											"end": 10824,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 10770,
											"end": 10788,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10770,
											"end": 10788,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10770,
											"end": 10788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10763,
											"end": 10825,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10841,
											"end": 10859,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10859,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10841,
											"end": 10859,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10834,
											"end": 10870,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10887,
											"end": 10906,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 10887,
											"end": 10906,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 10510,
											"end": 10912,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2679,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2724,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2743,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2734,
											"end": 2756,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2756,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2756,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2734,
											"end": 2756,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 2775,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2766,
											"end": 2788,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2798,
											"end": 2809,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 2798,
											"end": 2824,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2834,
											"end": 2845,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 2834,
											"end": 2860,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2495,
											"end": 2867,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5681,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5735,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5725,
											"end": 5735,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5735,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5722,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 5722,
											"end": 6056,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 5777,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 5783,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 5794,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5764,
											"end": 5794,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 5794,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5722,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 5722,
											"end": 6056,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5722,
											"end": 6056,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 5722,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5826,
											"end": 5831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5826,
											"end": 5836,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5826,
											"end": 5836,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5835,
											"end": 5836,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5826,
											"end": 5836,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5822,
											"end": 6056,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5822,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 5822,
											"end": 6056,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5865,
											"end": 5884,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5884,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5865,
											"end": 5884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5884,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5878,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 5865,
											"end": 5884,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5865,
											"end": 5884,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5884,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5865,
											"end": 5884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5884,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5865,
											"end": 5895,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5822,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 5822,
											"end": 6056,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5822,
											"end": 6056,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 5822,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5930,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5935,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5925,
											"end": 5935,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5935,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5925,
											"end": 5935,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 6056,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 5921,
											"end": 6056,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5964,
											"end": 5980,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5980,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5980,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5964,
											"end": 5980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5980,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5974,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 5964,
											"end": 5980,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5964,
											"end": 5980,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5980,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5964,
											"end": 5980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5980,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5991,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5964,
											"end": 5991,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5991,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 5921,
											"end": 6056,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 6056,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 5921,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6040,
											"end": 6045,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6033,
											"end": 6045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6033,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 6033,
											"end": 6045,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 6056,
											"name": "tag",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 5921,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6102,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6102,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6102,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 6109,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3016,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 3101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 3114,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 3114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 3138,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 3138,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 3094,
											"end": 3138,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 3138,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3129,
											"end": 3138,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3129,
											"end": 3138,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3118,
											"end": 3125,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3118,
											"end": 3138,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3118,
											"end": 3138,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3094,
											"end": 3138,
											"name": "tag",
											"source": 4,
											"value": "368"
										},
										{
											"begin": 3094,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "tag",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 3086,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3224,
											"end": 3234,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3203,
											"end": 3221,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3266,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3258,
											"end": 3278,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3257,
											"end": 3278,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "tag",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 3249,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3345,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3332,
											"end": 3345,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3332,
											"end": 3345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3345,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3345,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3369,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3383,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3379,
											"end": 3383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3393,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3386,
											"end": 3393,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "tag",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "tag",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 3332,
											"end": 3394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3413,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3425,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3432,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3432,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3432,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3428,
											"end": 3432,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3405,
											"end": 3432,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3432,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3405,
											"end": 3432,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3534,
											"end": 3549,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3593,
											"end": 3599,
											"name": "PUSH",
											"source": 4,
											"value": "93A80"
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 3575,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3470,
											"end": 3610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3455,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3467,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3442,
											"end": 3610,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3635,
											"end": 3710,
											"name": "PUSH",
											"source": 4,
											"value": "17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23"
										},
										{
											"begin": 3635,
											"end": 3710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3456,
											"end": 3466,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3456,
											"end": 3466,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3659,
											"end": 3666,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3683,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3668,
											"end": 3683,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "PUSH",
											"source": 4,
											"value": "93A80"
										},
										{
											"begin": 3685,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3685,
											"end": 3709,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11630,
											"end": 11632,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 11633,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11669,
											"end": 11671,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11649,
											"end": 11667,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11642,
											"end": 11672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11688,
											"end": 11706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11681,
											"end": 11731,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11748,
											"end": 11766,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 11748,
											"end": 11766,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 11428,
											"end": 11772,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 559,
											"end": 591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 559,
											"end": 591,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 559,
											"end": 591,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 541,
											"end": 592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 541,
											"end": 592,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 529,
											"end": 531,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6936,
											"end": 7300,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 6936,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7041,
											"end": 7048,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7041,
											"end": 7048,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7080,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 7098,
											"end": 7110,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7080,
											"end": 7110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 7080,
											"end": 7110,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7080,
											"end": 7110,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 7080,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7110,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7128,
											"end": 7153,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7186,
											"end": 7194,
											"name": "PUSH",
											"source": 4,
											"value": "1E13380"
										},
										{
											"begin": 7177,
											"end": 7182,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 7169,
											"end": 7173,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7158,
											"end": 7166,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "tag",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 7158,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7157,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 7157,
											"end": 7182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7157,
											"end": 7182,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7157,
											"end": 7182,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 7157,
											"end": 7182,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7157,
											"end": 7182,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 7157,
											"end": 7182,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7156,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 7156,
											"end": 7194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7156,
											"end": 7194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7156,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 7156,
											"end": 7194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7156,
											"end": 7194,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 7156,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7128,
											"end": 7194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7204,
											"end": 7227,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7230,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 7128,
											"end": 7194,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7240,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7230,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 7230,
											"end": 7260,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7230,
											"end": 7260,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 7230,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7204,
											"end": 7260,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 6936,
											"end": 7300,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6936,
											"end": 7300,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 196,
											"end": 376,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 255,
											"end": 261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 310,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 296,
											"end": 305,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 287,
											"end": 294,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 283,
											"end": 306,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 279,
											"end": 311,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 276,
											"end": 328,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 276,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 324,
											"end": 325,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 322,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 314,
											"end": 326,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 276,
											"end": 328,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 276,
											"end": 328,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 347,
											"end": 370,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 347,
											"end": 370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 196,
											"end": 376,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 196,
											"end": 376,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 795,
											"end": 968,
											"name": "tag",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 795,
											"end": 968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 863,
											"end": 883,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 863,
											"end": 883,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 912,
											"end": 943,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 912,
											"end": 943,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 902,
											"end": 944,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 902,
											"end": 944,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 892,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 892,
											"end": 962,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 955,
											"end": 956,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 948,
											"end": 960,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 892,
											"end": 962,
											"name": "tag",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 892,
											"end": 962,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 795,
											"end": 968,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 795,
											"end": 968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 795,
											"end": 968,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 795,
											"end": 968,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 973,
											"end": 1159,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 973,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1032,
											"end": 1038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1082,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1071,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1060,
											"end": 1083,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1088,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1099,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1103,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "tag",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 1053,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 1143,
											"end": 1152,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1124,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 1124,
											"end": 1153,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1488,
											"end": 1644,
											"name": "tag",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 1488,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1574,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1603,
											"end": 1619,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1620,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1593,
											"end": 1620,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1583,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "416"
										},
										{
											"begin": 1583,
											"end": 1638,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1634,
											"end": 1635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1632,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 1636,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1649,
											"end": 1973,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1649,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1724,
											"end": 1730,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1740,
											"end": 1746,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1793,
											"end": 1795,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1781,
											"end": 1790,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1772,
											"end": 1779,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1768,
											"end": 1791,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1764,
											"end": 1796,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1813,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 1761,
											"end": 1813,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1809,
											"end": 1810,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1806,
											"end": 1807,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1811,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1813,
											"name": "tag",
											"source": 5,
											"value": "424"
										},
										{
											"begin": 1761,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 1851,
											"end": 1860,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1832,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 1832,
											"end": 1861,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1832,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 1832,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 1861,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1822,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1910,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1880,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 1880,
											"end": 1916,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1880,
											"end": 1916,
											"name": "tag",
											"source": 5,
											"value": "426"
										},
										{
											"begin": 1880,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1916,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1870,
											"end": 1916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1952,
											"end": 1961,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1935,
											"end": 1967,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1967,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1925,
											"end": 1967,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1649,
											"end": 1973,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1649,
											"end": 1973,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1649,
											"end": 1973,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1649,
											"end": 1973,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1649,
											"end": 1973,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1649,
											"end": 1973,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2186,
											"end": 2502,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2186,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2334,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2320,
											"end": 2329,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2311,
											"end": 2318,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2330,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2335,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2346,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2338,
											"end": 2350,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 2300,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2371,
											"end": 2394,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2394,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2371,
											"end": 2394,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2443,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2426,
											"end": 2444,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2426,
											"end": 2444,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2445,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2445,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2494,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2495,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2477,
											"end": 2495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2464,
											"end": 2496,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2464,
											"end": 2496,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2186,
											"end": 2502,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2507,
											"end": 3030,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2507,
											"end": 3030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2611,
											"end": 2617,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2627,
											"end": 2633,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2635,
											"end": 2641,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2643,
											"end": 2649,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2657,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2707,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 2692,
											"end": 2701,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2683,
											"end": 2690,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2679,
											"end": 2702,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2675,
											"end": 2708,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2725,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 2672,
											"end": 2725,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2721,
											"end": 2722,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2719,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2711,
											"end": 2723,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2672,
											"end": 2725,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 2672,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2744,
											"end": 2767,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2767,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2744,
											"end": 2767,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 2814,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2799,
											"end": 2817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2818,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2818,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2865,
											"end": 2867,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2868,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2868,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 2869,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2837,
											"end": 2869,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 2916,
											"end": 2918,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2920,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2888,
											"end": 2920,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2967,
											"end": 2970,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2952,
											"end": 2971,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2952,
											"end": 2971,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2939,
											"end": 2972,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2939,
											"end": 2972,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3019,
											"end": 3022,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3004,
											"end": 3023,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3024,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2991,
											"end": 3024,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2507,
											"end": 3030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2507,
											"end": 3030,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3035,
											"end": 3291,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 3035,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3101,
											"end": 3107,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3159,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3141,
											"end": 3148,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3137,
											"end": 3160,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3165,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3182,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 3130,
											"end": 3182,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3178,
											"end": 3179,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3176,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3180,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3130,
											"end": 3182,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 3130,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 3220,
											"end": 3229,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 3201,
											"end": 3230,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3201,
											"end": 3230,
											"name": "tag",
											"source": 5,
											"value": "434"
										},
										{
											"begin": 3201,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3191,
											"end": 3230,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 3281,
											"end": 3283,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3270,
											"end": 3279,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3266,
											"end": 3284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3249,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "407"
										},
										{
											"begin": 3249,
											"end": 3285,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3249,
											"end": 3285,
											"name": "tag",
											"source": 5,
											"value": "435"
										},
										{
											"begin": 3249,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3285,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3239,
											"end": 3285,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3291,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3035,
											"end": 3291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3296,
											"end": 3636,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 3296,
											"end": 3636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3500,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3480,
											"end": 3501,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3501,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3537,
											"end": 3539,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3517,
											"end": 3535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3517,
											"end": 3535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3517,
											"end": 3535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3540,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3571,
											"end": 3573,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3556,
											"end": 3574,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3556,
											"end": 3574,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3549,
											"end": 3595,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3629,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3296,
											"end": 3636,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3641,
											"end": 4055,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3641,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3825,
											"end": 3846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3825,
											"end": 3846,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3825,
											"end": 3846,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3882,
											"end": 3884,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3862,
											"end": 3880,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3921,
											"end": 3955,
											"name": "PUSH",
											"source": 5,
											"value": "416D6F756E74206E6565647320746F206265206D6F7265207468616E206D696E"
										},
										{
											"begin": 3916,
											"end": 3918,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3894,
											"end": 3956,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C2DCC840D8CAE6E640E8D0C2DC40DAC2F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3987,
											"end": 3989,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3965,
											"end": 4013,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4045,
											"end": 4048,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4030,
											"end": 4049,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4049,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3641,
											"end": 4055,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4060,
											"end": 4458,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 4060,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4262,
											"end": 4264,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4244,
											"end": 4265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4265,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4244,
											"end": 4265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4301,
											"end": 4303,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4281,
											"end": 4299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4281,
											"end": 4299,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4281,
											"end": 4299,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4274,
											"end": 4304,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4340,
											"end": 4374,
											"name": "PUSH",
											"source": 5,
											"value": "596F7527726520616C726561647920696E2074686973205374616B65206C6576"
										},
										{
											"begin": 4335,
											"end": 4337,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4320,
											"end": 4338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4320,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4313,
											"end": 4375,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4406,
											"end": 4408,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4391,
											"end": 4409,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4391,
											"end": 4409,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4384,
											"end": 4416,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4448,
											"end": 4451,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4433,
											"end": 4452,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4060,
											"end": 4458,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4463,
											"end": 4838,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 4463,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4721,
											"end": 4736,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4736,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4721,
											"end": 4736,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 4737,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4703,
											"end": 4737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4788,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4788,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4788,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4788,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4768,
											"end": 4770,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4746,
											"end": 4789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4820,
											"end": 4822,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4805,
											"end": 4823,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4832,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4832,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4832,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4463,
											"end": 4838,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4843,
											"end": 5120,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 4843,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4910,
											"end": 4916,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4942,
											"end": 4949,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4938,
											"end": 4961,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 4966,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4983,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 4931,
											"end": 4983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4979,
											"end": 4980,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4976,
											"end": 4977,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4969,
											"end": 4981,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4931,
											"end": 4983,
											"name": "tag",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 4931,
											"end": 4983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5011,
											"end": 5020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5005,
											"end": 5021,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5064,
											"end": 5069,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5057,
											"end": 5070,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5050,
											"end": 5071,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5043,
											"end": 5048,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5040,
											"end": 5072,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5030,
											"end": 5090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 5030,
											"end": 5090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5086,
											"end": 5087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5083,
											"end": 5084,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5076,
											"end": 5088,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5125,
											"end": 5252,
											"name": "tag",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 5125,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5186,
											"end": 5196,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5181,
											"end": 5184,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5177,
											"end": 5197,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5174,
											"end": 5175,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5198,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5217,
											"end": 5221,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5214,
											"end": 5215,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5207,
											"end": 5222,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5241,
											"end": 5245,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5238,
											"end": 5239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5231,
											"end": 5246,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5385,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 5257,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5300,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5328,
											"end": 5329,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5324,
											"end": 5330,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5321,
											"end": 5322,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5318,
											"end": 5331,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5315,
											"end": 5354,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5315,
											"end": 5354,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 5315,
											"end": 5354,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5334,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 5334,
											"end": 5352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 5334,
											"end": 5352,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5334,
											"end": 5352,
											"name": "tag",
											"source": 5,
											"value": "446"
										},
										{
											"begin": 5334,
											"end": 5352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5370,
											"end": 5379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5370,
											"end": 5379,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5257,
											"end": 5385,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5901,
											"end": 6257,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 5901,
											"end": 6257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6103,
											"end": 6105,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6085,
											"end": 6106,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6085,
											"end": 6106,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6085,
											"end": 6106,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6122,
											"end": 6140,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6181,
											"end": 6215,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6176,
											"end": 6178,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6161,
											"end": 6179,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6161,
											"end": 6179,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6154,
											"end": 6216,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6248,
											"end": 6250,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6233,
											"end": 6251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6251,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5901,
											"end": 6257,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6606,
											"end": 6960,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6606,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6808,
											"end": 6810,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6790,
											"end": 6811,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6790,
											"end": 6811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6790,
											"end": 6811,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6847,
											"end": 6849,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6820,
											"end": 6850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6886,
											"end": 6918,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420656E6F7567682062616C616E636520746F2077697468647261770000"
										},
										{
											"begin": 6881,
											"end": 6883,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6866,
											"end": 6884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6859,
											"end": 6919,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6951,
											"end": 6953,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6936,
											"end": 6954,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6936,
											"end": 6954,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6960,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6965,
											"end": 7090,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6965,
											"end": 7090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7005,
											"end": 7009,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7033,
											"end": 7034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7030,
											"end": 7031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7035,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7024,
											"end": 7058,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7024,
											"end": 7058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 7024,
											"end": 7058,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "tag",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 7038,
											"end": 7056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7075,
											"end": 7084,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7075,
											"end": 7084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6965,
											"end": 7090,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7374,
											"end": 7890,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 7374,
											"end": 7890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7651,
											"end": 7683,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 7651,
											"end": 7683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7651,
											"end": 7683,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 7651,
											"end": 7683,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7684,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7633,
											"end": 7684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7732,
											"end": 7736,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 7720,
											"end": 7737,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7720,
											"end": 7737,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7720,
											"end": 7737,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7720,
											"end": 7737,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7717,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7700,
											"end": 7718,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7700,
											"end": 7718,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7693,
											"end": 7738,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7795,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7795,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7774,
											"end": 7796,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7769,
											"end": 7771,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7754,
											"end": 7772,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7754,
											"end": 7772,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7747,
											"end": 7797,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7828,
											"end": 7830,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7831,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7806,
											"end": 7840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7871,
											"end": 7874,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 7856,
											"end": 7875,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7856,
											"end": 7875,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7849,
											"end": 7884,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7620,
											"end": 7623,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 7605,
											"end": 7624,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7605,
											"end": 7624,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7890,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11777,
											"end": 11945,
											"name": "tag",
											"source": 5,
											"value": "393"
										},
										{
											"begin": 11777,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11817,
											"end": 11824,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11883,
											"end": 11884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11879,
											"end": 11880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11875,
											"end": 11881,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 11871,
											"end": 11885,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 11868,
											"end": 11869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11865,
											"end": 11886,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 11860,
											"end": 11861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11853,
											"end": 11862,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11846,
											"end": 11863,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11842,
											"end": 11887,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11839,
											"end": 11910,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 11839,
											"end": 11910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "467"
										},
										{
											"begin": 11839,
											"end": 11910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "467"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "408"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "tag",
											"source": 5,
											"value": "467"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11930,
											"end": 11939,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 11930,
											"end": 11939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11777,
											"end": 11945,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11950,
											"end": 12167,
											"name": "tag",
											"source": 5,
											"value": "395"
										},
										{
											"begin": 11950,
											"end": 12167,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11990,
											"end": 11991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12016,
											"end": 12017,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12006,
											"end": 12138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "469"
										},
										{
											"begin": 12006,
											"end": 12138,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12060,
											"end": 12070,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 12055,
											"end": 12058,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 12051,
											"end": 12071,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 12048,
											"end": 12049,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12041,
											"end": 12072,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12095,
											"end": 12099,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 12092,
											"end": 12093,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12085,
											"end": 12100,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12123,
											"end": 12127,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12120,
											"end": 12121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12113,
											"end": 12128,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12006,
											"end": 12138,
											"name": "tag",
											"source": 5,
											"value": "469"
										},
										{
											"begin": 12006,
											"end": 12138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12152,
											"end": 12161,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 12152,
											"end": 12161,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11950,
											"end": 12167,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptedToken()": "451c3d80",
							"enterLevel0(uint256)": "fe2981b5",
							"enterLevel1(uint256)": "1ed81ff8",
							"enterVip(uint256)": "bf01651a",
							"getInterest(address,uint8,uint256)": "69e06848",
							"isLevel0(address)": "6296e750",
							"isLevel1(address)": "635ef285",
							"isOnTime(address,uint8)": "f7edf9ab",
							"isVip(address)": "84203f4b",
							"level0APY()": "8275b181",
							"level0Balance(address)": "67911ba4",
							"level0Max()": "71a1609b",
							"level0Min()": "6505cf31",
							"level1APY()": "1ff08fee",
							"level1Balance(address)": "7fe509d7",
							"level1Max()": "d3900a52",
							"level1Min()": "01ef4739",
							"levelVipMax()": "8f0fb2b7",
							"levelVipMin()": "91789cef",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"reserveWallet()": "d72b11bd",
							"setNewAPY(uint256,uint256,uint256)": "e5d15701",
							"setNewMaxMin(uint256,uint256,uint256,uint256,uint256,uint256)": "f4217e1e",
							"setReserveWallet(address)": "dda4fa8f",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"vipBalance(address)": "97e9c5fe",
							"vipLevelAPY()": "32938e3a",
							"withdrawLevel0(uint256)": "927e5998",
							"withdrawLevel1(uint256)": "bb664864",
							"withdrawVip(uint256)": "6636389e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_reserveWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"class\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeEnd\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"class\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"onTime\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"earnings\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterLevel0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterLevel1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterVip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"class\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"getInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLevel0\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLevel1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"class\",\"type\":\"uint8\"}],\"name\":\"isOnTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level0APY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"level0Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStarted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeFinish\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level0Max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level0Min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level1APY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"level1Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStarted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeFinish\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level1Max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level1Min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levelVipMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levelVipMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level0APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level1APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vipLevelAPY\",\"type\":\"uint256\"}],\"name\":\"setNewAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level0Max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level1Max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_levelVipMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_levelVipMax\",\"type\":\"uint256\"}],\"name\":\"setNewMaxMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserveWallet\",\"type\":\"address\"}],\"name\":\"setReserveWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vipBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStarted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeFinish\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vipLevelAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawLevel0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawLevel1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawVip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"enterLevel0(uint256)\":{\"details\":\"Join to a staking class. Requirements:   - User has not enter the staking class previously. \"},\"enterLevel1(uint256)\":{\"details\":\"Join to a staking class. Requirements:    - User has not enter the staking class previously.   \"},\"enterVip(uint256)\":{\"details\":\"Join to a staking class. Requirements: - _amount must be greather than enter fee. - User has not enter the staking class previously.    \"},\"getInterest(address,uint8,uint256)\":{\"details\":\"Get interest earned during the staking time. classes : 0 - level 0, 1 - level 1, 2 - Vip\"},\"isOnTime(address,uint8)\":{\"details\":\"Checks if the staking has reached the timeFinish limit. classes :0 - level 0, 1 - level 1, 2 - Vip\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setNewAPY(uint256,uint256,uint256)\":{\"details\":\"Change APY for all categories.   \"},\"setNewMaxMin(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Change max and min values for all categories.   \"},\"setReserveWallet(address)\":{\"details\":\"Change Reserve Wallet.   \"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawLevel0(uint256)\":{\"details\":\"Withdraw from a staking class. Requirements: - Msg.sender should have an active deposit in the class.\"},\"withdrawLevel1(uint256)\":{\"details\":\"Withdraw from a staking class. Requirements: - Msg.sender should have an active deposit in the class.\"},\"withdrawVip(uint256)\":{\"details\":\"Withdraw from a staking class. Requirements: - Msg.sender should have an active deposit in the class.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"SenseiStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"staking.sol\":{\"keccak256\":\"0xcdec686d87ba9fb57317e728bcace86135fc1c1abb6180f4b1e0406e481a7bcf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5f9ffc915732338261b9cb1550032a057a6de469710daf0721e11a36e68a934\",\"dweb:/ipfs/QmVdFY11JS4St8j6L8zUTf64UCgPjQiPoL57S1wBy1pdXR\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 297,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								296
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Pausable": [
							196
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 297,
							"src": "115:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "617:7:1"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "147:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196,
								296
							],
							"name": "Pausable",
							"nameLocation": "605:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "631:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 115,
									"name": "Paused",
									"nameLocation": "715:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "730:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:17:1"
									},
									"src": "709:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "745:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 120,
									"name": "Unpaused",
									"nameLocation": "826:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "835:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:17:1"
									},
									"src": "820:32:1"
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "871:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "858:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 121,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "858:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "971:32:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "981:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "981:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "981:15:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "885:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:1"
									},
									"scope": 196,
									"src": "957:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1151:31:1",
										"statements": [
											{
												"expression": {
													"id": 137,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "1168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "1161:14:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1009:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1107:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1145:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:1"
									},
									"scope": 196,
									"src": "1098:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1393:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1411:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 144,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1412:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1412:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1403:38:1"
											},
											{
												"id": 150,
												"nodeType": "PlaceholderStatement",
												"src": "1451:1:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1188:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 152,
									"name": "whenNotPaused",
									"nameLocation": "1377:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:1"
									},
									"src": "1368:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1659:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 156,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1677:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "1465:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 163,
									"name": "whenPaused",
									"nameLocation": "1646:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:1"
									},
									"src": "1637:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1912:66:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1922:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1922:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1922:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 174,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "1958:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1951:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1946:25:1"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1734:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 166,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1898:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1898:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "1872:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:1"
									},
									"scope": 196,
									"src": "1863:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2158:69:1",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2168:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2168:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2207:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2207:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2198:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "EmitStatement",
												"src": "2193:27:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1984:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 163,
												"src": "2147:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2119:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:1"
									},
									"scope": 196,
									"src": "2110:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 197,
							"src": "587:1642:1",
							"usedErrors": []
						}
					],
					"src": "90:2140:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							274
						]
					},
					"id": 275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 199,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "342:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:2"
									},
									"scope": 274,
									"src": "296:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:2"
									},
									"scope": 274,
									"src": "434:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "733:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "745:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "779:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:2"
									},
									"scope": 274,
									"src": "715:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1079:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1094:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1134:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:2"
									},
									"scope": 274,
									"src": "1060:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1813:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1830:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1864:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:2"
									},
									"scope": 274,
									"src": "1796:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2199:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2241:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2280:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:2"
									},
									"scope": 274,
									"src": "2168:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 264,
									"name": "Transfer",
									"nameLocation": "2461:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2470:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2492:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:2"
									},
									"src": "2455:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 273,
									"name": "Approval",
									"nameLocation": "2692:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2701:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2724:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2749:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:2"
									},
									"src": "2686:78:2"
								}
							],
							"scope": 275,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 277,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 281,
												"id": 284,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 296,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 291,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 290,
												"id": 293,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 296,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"staking.sol": {
				"ast": {
					"absolutePath": "staking.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"IERC20": [
							274
						],
						"Ownable": [
							104
						],
						"Pausable": [
							196
						],
						"SenseiStaking": [
							1262
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 275,
							"src": "57:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 105,
							"src": "114:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1263,
							"sourceUnit": 197,
							"src": "167:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 302,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "251:7:4"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "251:7:4"
								},
								{
									"baseName": {
										"id": 304,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "260:8:4"
									},
									"id": 305,
									"nodeType": "InheritanceSpecifier",
									"src": "260:8:4"
								}
							],
							"canonicalName": "SenseiStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1262,
							"linearizedBaseContracts": [
								1262,
								196,
								104,
								296
							],
							"name": "SenseiStaking",
							"nameLocation": "234:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "451c3d80",
									"id": 308,
									"mutability": "mutable",
									"name": "acceptedToken",
									"nameLocation": "334:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "320:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$274",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 307,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 306,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 274,
											"src": "320:6:4"
										},
										"referencedDeclaration": 274,
										"src": "320:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$274",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "SenseiStaking._user",
									"id": 315,
									"members": [
										{
											"constant": false,
											"id": 310,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "421:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 315,
											"src": "413:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 309,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "413:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 312,
											"mutability": "mutable",
											"name": "timeStarted",
											"nameLocation": "446:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 315,
											"src": "438:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 311,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "438:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 314,
											"mutability": "mutable",
											"name": "timeFinish",
											"nameLocation": "475:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 315,
											"src": "467:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 313,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "467:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "_user",
									"nameLocation": "397:5:4",
									"nodeType": "StructDefinition",
									"scope": 1262,
									"src": "390:102:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8275b181",
									"id": 318,
									"mutability": "mutable",
									"name": "level0APY",
									"nameLocation": "544:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "529:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 316,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "529:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32373030",
										"id": 317,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "557:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2700_by_1",
											"typeString": "int_const 2700"
										},
										"value": "2700"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1ff08fee",
									"id": 321,
									"mutability": "mutable",
									"name": "level1APY",
									"nameLocation": "582:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "567:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 319,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "567:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33373030",
										"id": 320,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "594:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3700_by_1",
											"typeString": "int_const 3700"
										},
										"value": "3700"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "32938e3a",
									"id": 324,
									"mutability": "mutable",
									"name": "vipLevelAPY",
									"nameLocation": "619:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "604:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 322,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "604:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34383030",
										"id": 323,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "633:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4800_by_1",
											"typeString": "int_const 4800"
										},
										"value": "4800"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6505cf31",
									"id": 331,
									"mutability": "mutable",
									"name": "level0Min",
									"nameLocation": "693:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "678:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 325,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "678:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000"
										},
										"id": 330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530",
											"id": 326,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "705:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 329,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 327,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "710:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 328,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "714:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "710:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "705:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "71a1609b",
									"id": 338,
									"mutability": "mutable",
									"name": "level0Max",
									"nameLocation": "737:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "722:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 332,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "722:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000000"
										},
										"id": 337,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "353030303030303030",
											"id": 333,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "749:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000000_by_1",
												"typeString": "int_const 500000000"
											},
											"value": "500000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 336,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 334,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "761:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 335,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "765:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "761:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "749:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "01ef4739",
									"id": 345,
									"mutability": "mutable",
									"name": "level1Min",
									"nameLocation": "788:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "773:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 339,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "773:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										},
										"id": 344,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 340,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "800:3:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 343,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 341,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "806:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 342,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "810:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "806:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "800:12:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3900a52",
									"id": 352,
									"mutability": "mutable",
									"name": "level1Max",
									"nameLocation": "833:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "818:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 346,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "818:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000000"
										},
										"id": 351,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "353030303030303030",
											"id": 347,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "845:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000000_by_1",
												"typeString": "int_const 500000000"
											},
											"value": "500000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 350,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 348,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "857:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 349,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "861:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "857:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "845:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "91789cef",
									"id": 359,
									"mutability": "mutable",
									"name": "levelVipMin",
									"nameLocation": "884:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "869:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 353,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "869:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_200000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000"
										},
										"id": 358,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "323030",
											"id": 354,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "898:3:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200_by_1",
												"typeString": "int_const 200"
											},
											"value": "200"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 357,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 355,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "904:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 356,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "908:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "904:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "898:12:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f0fb2b7",
									"id": 366,
									"mutability": "mutable",
									"name": "levelVipMax",
									"nameLocation": "931:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "916:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 360,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "916:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_2500000000000000000000000000_by_1",
											"typeString": "int_const 2500000000000000000000000000"
										},
										"id": 365,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32353030303030303030",
											"id": 361,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "945:10:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2500000000_by_1",
												"typeString": "int_const 2500000000"
											},
											"value": "2500000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 364,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 362,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "958:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 363,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "962:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "958:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "945:19:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2500000000000000000000000000_by_1",
											"typeString": "int_const 2500000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d72b11bd",
									"id": 368,
									"mutability": "mutable",
									"name": "reserveWallet",
									"nameLocation": "1012:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "997:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 367,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "997:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6296e750",
									"id": 372,
									"mutability": "mutable",
									"name": "isLevel0",
									"nameLocation": "1117:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "1084:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 371,
										"keyType": {
											"id": 369,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1093:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1084:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 370,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1104:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67911ba4",
									"id": 377,
									"mutability": "mutable",
									"name": "level0Balance",
									"nameLocation": "1165:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "1131:47:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
										"typeString": "mapping(address => struct SenseiStaking._user)"
									},
									"typeName": {
										"id": 376,
										"keyType": {
											"id": 373,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1140:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1131:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
											"typeString": "mapping(address => struct SenseiStaking._user)"
										},
										"valueType": {
											"id": 375,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 374,
												"name": "_user",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 315,
												"src": "1151:5:4"
											},
											"referencedDeclaration": 315,
											"src": "1151:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$__user_$315_storage_ptr",
												"typeString": "struct SenseiStaking._user"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "635ef285",
									"id": 381,
									"mutability": "mutable",
									"name": "isLevel1",
									"nameLocation": "1217:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "1184:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 380,
										"keyType": {
											"id": 378,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1184:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 379,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1204:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7fe509d7",
									"id": 386,
									"mutability": "mutable",
									"name": "level1Balance",
									"nameLocation": "1265:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "1231:47:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
										"typeString": "mapping(address => struct SenseiStaking._user)"
									},
									"typeName": {
										"id": 385,
										"keyType": {
											"id": 382,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1240:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1231:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
											"typeString": "mapping(address => struct SenseiStaking._user)"
										},
										"valueType": {
											"id": 384,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 383,
												"name": "_user",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 315,
												"src": "1251:5:4"
											},
											"referencedDeclaration": 315,
											"src": "1251:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$__user_$315_storage_ptr",
												"typeString": "struct SenseiStaking._user"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "84203f4b",
									"id": 390,
									"mutability": "mutable",
									"name": "isVip",
									"nameLocation": "1317:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "1284:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 389,
										"keyType": {
											"id": 387,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1293:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1284:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 388,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1304:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "97e9c5fe",
									"id": 395,
									"mutability": "mutable",
									"name": "vipBalance",
									"nameLocation": "1362:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 1262,
									"src": "1328:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
										"typeString": "mapping(address => struct SenseiStaking._user)"
									},
									"typeName": {
										"id": 394,
										"keyType": {
											"id": 391,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1337:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1328:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
											"typeString": "mapping(address => struct SenseiStaking._user)"
										},
										"valueType": {
											"id": 393,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 392,
												"name": "_user",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 315,
												"src": "1348:5:4"
											},
											"referencedDeclaration": 315,
											"src": "1348:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$__user_$315_storage_ptr",
												"typeString": "struct SenseiStaking._user"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 407,
									"name": "deposit",
									"nameLocation": "1402:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1419:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1411:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1411:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "1431:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1425:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 398,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1425:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1446:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1438:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"indexed": false,
												"mutability": "mutable",
												"name": "timeStart",
												"nameLocation": "1462:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1454:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"indexed": false,
												"mutability": "mutable",
												"name": "timeEnd",
												"nameLocation": "1481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1473:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1410:79:4"
									},
									"src": "1396:94:4"
								},
								{
									"anonymous": false,
									"id": 419,
									"name": "withdraw",
									"nameLocation": "1501:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1519:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "1511:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "1531:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "1525:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 410,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1525:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"indexed": false,
												"mutability": "mutable",
												"name": "onTime",
												"nameLocation": "1543:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "1538:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1538:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1559:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "1551:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"indexed": false,
												"mutability": "mutable",
												"name": "earnings",
												"nameLocation": "1575:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "1567:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:74:4"
									},
									"src": "1495:90:4"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "1680:94:4",
										"statements": [
											{
												"expression": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 426,
														"name": "acceptedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "1690:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 428,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "1713:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 427,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "1706:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$274_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1706:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"src": "1690:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$274",
														"typeString": "contract IERC20"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "1690:30:4"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "reserveWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "1730:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "_reserveWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 423,
														"src": "1746:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1730:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "1730:30:4"
											}
										]
									},
									"id": 437,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1647:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1639:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1639:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "_reserveWallet",
												"nameLocation": "1664:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "1656:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1656:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1638:41:4"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1680:0:4"
									},
									"scope": 1262,
									"src": "1627:147:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1860:25:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 442,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "1870:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "1870:8:4"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 440,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 439,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1850:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1850:9:4"
										}
									],
									"name": "pause",
									"nameLocation": "1834:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1840:2:4"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:0:4"
									},
									"scope": 1262,
									"src": "1825:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "1932:27:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 451,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "1942:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1942:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "1942:10:4"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 449,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 448,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1922:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1922:9:4"
										}
									],
									"name": "unpause",
									"nameLocation": "1904:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:2:4"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:4"
									},
									"scope": 1262,
									"src": "1895:64:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "2088:50:4",
										"statements": [
											{
												"expression": {
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 463,
														"name": "reserveWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "2098:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 464,
														"name": "_reserveWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "2114:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2098:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "2098:30:4"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "1966:47:4",
										"text": " @dev Change Reserve Wallet.   "
									},
									"functionSelector": "dda4fa8f",
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 461,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 460,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2079:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2079:9:4"
										}
									],
									"name": "setReserveWallet",
									"nameLocation": "2028:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "_reserveWallet",
												"nameLocation": "2054:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2046:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:24:4"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2088:0:4"
									},
									"scope": 1262,
									"src": "2019:119:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 492,
										"nodeType": "Block",
										"src": "2306:107:4",
										"statements": [
											{
												"expression": {
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 480,
														"name": "level0APY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "2316:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 481,
														"name": "_level0APY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "2328:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2316:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 483,
												"nodeType": "ExpressionStatement",
												"src": "2316:22:4"
											},
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 484,
														"name": "level1APY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 321,
														"src": "2348:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 485,
														"name": "_level1APY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "2360:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2348:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2348:22:4"
											},
											{
												"expression": {
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 488,
														"name": "vipLevelAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "2380:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 489,
														"name": "_vipLevelAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "2394:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2380:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "2380:26:4"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "2144:55:4",
										"text": " @dev Change APY for all categories.   "
									},
									"functionSelector": "e5d15701",
									"id": 493,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 478,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 477,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2297:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2297:9:4"
										}
									],
									"name": "setNewAPY",
									"nameLocation": "2214:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "_level0APY",
												"nameLocation": "2234:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2226:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "_level1APY",
												"nameLocation": "2254:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2246:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2246:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "_vipLevelAPY",
												"nameLocation": "2274:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "2266:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:63:4"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2306:0:4"
									},
									"scope": 1262,
									"src": "2205:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2660:207:4",
										"statements": [
											{
												"expression": {
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 511,
														"name": "level0Min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "2670:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 512,
														"name": "_level0Min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2682:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2670:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "2670:22:4"
											},
											{
												"expression": {
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 515,
														"name": "level0Max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 338,
														"src": "2702:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 516,
														"name": "_level0Max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2714:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2702:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "2702:22:4"
											},
											{
												"expression": {
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 519,
														"name": "level1Min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "2734:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 520,
														"name": "_level1Min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2746:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2734:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "2734:22:4"
											},
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 523,
														"name": "level1Max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "2766:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 524,
														"name": "_level1Max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "2778:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2766:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:4"
											},
											{
												"expression": {
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 527,
														"name": "levelVipMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "2798:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 528,
														"name": "_levelVipMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "2812:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2798:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "2798:26:4"
											},
											{
												"expression": {
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 531,
														"name": "levelVipMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "2834:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 532,
														"name": "_levelVipMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "2848:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2834:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "2834:26:4"
											}
										]
									},
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "2419:70:4",
										"text": " @dev Change max and min values for all categories.   "
									},
									"functionSelector": "f4217e1e",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 509,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 508,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2651:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2651:9:4"
										}
									],
									"name": "setNewMaxMin",
									"nameLocation": "2504:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "_level0Min",
												"nameLocation": "2526:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2518:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "_level0Max",
												"nameLocation": "2546:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2538:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "_level1Min",
												"nameLocation": "2566:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2558:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "_level1Max",
												"nameLocation": "2586:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2578:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2578:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "_levelVipMin",
												"nameLocation": "2606:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2598:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2598:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "_levelVipMax",
												"nameLocation": "2628:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2620:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2620:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2517:124:4"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2660:0:4"
									},
									"scope": 1262,
									"src": "2495:372:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "3076:641:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 545,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "3094:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 546,
																	"name": "level0Max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 338,
																	"src": "3105:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3094:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 548,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "3118:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 549,
																	"name": "level0Min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "3129:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3118:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3094:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e20616e64206c657373207468616e206d6178",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3140:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09",
																"typeString": "literal_string \"Amount needs to be more than min and less than max\""
															},
															"value": "Amount needs to be more than min and less than max"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09",
																"typeString": "literal_string \"Amount needs to be more than min and less than max\""
															}
														],
														"id": 544,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3086:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3086:107:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "3086:107:4"
											},
											{
												"assignments": [
													556
												],
												"declarations": [
													{
														"constant": false,
														"id": 556,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "3211:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 611,
														"src": "3203:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 555,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3203:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"initialValue": {
													"expression": {
														"id": 557,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3224:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3224:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3203:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3257:21:4",
															"subExpression": {
																"baseExpression": {
																	"id": 561,
																	"name": "isLevel0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "3258:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 563,
																"indexExpression": {
																	"id": 562,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 556,
																	"src": "3267:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3258:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7527726520616c726561647920696e2074686973205374616b65206c6576656c",
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3280:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801",
																"typeString": "literal_string \"You're already in this Stake level\""
															},
															"value": "You're already in this Stake level"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801",
																"typeString": "literal_string \"You're already in this Stake level\""
															}
														],
														"id": 560,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3249:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3249:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 567,
												"nodeType": "ExpressionStatement",
												"src": "3249:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "3359:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 574,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3379:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SenseiStaking_$1262",
																		"typeString": "contract SenseiStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SenseiStaking_$1262",
																		"typeString": "contract SenseiStaking"
																	}
																],
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3371:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 572,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3371:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3371:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "3386:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 568,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "3332:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "3332:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3332:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "3332:62:4"
											},
											{
												"expression": {
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 579,
															"name": "isLevel0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3405:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 581,
														"indexExpression": {
															"id": 580,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "3414:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3405:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3428:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3405:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "3405:27:4"
											},
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 585,
															"name": "level0Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "3442:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
															}
														},
														"id": 587,
														"indexExpression": {
															"id": 586,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "3456:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3442:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$315_storage",
															"typeString": "struct SenseiStaking._user storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 589,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 539,
																"src": "3500:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 590,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3534:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3534:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 592,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3575:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3575:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "37",
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3593:6:4",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_604800_by_1",
																		"typeString": "int_const 604800"
																	},
																	"value": "7"
																},
																"src": "3575:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 588,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "3470:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$__user_$315_storage_ptr_$",
																"typeString": "type(struct SenseiStaking._user storage pointer)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"balance",
															"timeStarted",
															"timeFinish"
														],
														"nodeType": "FunctionCall",
														"src": "3470:140:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$315_memory_ptr",
															"typeString": "struct SenseiStaking._user memory"
														}
													},
													"src": "3442:168:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$__user_$315_storage",
														"typeString": "struct SenseiStaking._user storage ref"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "3442:168:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 556,
															"src": "3644:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3656:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 602,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "3659:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 603,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3668:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3668:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 605,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3685:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3685:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "37",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3703:6:4",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_604800_by_1",
																	"typeString": "int_const 604800"
																},
																"value": "7"
															},
															"src": "3685:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "3635:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,uint256,uint256,uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3635:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 610,
												"nodeType": "EmitStatement",
												"src": "3630:80:4"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2873:138:4",
										"text": " @dev Join to a staking class.\n Requirements:\n  \n - User has not enter the staking class previously. "
									},
									"functionSelector": "fe2981b5",
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 542,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 541,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "3062:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3062:13:4"
										}
									],
									"name": "enterLevel0",
									"nameLocation": "3025:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3046:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "3038:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3038:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3037:17:4"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3076:0:4"
									},
									"scope": 1262,
									"src": "3016:701:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "3933:634:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 621,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "3951:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 622,
																	"name": "level1Max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3962:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3951:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 624,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "3975:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 625,
																	"name": "level1Min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "3986:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3975:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3951:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e20616e64206c657373207468616e206d6178",
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3997:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09",
																"typeString": "literal_string \"Amount needs to be more than min and less than max\""
															},
															"value": "Amount needs to be more than min and less than max"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09",
																"typeString": "literal_string \"Amount needs to be more than min and less than max\""
															}
														],
														"id": 620,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3943:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:107:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "3943:107:4"
											},
											{
												"assignments": [
													632
												],
												"declarations": [
													{
														"constant": false,
														"id": 632,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "4068:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 687,
														"src": "4060:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 631,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4060:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 635,
												"initialValue": {
													"expression": {
														"id": 633,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4081:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4081:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4060:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4111:21:4",
															"subExpression": {
																"baseExpression": {
																	"id": 637,
																	"name": "isLevel1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "4112:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 639,
																"indexExpression": {
																	"id": 638,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "4121:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4112:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7527726520616c726561647920696e2074686973205374616b65206c6576656c",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4134:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801",
																"typeString": "literal_string \"You're already in this Stake level\""
															},
															"value": "You're already in this Stake level"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801",
																"typeString": "literal_string \"You're already in this Stake level\""
															}
														],
														"id": 636,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4103:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 643,
												"nodeType": "ExpressionStatement",
												"src": "4103:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "4215:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 650,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4235:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SenseiStaking_$1262",
																		"typeString": "contract SenseiStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SenseiStaking_$1262",
																		"typeString": "contract SenseiStaking"
																	}
																],
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4227:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 648,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4227:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4227:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "4242:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 644,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "4188:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "4188:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4188:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "4188:62:4"
											},
											{
												"expression": {
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 655,
															"name": "isLevel1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "4261:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 657,
														"indexExpression": {
															"id": 656,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "4270:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4261:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4284:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4261:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "4261:27:4"
											},
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 661,
															"name": "level1Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "4298:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
															}
														},
														"id": 663,
														"indexExpression": {
															"id": 662,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "4312:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4298:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$315_storage",
															"typeString": "struct SenseiStaking._user storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 665,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "4355:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 666,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4388:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4388:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 668,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4428:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4428:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3330",
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4446:7:4",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2592000_by_1",
																		"typeString": "int_const 2592000"
																	},
																	"value": "30"
																},
																"src": "4428:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 664,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4326:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$__user_$315_storage_ptr_$",
																"typeString": "type(struct SenseiStaking._user storage pointer)"
															}
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"balance",
															"timeStarted",
															"timeFinish"
														],
														"nodeType": "FunctionCall",
														"src": "4326:138:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$315_memory_ptr",
															"typeString": "struct SenseiStaking._user memory"
														}
													},
													"src": "4298:166:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$__user_$315_storage",
														"typeString": "struct SenseiStaking._user storage ref"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "4298:166:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 676,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "4493:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4505:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"id": 678,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "4508:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 679,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4517:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4517:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 681,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4534:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4534:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3330",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4552:7:4",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2592000_by_1",
																	"typeString": "int_const 2592000"
																},
																"value": "30"
															},
															"src": "4534:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 675,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "4484:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,uint256,uint256,uint256)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4484:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 686,
												"nodeType": "EmitStatement",
												"src": "4479:81:4"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "3727:141:4",
										"text": " @dev Join to a staking class.\n Requirements:\n   \n - User has not enter the staking class previously.   "
									},
									"functionSelector": "1ed81ff8",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 618,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 617,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "3919:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3919:13:4"
										}
									],
									"name": "enterLevel1",
									"nameLocation": "3882:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3903:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "3895:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3895:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:17:4"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3933:0:4"
									},
									"scope": 1262,
									"src": "3873:694:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "4823:642:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 697,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "4841:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 698,
																	"name": "levelVipMax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "4852:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4841:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 700,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 691,
																	"src": "4867:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 701,
																	"name": "levelVipMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 359,
																	"src": "4878:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4867:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4841:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e20616e64206c657373207468616e206d6178",
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4891:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09",
																"typeString": "literal_string \"Amount needs to be more than min and less than max\""
															},
															"value": "Amount needs to be more than min and less than max"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09",
																"typeString": "literal_string \"Amount needs to be more than min and less than max\""
															}
														],
														"id": 696,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4833:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4833:111:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "4833:111:4"
											},
											{
												"assignments": [
													708
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "4962:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 763,
														"src": "4954:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 707,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4954:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 711,
												"initialValue": {
													"expression": {
														"id": 709,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4975:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4975:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4954:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5016:18:4",
															"subExpression": {
																"baseExpression": {
																	"id": 713,
																	"name": "isVip",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "5017:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 715,
																"indexExpression": {
																	"id": 714,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 708,
																	"src": "5023:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5017:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7527726520616c726561647920696e2074686520566970205374616b65",
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5036:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daf93fd023ea17bf0c263d023c3e511dcafa853cd1782f387ee74b6b6866acdb",
																"typeString": "literal_string \"You're already in the Vip Stake\""
															},
															"value": "You're already in the Vip Stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daf93fd023ea17bf0c263d023c3e511dcafa853cd1782f387ee74b6b6866acdb",
																"typeString": "literal_string \"You're already in the Vip Stake\""
															}
														],
														"id": 712,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5008:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5008:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 719,
												"nodeType": "ExpressionStatement",
												"src": "5008:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 723,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5116:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 726,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5136:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SenseiStaking_$1262",
																		"typeString": "contract SenseiStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SenseiStaking_$1262",
																		"typeString": "contract SenseiStaking"
																	}
																],
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5128:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 724,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5128:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5128:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "5143:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 720,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "5089:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "5089:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5089:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "5089:62:4"
											},
											{
												"expression": {
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 731,
															"name": "isVip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5162:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 733,
														"indexExpression": {
															"id": 732,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5168:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5162:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5182:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5162:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "5162:24:4"
											},
											{
												"expression": {
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 737,
															"name": "vipBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "5196:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
															}
														},
														"id": 739,
														"indexExpression": {
															"id": 738,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5207:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5196:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$315_storage",
															"typeString": "struct SenseiStaking._user storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 741,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "5250:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 742,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5283:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5283:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 744,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5323:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5323:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3930",
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5341:7:4",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_7776000_by_1",
																		"typeString": "int_const 7776000"
																	},
																	"value": "90"
																},
																"src": "5323:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 740,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5221:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$__user_$315_storage_ptr_$",
																"typeString": "type(struct SenseiStaking._user storage pointer)"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"balance",
															"timeStarted",
															"timeFinish"
														],
														"nodeType": "FunctionCall",
														"src": "5221:138:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$315_memory_ptr",
															"typeString": "struct SenseiStaking._user memory"
														}
													},
													"src": "5196:163:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$__user_$315_storage",
														"typeString": "struct SenseiStaking._user storage ref"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "5196:163:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 752,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5391:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "32",
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5403:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														{
															"id": 754,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "5406:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 755,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5415:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5415:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 757,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5432:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5432:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3930",
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5450:7:4",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7776000_by_1",
																	"typeString": "int_const 7776000"
																},
																"value": "90"
															},
															"src": "5432:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 751,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "5382:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,uint256,uint256,uint256)"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5382:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "EmitStatement",
												"src": "5377:81:4"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "4573:188:4",
										"text": " @dev Join to a staking class.\n Requirements:\n - _amount must be greather than enter fee.\n - User has not enter the staking class previously.    "
									},
									"functionSelector": "bf01651a",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 694,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 693,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "4809:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4809:13:4"
										}
									],
									"name": "enterVip",
									"nameLocation": "4775:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4793:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "4785:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4784:17:4"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4823:0:4"
									},
									"scope": 1262,
									"src": "4766:699:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "5683:426:4",
										"statements": [
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "releaseTime",
														"nameLocation": "5701:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 821,
														"src": "5693:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 774,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5693:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"nodeType": "VariableDeclarationStatement",
												"src": "5693:19:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 777,
														"name": "class",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "5725:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 778,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5734:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5725:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "class",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "5826:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5835:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "5826:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 799,
																"name": "class",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "5925:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5934:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "5925:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 812,
															"nodeType": "Block",
															"src": "6019:37:4",
															"statements": [
																{
																	"expression": {
																		"hexValue": "66616c7365",
																		"id": 810,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6040:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 773,
																	"id": 811,
																	"nodeType": "Return",
																	"src": "6033:12:4"
																}
															]
														},
														"id": 813,
														"nodeType": "IfStatement",
														"src": "5921:135:4",
														"trueBody": {
															"id": 809,
															"nodeType": "Block",
															"src": "5936:77:4",
															"statements": [
																{
																	"expression": {
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 802,
																			"name": "releaseTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 775,
																			"src": "5950:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"baseExpression": {
																					"id": 803,
																					"name": "vipBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 395,
																					"src": "5964:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																						"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
																					}
																				},
																				"id": 805,
																				"indexExpression": {
																					"id": 804,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "5975:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5964:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$__user_$315_storage",
																					"typeString": "struct SenseiStaking._user storage ref"
																				}
																			},
																			"id": 806,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timeFinish",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 314,
																			"src": "5964:27:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5950:41:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 808,
																	"nodeType": "ExpressionStatement",
																	"src": "5950:41:4"
																}
															]
														}
													},
													"id": 814,
													"nodeType": "IfStatement",
													"src": "5822:234:4",
													"trueBody": {
														"id": 798,
														"nodeType": "Block",
														"src": "5837:78:4",
														"statements": [
															{
																"expression": {
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 791,
																		"name": "releaseTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 775,
																		"src": "5851:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 792,
																				"name": "level1Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "5865:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																					"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
																				}
																			},
																			"id": 794,
																			"indexExpression": {
																				"id": 793,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "5879:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5865:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$__user_$315_storage",
																				"typeString": "struct SenseiStaking._user storage ref"
																			}
																		},
																		"id": 795,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timeFinish",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 314,
																		"src": "5865:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5851:44:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 797,
																"nodeType": "ExpressionStatement",
																"src": "5851:44:4"
															}
														]
													}
												},
												"id": 815,
												"nodeType": "IfStatement",
												"src": "5722:334:4",
												"trueBody": {
													"id": 787,
													"nodeType": "Block",
													"src": "5736:80:4",
													"statements": [
														{
															"expression": {
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 780,
																	"name": "releaseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "5750:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 781,
																			"name": "level0Balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "5764:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																				"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
																			}
																		},
																		"id": 783,
																		"indexExpression": {
																			"id": 782,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "5778:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5764:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$__user_$315_storage",
																			"typeString": "struct SenseiStaking._user storage ref"
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timeFinish",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "5764:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5750:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 786,
															"nodeType": "ExpressionStatement",
															"src": "5750:44:4"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 816,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6072:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6072:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 818,
														"name": "releaseTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "6091:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6072:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 773,
												"id": 820,
												"nodeType": "Return",
												"src": "6065:37:4"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "5473:132:4",
										"text": " @dev Checks if the staking has reached the timeFinish limit.\n classes :0 - level 0, 1 - level 1, 2 - Vip"
									},
									"functionSelector": "f7edf9ab",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOnTime",
									"nameLocation": "5619:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5637:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "5629:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5629:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "5649:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "5643:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 768,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5643:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5628:27:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "5677:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5677:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5676:6:4"
									},
									"scope": 1262,
									"src": "5610:499:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 891,
										"nodeType": "Block",
										"src": "6339:591:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 834,
														"name": "class",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "6352:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6361:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6352:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 851,
															"name": "class",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "6535:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6544:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "6535:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 868,
																"name": "class",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "6713:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6722:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6713:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 887,
															"nodeType": "Block",
															"src": "6891:33:4",
															"statements": [
																{
																	"expression": {
																		"hexValue": "30",
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6912:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"functionReturnParameters": 833,
																	"id": 886,
																	"nodeType": "Return",
																	"src": "6905:8:4"
																}
															]
														},
														"id": 888,
														"nodeType": "IfStatement",
														"src": "6709:215:4",
														"trueBody": {
															"id": 884,
															"nodeType": "Block",
															"src": "6724:161:4",
															"statements": [
																{
																	"assignments": [
																		872
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 872,
																			"mutability": "mutable",
																			"name": "_timeStarted",
																			"nameLocation": "6757:12:4",
																			"nodeType": "VariableDeclaration",
																			"scope": 884,
																			"src": "6749:20:4",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 871,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "6749:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 877,
																	"initialValue": {
																		"expression": {
																			"baseExpression": {
																				"id": 873,
																				"name": "vipBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 395,
																				"src": "6772:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																					"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
																				}
																			},
																			"id": 875,
																			"indexExpression": {
																				"id": 874,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 825,
																				"src": "6783:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6772:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$__user_$315_storage",
																				"typeString": "struct SenseiStaking._user storage ref"
																			}
																		},
																		"id": 876,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timeStarted",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 312,
																		"src": "6772:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "6749:51:4"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 879,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 829,
																				"src": "6840:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 880,
																				"name": "_timeStarted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "6848:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 881,
																				"name": "vipLevelAPY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 324,
																				"src": "6862:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 878,
																			"name": "calculateInterest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 931,
																			"src": "6822:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6822:52:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 833,
																	"id": 883,
																	"nodeType": "Return",
																	"src": "6815:59:4"
																}
															]
														}
													},
													"id": 889,
													"nodeType": "IfStatement",
													"src": "6531:393:4",
													"trueBody": {
														"id": 867,
														"nodeType": "Block",
														"src": "6546:157:4",
														"statements": [
															{
																"assignments": [
																	855
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 855,
																		"mutability": "mutable",
																		"name": "_timeStarted",
																		"nameLocation": "6574:12:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 867,
																		"src": "6566:20:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 854,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6566:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 860,
																"initialValue": {
																	"expression": {
																		"baseExpression": {
																			"id": 856,
																			"name": "level1Balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "6589:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																				"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
																			}
																		},
																		"id": 858,
																		"indexExpression": {
																			"id": 857,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "6603:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6589:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$__user_$315_storage",
																			"typeString": "struct SenseiStaking._user storage ref"
																		}
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timeStarted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 312,
																	"src": "6589:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6566:54:4"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 862,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "6660:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 863,
																			"name": "_timeStarted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 855,
																			"src": "6668:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 864,
																			"name": "level1APY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "6682:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 861,
																		"name": "calculateInterest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 931,
																		"src": "6642:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																		}
																	},
																	"id": 865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6642:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 833,
																"id": 866,
																"nodeType": "Return",
																"src": "6635:57:4"
															}
														]
													}
												},
												"id": 890,
												"nodeType": "IfStatement",
												"src": "6349:575:4",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "6363:162:4",
													"statements": [
														{
															"assignments": [
																838
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 838,
																	"mutability": "mutable",
																	"name": "_timeStarted",
																	"nameLocation": "6396:12:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 850,
																	"src": "6388:20:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 837,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6388:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 843,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 839,
																		"name": "level0Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "6411:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																			"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
																		}
																	},
																	"id": 841,
																	"indexExpression": {
																		"id": 840,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "6425:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6411:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$__user_$315_storage",
																		"typeString": "struct SenseiStaking._user storage ref"
																	}
																},
																"id": 842,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timeStarted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 312,
																"src": "6411:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6388:54:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 845,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "6482:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 846,
																		"name": "_timeStarted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 838,
																		"src": "6490:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 847,
																		"name": "level0APY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "6504:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 844,
																	"name": "calculateInterest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "6464:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6464:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 833,
															"id": 849,
															"nodeType": "Return",
															"src": "6457:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "6117:122:4",
										"text": " @dev Get interest earned during the staking time.\n classes : 0 - level 0, 1 - level 1, 2 - Vip"
									},
									"functionSelector": "69e06848",
									"id": 892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInterest",
									"nameLocation": "6253:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6274:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "6266:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6266:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "6286:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "6280:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 826,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6280:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "6301:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "6293:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6293:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6265:44:4"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "6331:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6331:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6330:9:4"
									},
									"scope": 1262,
									"src": "6244:686:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "7049:251:4",
										"statements": [
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "7067:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 930,
														"src": "7059:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 903,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7059:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 909,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 905,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7080:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7080:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 907,
														"name": "_timeStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "7098:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7080:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7059:51:4"
											},
											{
												"assignments": [
													911
												],
												"declarations": [
													{
														"constant": false,
														"id": 911,
														"mutability": "mutable",
														"name": "interestPerSecond",
														"nameLocation": "7136:17:4",
														"nodeType": "VariableDeclaration",
														"scope": 930,
														"src": "7128:25:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 910,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7128:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 921,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 912,
																				"name": "_balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 894,
																				"src": "7158:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 913,
																				"name": "_APY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 898,
																				"src": "7169:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7158:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 915,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7157:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7177:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "7157:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 918,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7156:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333635",
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7186:8:4",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "7156:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7128:66:4"
											},
											{
												"assignments": [
													923
												],
												"declarations": [
													{
														"constant": false,
														"id": 923,
														"mutability": "mutable",
														"name": "interestsEarned",
														"nameLocation": "7212:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 930,
														"src": "7204:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 922,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 927,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 924,
														"name": "timeStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "7230:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 925,
														"name": "interestPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "7243:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7230:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7204:56:4"
											},
											{
												"expression": {
													"id": 928,
													"name": "interestsEarned",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 923,
													"src": "7278:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 902,
												"id": 929,
												"nodeType": "Return",
												"src": "7271:22:4"
											}
										]
									},
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateInterest",
									"nameLocation": "6945:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "_balance",
												"nameLocation": "6972:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "6964:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6964:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "_timeStarted",
												"nameLocation": "6990:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "6982:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "_APY",
												"nameLocation": "7012:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "7004:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6963:54:4"
									},
									"returnParameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "7041:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7041:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7040:9:4"
									},
									"scope": 1262,
									"src": "6936:364:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "7508:932:4",
										"statements": [
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "7526:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "7518:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 937,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7518:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 941,
												"initialValue": {
													"expression": {
														"id": 939,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7539:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7539:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7518:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 943,
																"name": "isLevel0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "7567:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 945,
															"indexExpression": {
																"id": 944,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 938,
																"src": "7576:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7567:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206973206e6f74206f6e204c6576656c2030",
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7589:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bdfb0dc4c4c59115de16dba1fe971a1a93a7298738a304cd5bd53a9e8420e1c",
																"typeString": "literal_string \"User is not on Level 0\""
															},
															"value": "User is not on Level 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bdfb0dc4c4c59115de16dba1fe971a1a93a7298738a304cd5bd53a9e8420e1c",
																"typeString": "literal_string \"User is not on Level 0\""
															}
														],
														"id": 942,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7559:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7559:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "7559:55:4"
											},
											{
												"assignments": [
													950
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "7633:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "7625:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 949,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7625:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 955,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 951,
															"name": "level0Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "7643:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
															}
														},
														"id": 953,
														"indexExpression": {
															"id": 952,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "7657:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7643:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$315_storage",
															"typeString": "struct SenseiStaking._user storage ref"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 310,
													"src": "7643:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7625:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 957,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 950,
																"src": "7694:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 958,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "7705:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7694:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e636520746f207769746864726177",
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7714:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															},
															"value": "Not enough balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															}
														],
														"id": 956,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7686:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7686:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "7686:61:4"
											},
											{
												"assignments": [
													964
												],
												"declarations": [
													{
														"constant": false,
														"id": 964,
														"mutability": "mutable",
														"name": "_isOnTime",
														"nameLocation": "7763:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "7758:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 963,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7758:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"initialValue": {
													"arguments": [
														{
															"id": 966,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "7784:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 967,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7796:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 965,
														"name": "isOnTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "7775:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (address,uint8) view returns (bool)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7775:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7758:40:4"
											},
											{
												"assignments": [
													971
												],
												"declarations": [
													{
														"constant": false,
														"id": 971,
														"mutability": "mutable",
														"name": "earnings",
														"nameLocation": "7816:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1040,
														"src": "7808:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 970,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7808:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 977,
												"initialValue": {
													"arguments": [
														{
															"id": 973,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "7839:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7851:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 975,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "7854:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 972,
														"name": "getInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "7827:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint8,uint256) view returns (uint256)"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7827:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7808:54:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 978,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "7876:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 979,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7876:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1000,
													"nodeType": "Block",
													"src": "8006:69:4",
													"statements": [
														{
															"expression": {
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 993,
																			"name": "level0Balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "8020:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																				"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
																			}
																		},
																		"id": 995,
																		"indexExpression": {
																			"id": 994,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 938,
																			"src": "8034:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8020:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$__user_$315_storage",
																			"typeString": "struct SenseiStaking._user storage ref"
																		}
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 310,
																	"src": "8020:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 997,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "8057:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8020:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 999,
															"nodeType": "ExpressionStatement",
															"src": "8020:44:4"
														}
													]
												},
												"id": 1001,
												"nodeType": "IfStatement",
												"src": "7873:202:4",
												"trueBody": {
													"id": 992,
													"nodeType": "Block",
													"src": "7895:105:4",
													"statements": [
														{
															"expression": {
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "7909:32:4",
																"subExpression": {
																	"baseExpression": {
																		"id": 981,
																		"name": "level0Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "7916:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																			"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
																		}
																	},
																	"id": 983,
																	"indexExpression": {
																		"id": 982,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "7930:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7916:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$__user_$315_storage",
																		"typeString": "struct SenseiStaking._user storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 985,
															"nodeType": "ExpressionStatement",
															"src": "7909:32:4"
														},
														{
															"expression": {
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 986,
																		"name": "isLevel0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 372,
																		"src": "7961:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 988,
																	"indexExpression": {
																		"id": 987,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "7970:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7961:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7984:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "7961:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 991,
															"nodeType": "ExpressionStatement",
															"src": "7961:28:4"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1002,
													"name": "_isOnTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 964,
													"src": "8088:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1030,
													"nodeType": "Block",
													"src": "8249:112:4",
													"statements": [
														{
															"expression": {
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1019,
																	"name": "earnings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "8263:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8274:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8263:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1022,
															"nodeType": "ExpressionStatement",
															"src": "8263:12:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1026,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "8319:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1027,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "8331:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1023,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "8296:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1025,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "8296:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8296:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1029,
															"nodeType": "ExpressionStatement",
															"src": "8296:43:4"
														}
													]
												},
												"id": 1031,
												"nodeType": "IfStatement",
												"src": "8085:276:4",
												"trueBody": {
													"id": 1018,
													"nodeType": "Block",
													"src": "8098:145:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1006,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "8135:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1007,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 934,
																		"src": "8147:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1003,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "8112:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "8112:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8112:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1009,
															"nodeType": "ExpressionStatement",
															"src": "8112:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1013,
																		"name": "reserveWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "8196:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1014,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 938,
																		"src": "8211:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1015,
																		"name": "earnings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 971,
																		"src": "8223:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1010,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "8169:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 255,
																	"src": "8169:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8169:63:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1017,
															"nodeType": "ExpressionStatement",
															"src": "8169:63:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1033,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 938,
															"src": "8389:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8401:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1035,
															"name": "_isOnTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "8404:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1036,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "8415:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1037,
															"name": "earnings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "8424:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1032,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "8380:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,bool,uint256,uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8380:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "EmitStatement",
												"src": "8375:58:4"
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "7306:147:4",
										"text": " @dev Withdraw from a staking class.\n Requirements:\n - Msg.sender should have an active deposit in the class."
									},
									"functionSelector": "927e5998",
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawLevel0",
									"nameLocation": "7467:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7491:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "7483:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7483:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7482:17:4"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7508:0:4"
									},
									"scope": 1262,
									"src": "7458:982:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "8648:930:4",
										"statements": [
											{
												"assignments": [
													1048
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "8666:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "8658:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1047,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8658:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1051,
												"initialValue": {
													"expression": {
														"id": 1049,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8679:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8679:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8658:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1053,
																"name": "isLevel1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "8707:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1055,
															"indexExpression": {
																"id": 1054,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1048,
																"src": "8716:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8707:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206973206e6f74206f6e204c6576656c2031",
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8729:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_591dc1182a2386b4749ced023bc81df809d47be83533f1ef6275681de1e04c04",
																"typeString": "literal_string \"User is not on Level 1\""
															},
															"value": "User is not on Level 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_591dc1182a2386b4749ced023bc81df809d47be83533f1ef6275681de1e04c04",
																"typeString": "literal_string \"User is not on Level 1\""
															}
														],
														"id": 1052,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8699:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8699:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "8699:55:4"
											},
											{
												"assignments": [
													1060
												],
												"declarations": [
													{
														"constant": false,
														"id": 1060,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "8773:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "8765:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1059,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8765:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1065,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1061,
															"name": "level1Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "8783:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
															}
														},
														"id": 1063,
														"indexExpression": {
															"id": 1062,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "8797:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8783:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$315_storage",
															"typeString": "struct SenseiStaking._user storage ref"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 310,
													"src": "8783:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8765:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1067,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "8834:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1068,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1044,
																"src": "8845:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8834:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e636520746f207769746864726177",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8854:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															},
															"value": "Not enough balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															}
														],
														"id": 1066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8826:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8826:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "8826:61:4"
											},
											{
												"assignments": [
													1074
												],
												"declarations": [
													{
														"constant": false,
														"id": 1074,
														"mutability": "mutable",
														"name": "_isOnTime",
														"nameLocation": "8903:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "8898:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1073,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8898:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1079,
												"initialValue": {
													"arguments": [
														{
															"id": 1076,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "8924:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8936:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1075,
														"name": "isOnTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "8915:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (address,uint8) view returns (bool)"
														}
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8915:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8898:40:4"
											},
											{
												"assignments": [
													1081
												],
												"declarations": [
													{
														"constant": false,
														"id": 1081,
														"mutability": "mutable",
														"name": "earnings",
														"nameLocation": "8956:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1150,
														"src": "8948:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1080,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8948:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1087,
												"initialValue": {
													"arguments": [
														{
															"id": 1083,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "8979:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8991:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"id": 1085,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "8994:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1082,
														"name": "getInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "8967:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint8,uint256) view returns (uint256)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8967:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8948:54:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1088,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "9016:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1089,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "9027:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9016:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "9146:69:4",
													"statements": [
														{
															"expression": {
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1103,
																			"name": "level1Balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 386,
																			"src": "9160:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																				"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
																			}
																		},
																		"id": 1105,
																		"indexExpression": {
																			"id": 1104,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1048,
																			"src": "9174:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9160:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$__user_$315_storage",
																			"typeString": "struct SenseiStaking._user storage ref"
																		}
																	},
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 310,
																	"src": "9160:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1107,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "9197:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9160:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "9160:44:4"
														}
													]
												},
												"id": 1111,
												"nodeType": "IfStatement",
												"src": "9013:202:4",
												"trueBody": {
													"id": 1102,
													"nodeType": "Block",
													"src": "9035:105:4",
													"statements": [
														{
															"expression": {
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "9049:32:4",
																"subExpression": {
																	"baseExpression": {
																		"id": 1091,
																		"name": "level1Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 386,
																		"src": "9056:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																			"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
																		}
																	},
																	"id": 1093,
																	"indexExpression": {
																		"id": 1092,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "9070:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9056:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$__user_$315_storage",
																		"typeString": "struct SenseiStaking._user storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1095,
															"nodeType": "ExpressionStatement",
															"src": "9049:32:4"
														},
														{
															"expression": {
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1096,
																		"name": "isLevel1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "9101:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1098,
																	"indexExpression": {
																		"id": 1097,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "9110:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9101:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1099,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9124:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "9101:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1101,
															"nodeType": "ExpressionStatement",
															"src": "9101:28:4"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1112,
													"name": "_isOnTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1074,
													"src": "9228:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "9389:114:4",
													"statements": [
														{
															"expression": {
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1129,
																	"name": "earnings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1081,
																	"src": "9403:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9414:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9403:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1132,
															"nodeType": "ExpressionStatement",
															"src": "9403:12:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1136,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "9461:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1137,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "9473:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1133,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "9438:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "9438:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9438:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1139,
															"nodeType": "ExpressionStatement",
															"src": "9438:43:4"
														}
													]
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "9225:278:4",
												"trueBody": {
													"id": 1128,
													"nodeType": "Block",
													"src": "9238:145:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1116,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "9275:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1117,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "9287:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1113,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "9252:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "9252:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9252:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1119,
															"nodeType": "ExpressionStatement",
															"src": "9252:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1123,
																		"name": "reserveWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "9336:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1124,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1048,
																		"src": "9351:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1125,
																		"name": "earnings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1081,
																		"src": "9363:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1120,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "9309:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 255,
																	"src": "9309:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9309:63:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1127,
															"nodeType": "ExpressionStatement",
															"src": "9309:63:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1143,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1048,
															"src": "9527:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9539:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"id": 1145,
															"name": "_isOnTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "9542:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1146,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "9553:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1147,
															"name": "earnings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1081,
															"src": "9562:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1142,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "9518:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,bool,uint256,uint256)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9518:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "EmitStatement",
												"src": "9513:58:4"
											}
										]
									},
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "8446:147:4",
										"text": " @dev Withdraw from a staking class.\n Requirements:\n - Msg.sender should have an active deposit in the class."
									},
									"functionSelector": "bb664864",
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawLevel1",
									"nameLocation": "8607:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8631:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "8623:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8623:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8622:17:4"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8648:0:4"
									},
									"scope": 1262,
									"src": "8598:980:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "9783:913:4",
										"statements": [
											{
												"assignments": [
													1158
												],
												"declarations": [
													{
														"constant": false,
														"id": 1158,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "9801:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "9793:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1157,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9793:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1161,
												"initialValue": {
													"expression": {
														"id": 1159,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9814:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "9814:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9793:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1163,
																"name": "isVip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "9842:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1165,
															"indexExpression": {
																"id": 1164,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1158,
																"src": "9848:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9842:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206973206e6f7420566970",
															"id": 1166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9861:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7563a6a5744ba74585ebbf959f95f0839d04ae841bce20f759f432de3f6ca18",
																"typeString": "literal_string \"User is not Vip\""
															},
															"value": "User is not Vip"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7563a6a5744ba74585ebbf959f95f0839d04ae841bce20f759f432de3f6ca18",
																"typeString": "literal_string \"User is not Vip\""
															}
														],
														"id": 1162,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9834:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9834:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1168,
												"nodeType": "ExpressionStatement",
												"src": "9834:45:4"
											},
											{
												"assignments": [
													1170
												],
												"declarations": [
													{
														"constant": false,
														"id": 1170,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "9902:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "9894:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1169,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9894:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1175,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1171,
															"name": "vipBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "9912:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
															}
														},
														"id": 1173,
														"indexExpression": {
															"id": 1172,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "9923:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9912:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$315_storage",
															"typeString": "struct SenseiStaking._user storage ref"
														}
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 310,
													"src": "9912:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9894:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1177,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1170,
																"src": "9960:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1178,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "9971:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9960:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e636520746f207769746864726177",
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9980:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															},
															"value": "Not enough balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															}
														],
														"id": 1176,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9952:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9952:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "9952:61:4"
											},
											{
												"assignments": [
													1184
												],
												"declarations": [
													{
														"constant": false,
														"id": 1184,
														"mutability": "mutable",
														"name": "_isOnTime",
														"nameLocation": "10029:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "10024:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1183,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10024:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1189,
												"initialValue": {
													"arguments": [
														{
															"id": 1186,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "10050:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "32",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10062:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1185,
														"name": "isOnTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "10041:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (address,uint8) view returns (bool)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10041:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10024:40:4"
											},
											{
												"assignments": [
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "earnings",
														"nameLocation": "10082:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1260,
														"src": "10074:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10074:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1197,
												"initialValue": {
													"arguments": [
														{
															"id": 1193,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "10105:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "32",
															"id": 1194,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10117:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														{
															"id": 1195,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "10120:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1192,
														"name": "getInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 892,
														"src": "10093:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint8,uint256) view returns (uint256)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10093:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10074:54:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1198,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1154,
														"src": "10142:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1199,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "10153:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10142:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1220,
													"nodeType": "Block",
													"src": "10265:66:4",
													"statements": [
														{
															"expression": {
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1213,
																			"name": "vipBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 395,
																			"src": "10279:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																				"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
																			}
																		},
																		"id": 1215,
																		"indexExpression": {
																			"id": 1214,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1158,
																			"src": "10290:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10279:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$__user_$315_storage",
																			"typeString": "struct SenseiStaking._user storage ref"
																		}
																	},
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 310,
																	"src": "10279:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1217,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "10313:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10279:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1219,
															"nodeType": "ExpressionStatement",
															"src": "10279:41:4"
														}
													]
												},
												"id": 1221,
												"nodeType": "IfStatement",
												"src": "10139:192:4",
												"trueBody": {
													"id": 1212,
													"nodeType": "Block",
													"src": "10161:98:4",
													"statements": [
														{
															"expression": {
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "10175:29:4",
																"subExpression": {
																	"baseExpression": {
																		"id": 1201,
																		"name": "vipBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "10182:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$315_storage_$",
																			"typeString": "mapping(address => struct SenseiStaking._user storage ref)"
																		}
																	},
																	"id": 1203,
																	"indexExpression": {
																		"id": 1202,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "10193:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10182:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$__user_$315_storage",
																		"typeString": "struct SenseiStaking._user storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1205,
															"nodeType": "ExpressionStatement",
															"src": "10175:29:4"
														},
														{
															"expression": {
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1206,
																		"name": "isVip",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 390,
																		"src": "10223:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1208,
																	"indexExpression": {
																		"id": 1207,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "10229:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10223:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10243:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "10223:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1211,
															"nodeType": "ExpressionStatement",
															"src": "10223:25:4"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1222,
													"name": "_isOnTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1184,
													"src": "10344:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1250,
													"nodeType": "Block",
													"src": "10505:116:4",
													"statements": [
														{
															"expression": {
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1239,
																	"name": "earnings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "10519:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10530:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10519:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1242,
															"nodeType": "ExpressionStatement",
															"src": "10519:12:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1246,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "10579:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1247,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "10591:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1243,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "10556:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "10556:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1248,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10556:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1249,
															"nodeType": "ExpressionStatement",
															"src": "10556:43:4"
														}
													]
												},
												"id": 1251,
												"nodeType": "IfStatement",
												"src": "10341:280:4",
												"trueBody": {
													"id": 1238,
													"nodeType": "Block",
													"src": "10354:145:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1226,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "10391:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1227,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1154,
																		"src": "10403:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1223,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "10368:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "10368:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10368:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1229,
															"nodeType": "ExpressionStatement",
															"src": "10368:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1233,
																		"name": "reserveWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "10452:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1234,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1158,
																		"src": "10467:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1235,
																		"name": "earnings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "10479:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1230,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "10425:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1232,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 255,
																	"src": "10425:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10425:63:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1237,
															"nodeType": "ExpressionStatement",
															"src": "10425:63:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1253,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1158,
															"src": "10645:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "32",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10657:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														{
															"id": 1255,
															"name": "_isOnTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1184,
															"src": "10660:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1256,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "10671:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1257,
															"name": "earnings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "10680:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1252,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "10636:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,bool,uint256,uint256)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10636:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "EmitStatement",
												"src": "10631:58:4"
											}
										]
									},
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "9584:147:4",
										"text": " @dev Withdraw from a staking class.\n Requirements:\n - Msg.sender should have an active deposit in the class."
									},
									"functionSelector": "6636389e",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawVip",
									"nameLocation": "9745:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9766:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "9758:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9758:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9757:17:4"
									},
									"returnParameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9783:0:4"
									},
									"scope": 1262,
									"src": "9736:960:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1263,
							"src": "225:10475:4",
							"usedErrors": []
						}
					],
					"src": "32:10668:4"
				},
				"id": 4
			}
		}
	}
}