{
	"id": "bb0d3eecdf016e137fc390d3dff37ea9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\ninterface IDexRouter {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n    \n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n\n    function addLiquidityETH(\n        address token,\n        uint256 amountTokenDesired,\n        uint256 amountTokenMin,\n        uint256 amountETHMin,\n        address to,\n        uint256 deadline\n    )\n        external\n        payable\n        returns (\n            uint256 amountToken,\n            uint256 amountETH,\n            uint256 liquidity\n        );\n}\n\n\ncontract mochiStaking is Ownable, Pausable {\n    // Address of the token for the staking.\n    IERC20 public acceptedToken;\n    \n    // Struc with user details.\n    struct _user {\n        uint256 balance;\n        uint256 timeStarted;\n        uint256 timeFinish;\n    }    \n\n    // APY for each class.\n    uint256 public level0APY =  2700;\n    uint256 public level1APY = 3700;\n    uint256 public vipLevelAPY = 4800;  \n\n    // Min - Max for each Level\n    uint256 public level0Min = 50 * 10**18;\n    uint256 public level0Max = 500000000 * 10**18;\n    uint256 public level1Min = 100 * 10**18;\n    uint256 public level1Max = 500000000 * 10**18;\n    uint256 public levelVipMin = 200 * 10**18;\n    uint256 public levelVipMax = 2500000000 * 10**18;\n   \n    \n    // Mapping for user details of  each class.\n    mapping (address => bool) public isLevel0;\n    mapping (address => _user) public level0Balance;\n    mapping (address => bool) public isLevel1;\n    mapping (address => _user) public level1Balance;\n    mapping (address => bool) public isVip;\n    mapping (address => _user) public vipBalance;  \n\n    // Uniswap Router\n    IDexRouter public immutable uniswapV2Router;\n\n    // Events.\n    event deposit (address user, uint8 class, uint256 amount, uint256 timeStart, uint256 timeEnd);\n    event withdraw (address user, uint8 class, bool onTime, uint256 amount, uint256 earnings);\n \n    // Set the token to be staked and Router.\n    constructor(address _token ) {\n        acceptedToken = IERC20(_token);\n        IDexRouter _uniswapV2Router = IDexRouter(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D); // Uniswap Router\n        uniswapV2Router = _uniswapV2Router;    \n    }   \n    \n    // Pause and Unpause the contract\n    function pause () public onlyOwner {\n        _pause();\n    }\n    \n    function unpause () public onlyOwner {\n        _unpause();\n    } \n\n    /**\n    * @dev Change APY for all categories.   \n    */\n\n    function setNewAPY ( uint256 _level0APY, uint256 _level1APY, uint256 _vipLevelAPY) external onlyOwner{\n        level0APY = _level0APY;\n        level1APY = _level1APY;\n        vipLevelAPY = _vipLevelAPY;\n    }\n\n    /**\n    * @dev Change max and min values for all categories.   \n    */\n\n    function setNewMaxMin (uint256 _level0Min, uint256 _level0Max, uint256 _level1Min, uint256 _level1Max, uint256 _levelVipMin, uint256 _levelVipMax) external onlyOwner{\n        level0Min = _level0Min;\n        level0Max = _level0Max;\n        level1Min = _level1Min;\n        level1Max = _level1Max;\n        levelVipMin = _levelVipMin;\n        levelVipMax = _levelVipMax;\n    }\n\n    /**\n    * @dev Join to a staking class.\n    *\n    * Requirements:\n    *  \n    * - User has not enter the staking class previously. \n    */\n    function enterLevel0 (uint256 _amount) public whenNotPaused {\n        require(_amount <= level0Max && _amount >= level0Min, \"Amount needs to be more than min and less than max\");\n        address _msgSender = msg.sender;     \n        require(!isLevel0[_msgSender], \"You're already in this Stake level\");    \n\n        acceptedToken.transferFrom(_msgSender, address(this), _amount);\n\n        isLevel0[_msgSender] = true;\n        level0Balance[_msgSender] = _user ({\n            balance: _amount,\n            timeStarted: block.timestamp,\n            // timeFinish: block.timestamp + 7 days\n            timeFinish: block.timestamp + 600\n        });         \n\n        emit deposit (_msgSender, 0, _amount, block.timestamp, block.timestamp + 7 days);\n    }\n    \n    /**\n    * @dev Join to a staking class.\n    *\n    * Requirements:\n    *   \n    * - User has not enter the staking class previously.   \n    */\n    function enterLevel1 (uint256 _amount) public whenNotPaused {\n        require(_amount <= level1Max && _amount >= level1Min, \"Amount needs to be more than min and less than max\");\n        address _msgSender = msg.sender;  \n        require(!isLevel1[_msgSender], \"You're already in this Stake level\");      \n\n        acceptedToken.transferFrom(_msgSender, address(this), _amount);\n\n        isLevel1[_msgSender] = true;\n        level1Balance[_msgSender] = _user ({\n           balance: _amount,\n           timeStarted: block.timestamp,\n        //    timeFinish: block.timestamp + 30 days\n           timeFinish: block.timestamp + 800\n        });\n    \n        emit deposit (_msgSender, 1, _amount, block.timestamp, block.timestamp + 30 days);\n    }\n\n    /**\n    * @dev Join to a staking class.\n    *\n    * Requirements:\n    *\n    * - _amount must be greather than enter fee.\n    * - User has not enter the staking class previously.    \n    */\n    function enterVip (uint256 _amount) public whenNotPaused {\n        require(_amount <= levelVipMax && _amount >= levelVipMin, \"Amount needs to be more than min and less than max\");\n        address _msgSender = msg.sender;             \n        require(!isVip[_msgSender], \"You're already in the Vip Stake\");        \n\n        acceptedToken.transferFrom(_msgSender, address(this), _amount);\n\n        isVip[_msgSender] = true;\n        vipBalance[_msgSender] = _user ({\n           balance: _amount,\n           timeStarted: block.timestamp,\n        //    timeFinish: block.timestamp + 90 days\n           timeFinish: block.timestamp + 1200\n        });       \n\n        emit deposit (_msgSender, 2, _amount, block.timestamp, block.timestamp + 90 days);\n    }\n\n \n    /**\n    * @dev Checks if the staking has reached the timeFinish limit.\n    *\n    * classes :0 - level 0, 1 - level 1, 2 - Vip\n    */\n    function isOnTime (address user, uint8 class) public view returns (bool) {\n        uint256 releaseTime;\n        if(class == 0){\n            releaseTime = level0Balance[user].timeFinish;           \n        } else if (class == 1){\n            releaseTime = level1Balance[user].timeFinish;         \n        } else if (class == 2){\n            releaseTime = vipBalance[user].timeFinish;           \n        } else {\n            return false;\n        }\n        return block.timestamp >= releaseTime;\n    }\n \n\n    /**\n    * @dev Get interest earned during the staking time.\n    *\n    * classes : 0 - level 0, 1 - level 1, 2 - Vip\n    */\n    function getInterest (address user, uint8 class, uint256 balance) public view returns (uint256){\n        if(class == 0){           \n            uint256 _timeStarted = level0Balance[user].timeStarted;\n\n            return calculateInterest(balance,_timeStarted, level0APY);\n        } else if (class == 1){      \n            uint256 _timeStarted = level1Balance[user].timeStarted;\n\n            return calculateInterest(balance,_timeStarted, level1APY);\n        } else if (class == 2){           \n            uint256 _timeStarted = vipBalance[user].timeStarted;\n\n            return calculateInterest(balance,_timeStarted, vipLevelAPY);\n        } else {\n            return 0;\n        }\n    }\n\n    function calculateInterest (uint256 _balance, uint256 _timeStarted, uint256 _APY) internal view returns (uint256){\n        uint256 timeStaked = block.timestamp - _timeStarted;\n       \n        uint256 interestPerSecond = ((_balance * _APY) / 10000) / 365 days;\n        uint256 interestsEarned = timeStaked * interestPerSecond;\n\n        return interestsEarned;\n    }\n\n    /**\n    * @dev Withdraw from a staking class.\n    *\n    * Requirements:\n    *\n    * - Msg.sender should have an active deposit in the class.\n    */\n    function withdrawLevel0 (uint256 _amount) public  {\n        address _msgSender = msg.sender;\n        require(isLevel0[_msgSender], \"User is not on Level 0\");\n\n        uint256 balance = level0Balance[_msgSender].balance;\n        require(balance >= _amount, \"Not enough balance to withdraw\");\n\n        bool _isOnTime = isOnTime(_msgSender, 0);\n        uint256 earnings = getInterest(_msgSender, 0, _amount);\n\n        if(_amount == balance){\n            delete level0Balance[_msgSender];      \n            isLevel0[_msgSender] = false;\n        } else {\n            level0Balance[_msgSender].balance -= _amount;\n        }\n\n        if(_isOnTime){\n            acceptedToken.transfer(_msgSender, _amount);\n            \n            swapTokensForEth(earnings, _msgSender);\n        } else {\n            earnings = 0;       \n            acceptedToken.transfer(_msgSender, _amount);           \n        }\n    \n        emit withdraw(_msgSender, 0, _isOnTime, _amount, earnings);\n    }\n\n    /**\n    * @dev Withdraw from a staking class.\n    *\n    * Requirements:\n    *\n    * - Msg.sender should have an active deposit in the class.\n    */\n    function withdrawLevel1 (uint256 _amount) public  {\n        address _msgSender = msg.sender;\n        require(isLevel1[_msgSender], \"User is not on Level 1\");\n\n        uint256 balance = level1Balance[_msgSender].balance;\n        require(balance >= _amount, \"Not enough balance to withdraw\");\n\n        bool _isOnTime = isOnTime(_msgSender, 1);\n        uint256 earnings = getInterest(_msgSender, 1, _amount);\n\n        if(_amount == balance){\n            delete level1Balance[_msgSender];      \n            isLevel1[_msgSender] = false;\n        } else {\n            level1Balance[_msgSender].balance -= _amount;\n        }\n\n        if(_isOnTime){\n            acceptedToken.transfer(_msgSender, _amount);\n\n            swapTokensForEth(earnings, _msgSender);\n        } else {\n            earnings = 0;         \n            acceptedToken.transfer(_msgSender, _amount);           \n        }\n\n        emit withdraw(_msgSender, 1, _isOnTime, _amount, earnings);\n    }\n\n    /**\n    * @dev Withdraw from a staking class.\n    *\n    * Requirements:\n    *\n    * - Msg.sender should have an active deposit in the class.\n    */\n    function withdrawVip (uint256 _amount) public  {\n        address _msgSender = msg.sender;\n        require(isVip[_msgSender], \"User is not Vip\");\n    \n        uint256 balance = vipBalance[_msgSender].balance;\n        require(balance >= _amount, \"Not enough balance to withdraw\");\n\n        bool _isOnTime = isOnTime(_msgSender, 2);\n        uint256 earnings = getInterest(_msgSender, 2, _amount);\n\n        if(_amount == balance){\n            delete vipBalance[_msgSender];     \n            isVip[_msgSender] = false;\n        } else {\n            vipBalance[_msgSender].balance -= _amount;\n        }\n\n        if(_isOnTime){\n            acceptedToken.transfer(_msgSender, _amount);\n\n            swapTokensForEth(earnings, _msgSender);\n        } else {\n            earnings = 0;           \n            acceptedToken.transfer(_msgSender, _amount);           \n        }\n\n        emit withdraw(_msgSender, 2, _isOnTime, _amount, earnings);\n    }  \n\n    function swapTokensForEth(uint256 tokenAmount, address recipient) private {\n        // generate the uniswap pair path of token -> weth\n        address[] memory path = new address[](2);\n        path[0] = address(acceptedToken);\n        path[1] = uniswapV2Router.WETH();\n\n        acceptedToken.approve(address(uniswapV2Router), tokenAmount);\n\n        // make the swap\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\n            tokenAmount,\n            0, // accept any amount of ETH\n            path,\n            recipient,\n            block.timestamp\n        );\n    }\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        require(!paused(), \"Pausable: paused\");\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        require(paused(), \"Pausable: not paused\");\n        _;\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"staking.sol": {
				"IDexRouter": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"IDexRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"staking.sol\":{\"keccak256\":\"0x6cd84f4f6666b171c8eb585abb69730f3d656a6a13f0c87c5cf6a9061eb971b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70f2e75896a9562e3cb7f98d6a7203439ee74901fdb44923c882bb0c7312f005\",\"dweb:/ipfs/QmUUGQQQNseMiTmsgw1uZ9N9dD8q7mxZjYx61H8CyZpjS3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"mochiStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "class",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timeStart",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timeEnd",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "class",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "onTime",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "earnings",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptedToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterLevel0",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterLevel1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enterVip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "class",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"name": "getInterest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isLevel0",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isLevel1",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "class",
									"type": "uint8"
								}
							],
							"name": "isOnTime",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isVip",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level0APY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "level0Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeStarted",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeFinish",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level0Max",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level0Min",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level1APY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "level1Balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeStarted",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeFinish",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level1Max",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "level1Min",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "levelVipMax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "levelVipMin",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level0APY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level1APY",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_vipLevelAPY",
									"type": "uint256"
								}
							],
							"name": "setNewAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_level0Min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level0Max",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level1Min",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_level1Max",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_levelVipMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_levelVipMax",
									"type": "uint256"
								}
							],
							"name": "setNewMaxMin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Router",
							"outputs": [
								{
									"internalType": "contract IDexRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "vipBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeStarted",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timeFinish",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vipLevelAPY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawLevel0",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawLevel1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawVip",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"enterLevel0(uint256)": {
								"details": "Join to a staking class. Requirements:   - User has not enter the staking class previously. "
							},
							"enterLevel1(uint256)": {
								"details": "Join to a staking class. Requirements:    - User has not enter the staking class previously.   "
							},
							"enterVip(uint256)": {
								"details": "Join to a staking class. Requirements: - _amount must be greather than enter fee. - User has not enter the staking class previously.    "
							},
							"getInterest(address,uint8,uint256)": {
								"details": "Get interest earned during the staking time. classes : 0 - level 0, 1 - level 1, 2 - Vip"
							},
							"isOnTime(address,uint8)": {
								"details": "Checks if the staking has reached the timeFinish limit. classes :0 - level 0, 1 - level 1, 2 - Vip"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"setNewAPY(uint256,uint256,uint256)": {
								"details": "Change APY for all categories.   "
							},
							"setNewMaxMin(uint256,uint256,uint256,uint256,uint256,uint256)": {
								"details": "Change max and min values for all categories.   "
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawLevel0(uint256)": {
								"details": "Withdraw from a staking class. Requirements: - Msg.sender should have an active deposit in the class."
							},
							"withdrawLevel1(uint256)": {
								"details": "Withdraw from a staking class. Requirements: - Msg.sender should have an active deposit in the class."
							},
							"withdrawVip(uint256)": {
								"details": "Withdraw from a staking class. Requirements: - Msg.sender should have an active deposit in the class."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"staking.sol\":930:12028  contract mochiStaking is Ownable, Pausable {... */\n  mstore(0x40, 0xa0)\n    /* \"staking.sol\":1261:1265  2700 */\n  0x0a8c\n    /* \"staking.sol\":1233:1265  uint256 public level0APY =  2700 */\n  0x02\n  sstore\n    /* \"staking.sol\":1298:1302  3700 */\n  0x0e74\n    /* \"staking.sol\":1271:1302  uint256 public level1APY = 3700 */\n  0x03\n  sstore\n    /* \"staking.sol\":1337:1341  4800 */\n  0x12c0\n    /* \"staking.sol\":1308:1341  uint256 public vipLevelAPY = 4800 */\n  0x04\n  sstore\n    /* \"staking.sol\":1409:1420  50 * 10**18 */\n  0x02b5e3af16b1880000\n    /* \"staking.sol\":1382:1420  uint256 public level0Min = 50 * 10**18 */\n  0x05\n  sstore\n    /* \"staking.sol\":1453:1471  500000000 * 10**18 */\n  0x019d971e4fe8401e74000000\n    /* \"staking.sol\":1426:1471  uint256 public level0Max = 500000000 * 10**18 */\n  0x06\n  sstore\n    /* \"staking.sol\":1504:1516  100 * 10**18 */\n  0x056bc75e2d63100000\n    /* \"staking.sol\":1477:1516  uint256 public level1Min = 100 * 10**18 */\n  0x07\n  sstore\n    /* \"staking.sol\":1549:1567  500000000 * 10**18 */\n  0x019d971e4fe8401e74000000\n    /* \"staking.sol\":1522:1567  uint256 public level1Max = 500000000 * 10**18 */\n  0x08\n  sstore\n    /* \"staking.sol\":1602:1614  200 * 10**18 */\n  0x0ad78ebc5ac6200000\n    /* \"staking.sol\":1573:1614  uint256 public levelVipMin = 200 * 10**18 */\n  0x09\n  sstore\n    /* \"staking.sol\":1649:1668  2500000000 * 10**18 */\n  0x0813f3978f89409844000000\n    /* \"staking.sol\":1620:1668  uint256 public levelVipMax = 2500000000 * 10**18 */\n  0x0a\n  sstore\n    /* \"staking.sol\":2357:2593  constructor(address _token ) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  tag_8\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:939  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":921:953  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":991:996  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":981:996  _paused = false */\n  dup1\n  sload\n  not(shl(0xa0, 0xff))\n  and\n  swap1\n  sstore\n  0x01\n    /* \"staking.sol\":2396:2426  acceptedToken = IERC20(_token) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"staking.sol\":2477:2519  0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D */\n  0x7a250d5630b4cf539739df2c5dacb4c659f2488d\n    /* \"staking.sol\":2548:2582  uniswapV2Router = _uniswapV2Router */\n  0x80\n  mstore\n    /* \"staking.sol\":930:12028  contract mochiStaking is Ownable, Pausable {... */\n  jump(tag_17)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_19\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_19:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_20\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_20:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_17:\n    /* \"staking.sol\":930:12028  contract mochiStaking is Ownable, Pausable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xccd68672d6f769e1076a41a883b1b79cd2ffe42afc01c80e02e0f47639ea513e\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"staking.sol\":930:12028  contract mochiStaking is Ownable, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7fe509d7\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x97e9c5fe\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xe5d15701\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xe5d15701\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf4217e1e\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf7edf9ab\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xfe2981b5\n      eq\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x97e9c5fe\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xbb664864\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xbf01651a\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xd3900a52\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8f0fb2b7\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x91789cef\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x927e5998\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x7fe509d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8275b181\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x84203f4b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x6296e750\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x67911ba4\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x67911ba4\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x69e06848\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x71a1609b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup1\n      0x6296e750\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x635ef285\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6505cf31\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6636389e\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup1\n      0x32938e3a\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x32938e3a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x451c3d80\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x01ef4739\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1694505e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1ed81ff8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1ff08fee\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"staking.sol\":1477:1516  uint256 public level1Min = 100 * 10**18 */\n    tag_3:\n      tag_43\n      sload(0x07)\n      dup2\n      jump\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"staking.sol\":1477:1516  uint256 public level1Min = 100 * 10**18 */\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"staking.sol\":2050:2093  IDexRouter public immutable uniswapV2Router */\n    tag_4:\n      tag_47\n      immutable(\"0xccd68672d6f769e1076a41a883b1b79cd2ffe42afc01c80e02e0f47639ea513e\")\n      dup2\n      jump\n    tag_47:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":378:410   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":360:411   */\n      dup2\n      mstore\n        /* \"#utility.yul\":348:350   */\n      0x20\n        /* \"#utility.yul\":333:351   */\n      add\n        /* \"staking.sol\":2050:2093  IDexRouter public immutable uniswapV2Router */\n      tag_45\n        /* \"#utility.yul\":196:417   */\n      jump\n        /* \"staking.sol\":4563:5305  function enterLevel1 (uint256 _amount) public whenNotPaused {... */\n    tag_5:\n      tag_51\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"staking.sol\":1271:1302  uint256 public level1APY = 3700 */\n    tag_6:\n      tag_43\n      sload(0x03)\n      dup2\n      jump\n        /* \"staking.sol\":1308:1341  uint256 public vipLevelAPY = 4800 */\n    tag_7:\n      tag_43\n      sload(0x04)\n      dup2\n      jump\n        /* \"staking.sol\":2714:2778  function unpause () public onlyOwner {... */\n    tag_8:\n      tag_51\n      tag_62\n      jump\t// in\n        /* \"staking.sol\":1024:1051  IERC20 public acceptedToken */\n    tag_9:\n      sload(0x01)\n      tag_47\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n    tag_67:\n      mload(0x40)\n        /* \"#utility.yul\":994:1008   */\n      swap1\n      iszero\n        /* \"#utility.yul\":987:1009   */\n      iszero\n        /* \"#utility.yul\":969:1010   */\n      dup2\n      mstore\n        /* \"#utility.yul\":957:959   */\n      0x20\n        /* \"#utility.yul\":942:960   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1098:1182  function paused() public view virtual returns (bool) {... */\n      tag_45\n        /* \"#utility.yul\":829:1016   */\n      jump\n        /* \"staking.sol\":1731:1772  mapping (address => bool) public isLevel0 */\n    tag_11:\n      tag_67\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      mstore(0x20, 0x0b)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"staking.sol\":1831:1872  mapping (address => bool) public isLevel1 */\n    tag_12:\n      tag_67\n      tag_77\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_77:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"staking.sol\":1382:1420  uint256 public level0Min = 50 * 10**18 */\n    tag_13:\n      tag_43\n      sload(0x05)\n      dup2\n      jump\n        /* \"staking.sol\":10487:11423  function withdrawVip (uint256 _amount) public  {... */\n    tag_14:\n      tag_51\n      tag_84\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n        /* \"staking.sol\":1778:1825  mapping (address => _user) public level0Balance */\n    tag_15:\n      tag_86\n      tag_87\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_87:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n    tag_86:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1611:1636   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":1667:1669   */\n      0x20\n        /* \"#utility.yul\":1652:1670   */\n      dup5\n      add\n        /* \"#utility.yul\":1645:1679   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1695:1713   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1688:1722   */\n      mstore\n        /* \"#utility.yul\":1599:1601   */\n      0x60\n        /* \"#utility.yul\":1584:1602   */\n      add\n        /* \"staking.sol\":1778:1825  mapping (address => _user) public level0Balance */\n      tag_45\n        /* \"#utility.yul\":1409:1728   */\n      jump\n        /* \"staking.sol\":7031:7717  function getInterest (address user, uint8 class, uint256 balance) public view returns (uint256){... */\n    tag_16:\n      tag_43\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_17:\n      tag_51\n      tag_97\n      jump\t// in\n        /* \"staking.sol\":1426:1471  uint256 public level0Max = 500000000 * 10**18 */\n    tag_18:\n      tag_43\n      sload(0x06)\n      dup2\n      jump\n        /* \"staking.sol\":1878:1925  mapping (address => _user) public level1Balance */\n    tag_19:\n      tag_86\n      tag_102\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_102:\n      mstore(0x20, 0x0e)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n        /* \"staking.sol\":1233:1265  uint256 public level0APY =  2700 */\n    tag_20:\n      tag_43\n      sload(0x02)\n      dup2\n      jump\n        /* \"staking.sol\":1931:1969  mapping (address => bool) public isVip */\n    tag_21:\n      tag_67\n      tag_109\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_109:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"staking.sol\":2644:2704  function pause () public onlyOwner {... */\n    tag_22:\n      tag_51\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1036:1121  function owner() public view virtual returns (address) {... */\n      jump(tag_47)\n        /* \"staking.sol\":1620:1668  uint256 public levelVipMax = 2500000000 * 10**18 */\n    tag_24:\n      tag_43\n      sload(0x0a)\n      dup2\n      jump\n        /* \"staking.sol\":1573:1614  uint256 public levelVipMin = 200 * 10**18 */\n    tag_25:\n      tag_43\n      sload(0x09)\n      dup2\n      jump\n        /* \"staking.sol\":8245:9215  function withdrawLevel0 (uint256 _amount) public  {... */\n    tag_26:\n      tag_51\n      tag_125\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n        /* \"staking.sol\":1975:2019  mapping (address => _user) public vipBalance */\n    tag_27:\n      tag_86\n      tag_128\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_128:\n      mstore(0x20, 0x10)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      swap1\n      swap2\n      swap1\n      dup4\n      jump\n        /* \"staking.sol\":9373:10329  function withdrawLevel1 (uint256 _amount) public  {... */\n    tag_28:\n      tag_51\n      tag_132\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"staking.sol\":5504:6252  function enterVip (uint256 _amount) public whenNotPaused {... */\n    tag_29:\n      tag_51\n      tag_135\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n        /* \"staking.sol\":1522:1567  uint256 public level1Max = 500000000 * 10**18 */\n    tag_30:\n      tag_43\n      sload(0x08)\n      dup2\n      jump\n        /* \"staking.sol\":2846:3054  function setNewAPY ( uint256 _level0APY, uint256 _level1APY, uint256 _vipLevelAPY) external onlyOwner{... */\n    tag_31:\n      tag_51\n      tag_141\n      calldatasize\n      0x04\n      tag_142\n      jump\t// in\n    tag_141:\n      tag_143\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n      tag_51\n      tag_145\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n        /* \"staking.sol\":3136:3508  function setNewMaxMin (uint256 _level0Min, uint256 _level0Max, uint256 _level1Min, uint256 _level1Max, uint256 _levelVipMin, uint256 _levelVipMax) external onlyOwner{... */\n    tag_33:\n      tag_51\n      tag_148\n      calldatasize\n      0x04\n      tag_149\n      jump\t// in\n    tag_148:\n      tag_150\n      jump\t// in\n        /* \"staking.sol\":6397:6896  function isOnTime (address user, uint8 class) public view returns (bool) {... */\n    tag_34:\n      tag_67\n      tag_152\n      calldatasize\n      0x04\n      tag_153\n      jump\t// in\n    tag_152:\n      tag_154\n      jump\t// in\n        /* \"staking.sol\":3657:4407  function enterLevel0 (uint256 _amount) public whenNotPaused {... */\n    tag_35:\n      tag_51\n      tag_157\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n        /* \"staking.sol\":4563:5305  function enterLevel1 (uint256 _amount) public whenNotPaused {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"staking.sol\":4652:4661  level1Max */\n      sload(0x08)\n        /* \"staking.sol\":4641:4648  _amount */\n      dup2\n        /* \"staking.sol\":4641:4661  _amount <= level1Max */\n      gt\n      iszero\n        /* \"staking.sol\":4641:4685  _amount <= level1Max && _amount >= level1Min */\n      dup1\n      iszero\n      tag_165\n      jumpi\n      pop\n        /* \"staking.sol\":4676:4685  level1Min */\n      sload(0x07)\n        /* \"staking.sol\":4665:4672  _amount */\n      dup2\n        /* \"staking.sol\":4665:4685  _amount >= level1Min */\n      lt\n      iszero\n        /* \"staking.sol\":4641:4685  _amount <= level1Max && _amount >= level1Min */\n    tag_165:\n        /* \"staking.sol\":4633:4740  require(_amount <= level1Max && _amount >= level1Min, \"Amount needs to be more than min and less than max\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_168\n      jump\t// in\n    tag_166:\n        /* \"staking.sol\":4771:4781  msg.sender */\n      caller\n        /* \"staking.sol\":4750:4768  address _msgSender */\n      0x00\n        /* \"staking.sol\":4802:4822  isLevel1[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":4802:4810  isLevel1 */\n      0x0d\n        /* \"staking.sol\":4802:4822  isLevel1[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"staking.sol\":4801:4822  !isLevel1[_msgSender] */\n      iszero\n        /* \"staking.sol\":4793:4861  require(!isLevel1[_msgSender], \"You're already in this Stake level\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_171\n      jump\t// in\n    tag_169:\n        /* \"staking.sol\":4878:4891  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":4878:4940  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5088:5103   */\n      dup4\n      dup2\n      and\n        /* \"staking.sol\":4878:4940  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5070:5104   */\n      mstore\n        /* \"staking.sol\":4925:4929  this */\n      address\n        /* \"#utility.yul\":5120:5138   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5113:5156   */\n      mstore\n        /* \"#utility.yul\":5172:5190   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5165:5199   */\n      dup6\n      swap1\n      mstore\n        /* \"staking.sol\":4878:4891  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":4878:4904  acceptedToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":5005:5023   */\n      0x64\n      add\n        /* \"staking.sol\":4878:4940  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_175:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_176\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4951:4971  isLevel1[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4951:4959  isLevel1 */\n      0x0d\n        /* \"staking.sol\":4951:4971  isLevel1[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":4951:4978  isLevel1[_msgSender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"staking.sol\":4974:4978  true */\n      0x01\n        /* \"staking.sol\":4951:4978  isLevel1[_msgSender] = true */\n      or\n      swap1\n      sstore\n        /* \"staking.sol\":5016:5202  _user ({... */\n      dup2\n      mload\n      0x60\n      dup2\n      add\n      dup4\n      mstore\n      dup5\n      dup2\n      mstore\n        /* \"staking.sol\":5078:5093  block.timestamp */\n      timestamp\n        /* \"staking.sol\":5016:5202  _user ({... */\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap2\n      dup3\n      add\n      swap1\n        /* \"staking.sol\":5170:5191  block.timestamp + 800 */\n      tag_178\n      swap1\n        /* \"staking.sol\":5188:5191  800 */\n      0x0320\n        /* \"staking.sol\":5170:5191  block.timestamp + 800 */\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"staking.sol\":5016:5202  _user ({... */\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4988:5013  level1Balance[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4988:5001  level1Balance */\n      0x0e\n        /* \"staking.sol\":4988:5013  level1Balance[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":4988:5202  level1Balance[_msgSender] = _user ({... */\n      dup4\n      mload\n      dup2\n      sstore\n      swap1\n      dup4\n      add\n      mload\n      0x01\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      swap3\n      swap1\n      swap2\n      add\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      sstore\n        /* \"staking.sol\":5222:5298  deposit (_msgSender, 1, _amount, block.timestamp, block.timestamp + 30 days) */\n      0x17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f23\n      swap1\n        /* \"staking.sol\":5002:5012  _msgSender */\n      dup3\n      swap1\n        /* \"staking.sol\":5246:5253  _amount */\n      dup5\n        /* \"staking.sol\":5255:5270  block.timestamp */\n      timestamp\n        /* \"staking.sol\":5272:5297  block.timestamp + 30 days */\n      tag_180\n        /* \"staking.sol\":5255:5270  block.timestamp */\n      dup2\n        /* \"staking.sol\":5290:5297  30 days */\n      0x278d00\n        /* \"staking.sol\":5272:5297  block.timestamp + 30 days */\n      tag_179\n      jump\t// in\n    tag_180:\n        /* \"staking.sol\":5222:5298  deposit (_msgSender, 1, _amount, block.timestamp, block.timestamp + 30 days) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6040:6072   */\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":6022:6073   */\n      dup7\n      mstore\n        /* \"#utility.yul\":6121:6125   */\n      0xff\n        /* \"#utility.yul\":6109:6126   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":6104:6106   */\n      0x20\n        /* \"#utility.yul\":6089:6107   */\n      dup7\n      add\n        /* \"#utility.yul\":6082:6127   */\n      mstore\n        /* \"#utility.yul\":6143:6161   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":6136:6170   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6201:6203   */\n      0x60\n        /* \"#utility.yul\":6186:6204   */\n      dup4\n      add\n        /* \"#utility.yul\":6179:6213   */\n      mstore\n        /* \"#utility.yul\":6244:6247   */\n      0x80\n        /* \"#utility.yul\":6229:6248   */\n      dup3\n      add\n        /* \"#utility.yul\":6222:6257   */\n      mstore\n        /* \"#utility.yul\":6009:6012   */\n      0xa0\n        /* \"#utility.yul\":5994:6013   */\n      add\n        /* \"staking.sol\":5222:5298  deposit (_msgSender, 1, _amount, block.timestamp, block.timestamp + 30 days) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":4623:5305  {... */\n      pop\n        /* \"staking.sol\":4563:5305  function enterLevel1 (uint256 _amount) public whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":2714:2778  function unpause () public onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_189\n      jump\t// in\n    tag_187:\n        /* \"staking.sol\":2761:2771  _unpause() */\n      tag_191\n        /* \"staking.sol\":2761:2769  _unpause */\n      tag_192\n        /* \"staking.sol\":2761:2771  _unpause() */\n      jump\t// in\n    tag_191:\n        /* \"staking.sol\":2714:2778  function unpause () public onlyOwner {... */\n      jump\t// out\n        /* \"staking.sol\":10487:11423  function withdrawVip (uint256 _amount) public  {... */\n    tag_85:\n        /* \"staking.sol\":10565:10575  msg.sender */\n      caller\n        /* \"staking.sol\":10544:10562  address _msgSender */\n      0x00\n        /* \"staking.sol\":10593:10610  isVip[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":10593:10598  isVip */\n      0x0f\n        /* \"staking.sol\":10593:10610  isVip[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"staking.sol\":10585:10630  require(isVip[_msgSender], \"User is not Vip\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6831:6833   */\n      0x20\n        /* \"staking.sol\":10585:10630  require(isVip[_msgSender], \"User is not Vip\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6813:6834   */\n      mstore\n        /* \"#utility.yul\":6870:6872   */\n      0x0f\n        /* \"#utility.yul\":6850:6868   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6843:6873   */\n      mstore\n      shl(0x8c, 0x055736572206973206e6f742056697)\n        /* \"#utility.yul\":6889:6907   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6882:6927   */\n      mstore\n        /* \"#utility.yul\":6944:6962   */\n      0x64\n      add\n        /* \"staking.sol\":10585:10630  require(isVip[_msgSender], \"User is not Vip\") */\n      tag_162\n        /* \"#utility.yul\":6629:6968   */\n      jump\n        /* \"staking.sol\":10585:10630  require(isVip[_msgSender], \"User is not Vip\") */\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":10663:10685  vipBalance[_msgSender] */\n      dup2\n      and\n        /* \"staking.sol\":10645:10660  uint256 balance */\n      0x00\n        /* \"staking.sol\":10663:10685  vipBalance[_msgSender] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":10663:10673  vipBalance */\n      0x10\n        /* \"staking.sol\":10663:10685  vipBalance[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":10663:10693  vipBalance[_msgSender].balance */\n      sload\n        /* \"staking.sol\":10711:10729  balance >= _amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"staking.sol\":10703:10764  require(balance >= _amount, \"Not enough balance to withdraw\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_200\n      jump\t// in\n    tag_198:\n        /* \"staking.sol\":10775:10789  bool _isOnTime */\n      0x00\n        /* \"staking.sol\":10792:10815  isOnTime(_msgSender, 2) */\n      tag_201\n        /* \"staking.sol\":10801:10811  _msgSender */\n      dup4\n        /* \"staking.sol\":10813:10814  2 */\n      0x02\n        /* \"staking.sol\":10792:10800  isOnTime */\n      tag_154\n        /* \"staking.sol\":10792:10815  isOnTime(_msgSender, 2) */\n      jump\t// in\n    tag_201:\n        /* \"staking.sol\":10775:10815  bool _isOnTime = isOnTime(_msgSender, 2) */\n      swap1\n      pop\n        /* \"staking.sol\":10825:10841  uint256 earnings */\n      0x00\n        /* \"staking.sol\":10844:10879  getInterest(_msgSender, 2, _amount) */\n      tag_202\n        /* \"staking.sol\":10856:10866  _msgSender */\n      dup5\n        /* \"staking.sol\":10868:10869  2 */\n      0x02\n        /* \"staking.sol\":10871:10878  _amount */\n      dup8\n        /* \"staking.sol\":10844:10855  getInterest */\n      tag_94\n        /* \"staking.sol\":10844:10879  getInterest(_msgSender, 2, _amount) */\n      jump\t// in\n    tag_202:\n        /* \"staking.sol\":10825:10879  uint256 earnings = getInterest(_msgSender, 2, _amount) */\n      swap1\n      pop\n        /* \"staking.sol\":10904:10911  balance */\n      dup3\n        /* \"staking.sol\":10893:10900  _amount */\n      dup6\n        /* \"staking.sol\":10893:10911  _amount == balance */\n      eq\n        /* \"staking.sol\":10890:11082  if(_amount == balance){... */\n      iszero\n      tag_203\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":10933:10955  vipBalance[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":10933:10943  vipBalance */\n      0x10\n        /* \"staking.sol\":10933:10955  vipBalance[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":10926:10955  delete vipBalance[_msgSender] */\n      dup4\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup5\n      swap1\n      sstore\n      0x02\n      add\n      dup4\n      swap1\n      sstore\n        /* \"staking.sol\":10974:10979  isVip */\n      0x0f\n        /* \"staking.sol\":10974:10991  isVip[_msgSender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":10974:10999  isVip[_msgSender] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"staking.sol\":10890:11082  if(_amount == balance){... */\n      jump(tag_204)\n    tag_203:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":11030:11052  vipBalance[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":11030:11040  vipBalance */\n      0x10\n        /* \"staking.sol\":11030:11052  vipBalance[_msgSender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"staking.sol\":11030:11071  vipBalance[_msgSender].balance -= _amount */\n      dup1\n      sload\n        /* \"staking.sol\":11064:11071  _amount */\n      dup8\n      swap3\n        /* \"staking.sol\":11030:11052  vipBalance[_msgSender] */\n      swap1\n        /* \"staking.sol\":11030:11071  vipBalance[_msgSender].balance -= _amount */\n      tag_205\n      swap1\n        /* \"staking.sol\":11064:11071  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":11030:11071  vipBalance[_msgSender].balance -= _amount */\n      tag_206\n      jump\t// in\n    tag_205:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":10890:11082  if(_amount == balance){... */\n    tag_204:\n        /* \"staking.sol\":11095:11104  _isOnTime */\n      dup2\n        /* \"staking.sol\":11092:11348  if(_isOnTime){... */\n      iszero\n      tag_207\n      jumpi\n        /* \"staking.sol\":11119:11132  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":11119:11162  acceptedToken.transfer(_msgSender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7654:7686   */\n      dup7\n      dup2\n      and\n        /* \"staking.sol\":11119:11162  acceptedToken.transfer(_msgSender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7636:7687   */\n      mstore\n        /* \"#utility.yul\":7703:7721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7696:7730   */\n      dup9\n      swap1\n      mstore\n        /* \"staking.sol\":11119:11132  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":11119:11141  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7609:7627   */\n      0x44\n      add\n        /* \"staking.sol\":11119:11162  acceptedToken.transfer(_msgSender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_212\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_212:\n      pop\n        /* \"staking.sol\":11177:11215  swapTokensForEth(earnings, _msgSender) */\n      tag_213\n        /* \"staking.sol\":11194:11202  earnings */\n      dup2\n        /* \"staking.sol\":11204:11214  _msgSender */\n      dup6\n        /* \"staking.sol\":11177:11193  swapTokensForEth */\n      tag_214\n        /* \"staking.sol\":11177:11215  swapTokensForEth(earnings, _msgSender) */\n      jump\t// in\n    tag_213:\n        /* \"staking.sol\":11092:11348  if(_isOnTime){... */\n      jump(tag_215)\n    tag_207:\n      pop\n        /* \"staking.sol\":11283:11296  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":11283:11326  acceptedToken.transfer(_msgSender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7654:7686   */\n      dup6\n      dup2\n      and\n        /* \"staking.sol\":11283:11326  acceptedToken.transfer(_msgSender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7636:7687   */\n      mstore\n        /* \"#utility.yul\":7703:7721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7696:7730   */\n      dup8\n      swap1\n      mstore\n        /* \"staking.sol\":11257:11258  0 */\n      0x00\n      swap3\n        /* \"staking.sol\":11283:11296  acceptedToken */\n      and\n      swap1\n        /* \"staking.sol\":11283:11305  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7609:7627   */\n      0x44\n      add\n        /* \"staking.sol\":11283:11326  acceptedToken.transfer(_msgSender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_219:\n      pop\n        /* \"staking.sol\":11092:11348  if(_isOnTime){... */\n    tag_215:\n        /* \"staking.sol\":11363:11416  withdraw(_msgSender, 2, _isOnTime, _amount, earnings) */\n      0xa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b\n        /* \"staking.sol\":11372:11382  _msgSender */\n      dup5\n        /* \"staking.sol\":11384:11385  2 */\n      0x02\n        /* \"staking.sol\":11387:11396  _isOnTime */\n      dup5\n        /* \"staking.sol\":11398:11405  _amount */\n      dup9\n        /* \"staking.sol\":11407:11415  earnings */\n      dup6\n        /* \"staking.sol\":11363:11416  withdraw(_msgSender, 2, _isOnTime, _amount, earnings) */\n      mload(0x40)\n      tag_220\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"staking.sol\":10534:11423  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"staking.sol\":10487:11423  function withdrawVip (uint256 _amount) public  {... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":7031:7717  function getInterest (address user, uint8 class, uint256 balance) public view returns (uint256){... */\n    tag_94:\n        /* \"staking.sol\":7118:7125  uint256 */\n      0x00\n        /* \"staking.sol\":7139:7149  class == 0 */\n      0xff\n      dup4\n      and\n        /* \"staking.sol\":7136:7711  if(class == 0){           ... */\n      tag_223\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":7198:7217  level0Balance[user] */\n      dup5\n      and\n        /* \"staking.sol\":7175:7195  uint256 _timeStarted */\n      0x00\n        /* \"staking.sol\":7198:7217  level0Balance[user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":7198:7211  level0Balance */\n      0x0c\n        /* \"staking.sol\":7198:7217  level0Balance[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":7198:7229  level0Balance[user].timeStarted */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":7291:7300  level0APY */\n      sload(0x02)\n        /* \"staking.sol\":7251:7301  calculateInterest(balance,_timeStarted, level0APY) */\n      tag_224\n      swap1\n        /* \"staking.sol\":7269:7276  balance */\n      dup5\n      swap1\n        /* \"staking.sol\":7198:7229  level0Balance[user].timeStarted */\n      dup4\n      swap1\n        /* \"staking.sol\":7251:7268  calculateInterest */\n      tag_225\n        /* \"staking.sol\":7251:7301  calculateInterest(balance,_timeStarted, level0APY) */\n      jump\t// in\n    tag_224:\n        /* \"staking.sol\":7244:7301  return calculateInterest(balance,_timeStarted, level0APY) */\n      swap2\n      pop\n      pop\n      jump(tag_232)\n        /* \"staking.sol\":7136:7711  if(class == 0){           ... */\n    tag_223:\n        /* \"staking.sol\":7322:7327  class */\n      dup3\n        /* \"staking.sol\":7322:7332  class == 1 */\n      0xff\n      and\n        /* \"staking.sol\":7331:7332  1 */\n      0x01\n        /* \"staking.sol\":7322:7332  class == 1 */\n      eq\n        /* \"staking.sol\":7318:7711  if (class == 1){      ... */\n      iszero\n      tag_227\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":7376:7395  level1Balance[user] */\n      dup5\n      and\n        /* \"staking.sol\":7353:7373  uint256 _timeStarted */\n      0x00\n        /* \"staking.sol\":7376:7395  level1Balance[user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":7376:7389  level1Balance */\n      0x0e\n        /* \"staking.sol\":7376:7395  level1Balance[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":7376:7407  level1Balance[user].timeStarted */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":7469:7478  level1APY */\n      sload(0x03)\n        /* \"staking.sol\":7429:7479  calculateInterest(balance,_timeStarted, level1APY) */\n      tag_224\n      swap1\n        /* \"staking.sol\":7447:7454  balance */\n      dup5\n      swap1\n        /* \"staking.sol\":7376:7407  level1Balance[user].timeStarted */\n      dup4\n      swap1\n        /* \"staking.sol\":7429:7446  calculateInterest */\n      tag_225\n        /* \"staking.sol\":7429:7479  calculateInterest(balance,_timeStarted, level1APY) */\n      jump\t// in\n        /* \"staking.sol\":7318:7711  if (class == 1){      ... */\n    tag_227:\n        /* \"staking.sol\":7500:7505  class */\n      dup3\n        /* \"staking.sol\":7500:7510  class == 2 */\n      0xff\n      and\n        /* \"staking.sol\":7509:7510  2 */\n      0x02\n        /* \"staking.sol\":7500:7510  class == 2 */\n      eq\n        /* \"staking.sol\":7496:7711  if (class == 2){           ... */\n      iszero\n      tag_230\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":7559:7575  vipBalance[user] */\n      dup5\n      and\n        /* \"staking.sol\":7536:7556  uint256 _timeStarted */\n      0x00\n        /* \"staking.sol\":7559:7575  vipBalance[user] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":7559:7569  vipBalance */\n      0x10\n        /* \"staking.sol\":7559:7575  vipBalance[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":7559:7587  vipBalance[user].timeStarted */\n      0x01\n      add\n      sload\n        /* \"staking.sol\":7649:7660  vipLevelAPY */\n      sload(0x04)\n        /* \"staking.sol\":7609:7661  calculateInterest(balance,_timeStarted, vipLevelAPY) */\n      tag_224\n      swap1\n        /* \"staking.sol\":7627:7634  balance */\n      dup5\n      swap1\n        /* \"staking.sol\":7559:7587  vipBalance[user].timeStarted */\n      dup4\n      swap1\n        /* \"staking.sol\":7609:7626  calculateInterest */\n      tag_225\n        /* \"staking.sol\":7609:7661  calculateInterest(balance,_timeStarted, vipLevelAPY) */\n      jump\t// in\n        /* \"staking.sol\":7496:7711  if (class == 2){           ... */\n    tag_230:\n      pop\n        /* \"staking.sol\":7699:7700  0 */\n      0x00\n        /* \"staking.sol\":7496:7711  if (class == 2){           ... */\n    tag_232:\n        /* \"staking.sol\":7031:7717  function getInterest (address user, uint8 class, uint256 balance) public view returns (uint256){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1668:1769  function renounceOwnership() public virtual onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_189\n      jump\t// in\n    tag_236:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1759:1760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1750  _transferOwnership */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1732:1762  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"staking.sol\":2644:2704  function pause () public onlyOwner {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_189\n      jump\t// in\n    tag_244:\n        /* \"staking.sol\":2689:2697  _pause() */\n      tag_191\n        /* \"staking.sol\":2689:2695  _pause */\n      tag_248\n        /* \"staking.sol\":2689:2697  _pause() */\n      jump\t// in\n        /* \"staking.sol\":8245:9215  function withdrawLevel0 (uint256 _amount) public  {... */\n    tag_126:\n        /* \"staking.sol\":8326:8336  msg.sender */\n      caller\n        /* \"staking.sol\":8305:8323  address _msgSender */\n      0x00\n        /* \"staking.sol\":8354:8374  isLevel0[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":8354:8362  isLevel0 */\n      0x0b\n        /* \"staking.sol\":8354:8374  isLevel0[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"staking.sol\":8346:8401  require(isLevel0[_msgSender], \"User is not on Level 0\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8464:8466   */\n      0x20\n        /* \"staking.sol\":8346:8401  require(isLevel0[_msgSender], \"User is not on Level 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8446:8467   */\n      mstore\n        /* \"#utility.yul\":8503:8505   */\n      0x16\n        /* \"#utility.yul\":8483:8501   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8476:8506   */\n      mstore\n      shl(0x54, 0x055736572206973206e6f74206f6e204c6576656c203)\n        /* \"#utility.yul\":8522:8540   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8515:8567   */\n      mstore\n        /* \"#utility.yul\":8584:8602   */\n      0x64\n      add\n        /* \"staking.sol\":8346:8401  require(isLevel0[_msgSender], \"User is not on Level 0\") */\n      tag_162\n        /* \"#utility.yul\":8262:8608   */\n      jump\n        /* \"staking.sol\":8346:8401  require(isLevel0[_msgSender], \"User is not on Level 0\") */\n    tag_251:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":8430:8455  level0Balance[_msgSender] */\n      dup2\n      and\n        /* \"staking.sol\":8412:8427  uint256 balance */\n      0x00\n        /* \"staking.sol\":8430:8455  level0Balance[_msgSender] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":8430:8443  level0Balance */\n      0x0c\n        /* \"staking.sol\":8430:8455  level0Balance[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":8430:8463  level0Balance[_msgSender].balance */\n      sload\n        /* \"staking.sol\":8481:8499  balance >= _amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"staking.sol\":8473:8534  require(balance >= _amount, \"Not enough balance to withdraw\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_200\n      jump\t// in\n    tag_254:\n        /* \"staking.sol\":8545:8559  bool _isOnTime */\n      0x00\n        /* \"staking.sol\":8562:8585  isOnTime(_msgSender, 0) */\n      tag_256\n        /* \"staking.sol\":8571:8581  _msgSender */\n      dup4\n        /* \"staking.sol\":8583:8584  0 */\n      0x00\n        /* \"staking.sol\":8562:8570  isOnTime */\n      tag_154\n        /* \"staking.sol\":8562:8585  isOnTime(_msgSender, 0) */\n      jump\t// in\n    tag_256:\n        /* \"staking.sol\":8545:8585  bool _isOnTime = isOnTime(_msgSender, 0) */\n      swap1\n      pop\n        /* \"staking.sol\":8595:8611  uint256 earnings */\n      0x00\n        /* \"staking.sol\":8614:8649  getInterest(_msgSender, 0, _amount) */\n      tag_257\n        /* \"staking.sol\":8626:8636  _msgSender */\n      dup5\n        /* \"staking.sol\":8638:8639  0 */\n      0x00\n        /* \"staking.sol\":8641:8648  _amount */\n      dup8\n        /* \"staking.sol\":8614:8625  getInterest */\n      tag_94\n        /* \"staking.sol\":8614:8649  getInterest(_msgSender, 0, _amount) */\n      jump\t// in\n    tag_257:\n        /* \"staking.sol\":8595:8649  uint256 earnings = getInterest(_msgSender, 0, _amount) */\n      swap1\n      pop\n        /* \"staking.sol\":8674:8681  balance */\n      dup3\n        /* \"staking.sol\":8663:8670  _amount */\n      dup6\n        /* \"staking.sol\":8663:8681  _amount == balance */\n      eq\n        /* \"staking.sol\":8660:8862  if(_amount == balance){... */\n      iszero\n      tag_258\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":8703:8728  level0Balance[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":8703:8716  level0Balance */\n      0x0c\n        /* \"staking.sol\":8703:8728  level0Balance[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":8696:8728  delete level0Balance[_msgSender] */\n      dup4\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup5\n      swap1\n      sstore\n      0x02\n      add\n      dup4\n      swap1\n      sstore\n        /* \"staking.sol\":8748:8756  isLevel0 */\n      0x0b\n        /* \"staking.sol\":8748:8768  isLevel0[_msgSender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":8748:8776  isLevel0[_msgSender] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"staking.sol\":8660:8862  if(_amount == balance){... */\n      jump(tag_259)\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":8807:8832  level0Balance[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":8807:8820  level0Balance */\n      0x0c\n        /* \"staking.sol\":8807:8832  level0Balance[_msgSender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"staking.sol\":8807:8851  level0Balance[_msgSender].balance -= _amount */\n      dup1\n      sload\n        /* \"staking.sol\":8844:8851  _amount */\n      dup8\n      swap3\n        /* \"staking.sol\":8807:8832  level0Balance[_msgSender] */\n      swap1\n        /* \"staking.sol\":8807:8851  level0Balance[_msgSender].balance -= _amount */\n      tag_260\n      swap1\n        /* \"staking.sol\":8844:8851  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":8807:8851  level0Balance[_msgSender].balance -= _amount */\n      tag_206\n      jump\t// in\n    tag_260:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":8660:8862  if(_amount == balance){... */\n    tag_259:\n        /* \"staking.sol\":8875:8884  _isOnTime */\n      dup2\n        /* \"staking.sol\":8872:9136  if(_isOnTime){... */\n      iszero\n      tag_261\n      jumpi\n        /* \"staking.sol\":8899:8912  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":8899:8942  acceptedToken.transfer(_msgSender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7654:7686   */\n      dup7\n      dup2\n      and\n        /* \"staking.sol\":8899:8942  acceptedToken.transfer(_msgSender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7636:7687   */\n      mstore\n        /* \"#utility.yul\":7703:7721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7696:7730   */\n      dup9\n      swap1\n      mstore\n        /* \"staking.sol\":8899:8912  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":8899:8921  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7609:7627   */\n      0x44\n      add\n        /* \"staking.sol\":8899:8942  acceptedToken.transfer(_msgSender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_264\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_264:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_265\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_265:\n      pop\n        /* \"staking.sol\":8969:9007  swapTokensForEth(earnings, _msgSender) */\n      tag_266\n        /* \"staking.sol\":8986:8994  earnings */\n      dup2\n        /* \"staking.sol\":8996:9006  _msgSender */\n      dup6\n        /* \"staking.sol\":8969:8985  swapTokensForEth */\n      tag_214\n        /* \"staking.sol\":8969:9007  swapTokensForEth(earnings, _msgSender) */\n      jump\t// in\n    tag_266:\n        /* \"staking.sol\":8872:9136  if(_isOnTime){... */\n      jump(tag_267)\n    tag_261:\n      pop\n        /* \"staking.sol\":9071:9084  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":9071:9114  acceptedToken.transfer(_msgSender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7654:7686   */\n      dup6\n      dup2\n      and\n        /* \"staking.sol\":9071:9114  acceptedToken.transfer(_msgSender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7636:7687   */\n      mstore\n        /* \"#utility.yul\":7703:7721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7696:7730   */\n      dup8\n      swap1\n      mstore\n        /* \"staking.sol\":9049:9050  0 */\n      0x00\n      swap3\n        /* \"staking.sol\":9071:9084  acceptedToken */\n      and\n      swap1\n        /* \"staking.sol\":9071:9093  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7609:7627   */\n      0x44\n      add\n        /* \"staking.sol\":9071:9114  acceptedToken.transfer(_msgSender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_271:\n      pop\n        /* \"staking.sol\":8872:9136  if(_isOnTime){... */\n    tag_267:\n        /* \"staking.sol\":9155:9208  withdraw(_msgSender, 0, _isOnTime, _amount, earnings) */\n      0xa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b\n        /* \"staking.sol\":9164:9174  _msgSender */\n      dup5\n        /* \"staking.sol\":9176:9177  0 */\n      0x00\n        /* \"staking.sol\":9179:9188  _isOnTime */\n      dup5\n        /* \"staking.sol\":9190:9197  _amount */\n      dup9\n        /* \"staking.sol\":9199:9207  earnings */\n      dup6\n        /* \"staking.sol\":9155:9208  withdraw(_msgSender, 0, _isOnTime, _amount, earnings) */\n      mload(0x40)\n      tag_220\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n        /* \"staking.sol\":9373:10329  function withdrawLevel1 (uint256 _amount) public  {... */\n    tag_133:\n        /* \"staking.sol\":9454:9464  msg.sender */\n      caller\n        /* \"staking.sol\":9433:9451  address _msgSender */\n      0x00\n        /* \"staking.sol\":9482:9502  isLevel1[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":9482:9490  isLevel1 */\n      0x0d\n        /* \"staking.sol\":9482:9502  isLevel1[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"staking.sol\":9474:9529  require(isLevel1[_msgSender], \"User is not on Level 1\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9336:9338   */\n      0x20\n        /* \"staking.sol\":9474:9529  require(isLevel1[_msgSender], \"User is not on Level 1\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9318:9339   */\n      mstore\n        /* \"#utility.yul\":9375:9377   */\n      0x16\n        /* \"#utility.yul\":9355:9373   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9348:9378   */\n      mstore\n      shl(0x50, 0x55736572206973206e6f74206f6e204c6576656c2031)\n        /* \"#utility.yul\":9394:9412   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9387:9439   */\n      mstore\n        /* \"#utility.yul\":9456:9474   */\n      0x64\n      add\n        /* \"staking.sol\":9474:9529  require(isLevel1[_msgSender], \"User is not on Level 1\") */\n      tag_162\n        /* \"#utility.yul\":9134:9480   */\n      jump\n        /* \"staking.sol\":9474:9529  require(isLevel1[_msgSender], \"User is not on Level 1\") */\n    tag_275:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":9558:9583  level1Balance[_msgSender] */\n      dup2\n      and\n        /* \"staking.sol\":9540:9555  uint256 balance */\n      0x00\n        /* \"staking.sol\":9558:9583  level1Balance[_msgSender] */\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":9558:9571  level1Balance */\n      0x0e\n        /* \"staking.sol\":9558:9583  level1Balance[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":9558:9591  level1Balance[_msgSender].balance */\n      sload\n        /* \"staking.sol\":9609:9627  balance >= _amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"staking.sol\":9601:9662  require(balance >= _amount, \"Not enough balance to withdraw\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_200\n      jump\t// in\n    tag_278:\n        /* \"staking.sol\":9673:9687  bool _isOnTime */\n      0x00\n        /* \"staking.sol\":9690:9713  isOnTime(_msgSender, 1) */\n      tag_280\n        /* \"staking.sol\":9699:9709  _msgSender */\n      dup4\n        /* \"staking.sol\":9711:9712  1 */\n      0x01\n        /* \"staking.sol\":9690:9698  isOnTime */\n      tag_154\n        /* \"staking.sol\":9690:9713  isOnTime(_msgSender, 1) */\n      jump\t// in\n    tag_280:\n        /* \"staking.sol\":9673:9713  bool _isOnTime = isOnTime(_msgSender, 1) */\n      swap1\n      pop\n        /* \"staking.sol\":9723:9739  uint256 earnings */\n      0x00\n        /* \"staking.sol\":9742:9777  getInterest(_msgSender, 1, _amount) */\n      tag_281\n        /* \"staking.sol\":9754:9764  _msgSender */\n      dup5\n        /* \"staking.sol\":9766:9767  1 */\n      0x01\n        /* \"staking.sol\":9769:9776  _amount */\n      dup8\n        /* \"staking.sol\":9742:9753  getInterest */\n      tag_94\n        /* \"staking.sol\":9742:9777  getInterest(_msgSender, 1, _amount) */\n      jump\t// in\n    tag_281:\n        /* \"staking.sol\":9723:9777  uint256 earnings = getInterest(_msgSender, 1, _amount) */\n      swap1\n      pop\n        /* \"staking.sol\":9802:9809  balance */\n      dup3\n        /* \"staking.sol\":9791:9798  _amount */\n      dup6\n        /* \"staking.sol\":9791:9809  _amount == balance */\n      eq\n        /* \"staking.sol\":9788:9990  if(_amount == balance){... */\n      iszero\n      tag_282\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":9831:9856  level1Balance[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":9831:9844  level1Balance */\n      0x0e\n        /* \"staking.sol\":9831:9856  level1Balance[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":9824:9856  delete level1Balance[_msgSender] */\n      dup4\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup5\n      swap1\n      sstore\n      0x02\n      add\n      dup4\n      swap1\n      sstore\n        /* \"staking.sol\":9876:9884  isLevel1 */\n      0x0d\n        /* \"staking.sol\":9876:9896  isLevel1[_msgSender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"staking.sol\":9876:9904  isLevel1[_msgSender] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"staking.sol\":9788:9990  if(_amount == balance){... */\n      jump(tag_283)\n    tag_282:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":9935:9960  level1Balance[_msgSender] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":9935:9948  level1Balance */\n      0x0e\n        /* \"staking.sol\":9935:9960  level1Balance[_msgSender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"staking.sol\":9935:9979  level1Balance[_msgSender].balance -= _amount */\n      dup1\n      sload\n        /* \"staking.sol\":9972:9979  _amount */\n      dup8\n      swap3\n        /* \"staking.sol\":9935:9960  level1Balance[_msgSender] */\n      swap1\n        /* \"staking.sol\":9935:9979  level1Balance[_msgSender].balance -= _amount */\n      tag_284\n      swap1\n        /* \"staking.sol\":9972:9979  _amount */\n      dup5\n      swap1\n        /* \"staking.sol\":9935:9979  level1Balance[_msgSender].balance -= _amount */\n      tag_206\n      jump\t// in\n    tag_284:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"staking.sol\":9788:9990  if(_amount == balance){... */\n    tag_283:\n        /* \"staking.sol\":10003:10012  _isOnTime */\n      dup2\n        /* \"staking.sol\":10000:10254  if(_isOnTime){... */\n      iszero\n      tag_285\n      jumpi\n        /* \"staking.sol\":10027:10040  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":10027:10070  acceptedToken.transfer(_msgSender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7654:7686   */\n      dup7\n      dup2\n      and\n        /* \"staking.sol\":10027:10070  acceptedToken.transfer(_msgSender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7636:7687   */\n      mstore\n        /* \"#utility.yul\":7703:7721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7696:7730   */\n      dup9\n      swap1\n      mstore\n        /* \"staking.sol\":10027:10040  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":10027:10049  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7609:7627   */\n      0x44\n      add\n        /* \"staking.sol\":10027:10070  acceptedToken.transfer(_msgSender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_288:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_289\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_289:\n      pop\n        /* \"staking.sol\":10085:10123  swapTokensForEth(earnings, _msgSender) */\n      tag_290\n        /* \"staking.sol\":10102:10110  earnings */\n      dup2\n        /* \"staking.sol\":10112:10122  _msgSender */\n      dup6\n        /* \"staking.sol\":10085:10101  swapTokensForEth */\n      tag_214\n        /* \"staking.sol\":10085:10123  swapTokensForEth(earnings, _msgSender) */\n      jump\t// in\n    tag_290:\n        /* \"staking.sol\":10000:10254  if(_isOnTime){... */\n      jump(tag_291)\n    tag_285:\n      pop\n        /* \"staking.sol\":10189:10202  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":10189:10232  acceptedToken.transfer(_msgSender, _amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7654:7686   */\n      dup6\n      dup2\n      and\n        /* \"staking.sol\":10189:10232  acceptedToken.transfer(_msgSender, _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7636:7687   */\n      mstore\n        /* \"#utility.yul\":7703:7721   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7696:7730   */\n      dup8\n      swap1\n      mstore\n        /* \"staking.sol\":10165:10166  0 */\n      0x00\n      swap3\n        /* \"staking.sol\":10189:10202  acceptedToken */\n      and\n      swap1\n        /* \"staking.sol\":10189:10211  acceptedToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7609:7627   */\n      0x44\n      add\n        /* \"staking.sol\":10189:10232  acceptedToken.transfer(_msgSender, _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_294\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_294:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_295\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_295:\n      pop\n        /* \"staking.sol\":10000:10254  if(_isOnTime){... */\n    tag_291:\n        /* \"staking.sol\":10269:10322  withdraw(_msgSender, 1, _isOnTime, _amount, earnings) */\n      0xa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b\n        /* \"staking.sol\":10278:10288  _msgSender */\n      dup5\n        /* \"staking.sol\":10290:10291  1 */\n      0x01\n        /* \"staking.sol\":10293:10302  _isOnTime */\n      dup5\n        /* \"staking.sol\":10304:10311  _amount */\n      dup9\n        /* \"staking.sol\":10313:10321  earnings */\n      dup6\n        /* \"staking.sol\":10269:10322  withdraw(_msgSender, 1, _isOnTime, _amount, earnings) */\n      mload(0x40)\n      tag_220\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n        /* \"staking.sol\":5504:6252  function enterVip (uint256 _amount) public whenNotPaused {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_300:\n        /* \"staking.sol\":5590:5601  levelVipMax */\n      sload(0x0a)\n        /* \"staking.sol\":5579:5586  _amount */\n      dup2\n        /* \"staking.sol\":5579:5601  _amount <= levelVipMax */\n      gt\n      iszero\n        /* \"staking.sol\":5579:5627  _amount <= levelVipMax && _amount >= levelVipMin */\n      dup1\n      iszero\n      tag_303\n      jumpi\n      pop\n        /* \"staking.sol\":5616:5627  levelVipMin */\n      sload(0x09)\n        /* \"staking.sol\":5605:5612  _amount */\n      dup2\n        /* \"staking.sol\":5605:5627  _amount >= levelVipMin */\n      lt\n      iszero\n        /* \"staking.sol\":5579:5627  _amount <= levelVipMax && _amount >= levelVipMin */\n    tag_303:\n        /* \"staking.sol\":5571:5682  require(_amount <= levelVipMax && _amount >= levelVipMin, \"Amount needs to be more than min and less than max\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_168\n      jump\t// in\n    tag_304:\n        /* \"staking.sol\":5713:5723  msg.sender */\n      caller\n        /* \"staking.sol\":5692:5710  address _msgSender */\n      0x00\n        /* \"staking.sol\":5755:5772  isVip[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":5755:5760  isVip */\n      0x0f\n        /* \"staking.sol\":5755:5772  isVip[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"staking.sol\":5754:5772  !isVip[_msgSender] */\n      iszero\n        /* \"staking.sol\":5746:5808  require(!isVip[_msgSender], \"You're already in the Vip Stake\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10208:10210   */\n      0x20\n        /* \"staking.sol\":5746:5808  require(!isVip[_msgSender], \"You're already in the Vip Stake\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10190:10211   */\n      mstore\n        /* \"#utility.yul\":10247:10249   */\n      0x1f\n        /* \"#utility.yul\":10227:10245   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10220:10250   */\n      mstore\n        /* \"#utility.yul\":10286:10319   */\n      0x596f7527726520616c726561647920696e2074686520566970205374616b6500\n        /* \"#utility.yul\":10266:10284   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10259:10320   */\n      mstore\n        /* \"#utility.yul\":10337:10355   */\n      0x64\n      add\n        /* \"staking.sol\":5746:5808  require(!isVip[_msgSender], \"You're already in the Vip Stake\") */\n      tag_162\n        /* \"#utility.yul\":10006:10361   */\n      jump\n        /* \"staking.sol\":5746:5808  require(!isVip[_msgSender], \"You're already in the Vip Stake\") */\n    tag_306:\n        /* \"staking.sol\":5827:5840  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":5827:5889  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5088:5103   */\n      dup4\n      dup2\n      and\n        /* \"staking.sol\":5827:5889  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5070:5104   */\n      mstore\n        /* \"staking.sol\":5874:5878  this */\n      address\n        /* \"#utility.yul\":5120:5138   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5113:5156   */\n      mstore\n        /* \"#utility.yul\":5172:5190   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5165:5199   */\n      dup6\n      swap1\n      mstore\n        /* \"staking.sol\":5827:5840  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":5827:5853  acceptedToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":5005:5023   */\n      0x64\n      add\n        /* \"staking.sol\":5827:5889  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_311:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_312\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_312:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":5900:5917  isVip[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5900:5905  isVip */\n      0x0f\n        /* \"staking.sol\":5900:5917  isVip[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":5900:5924  isVip[_msgSender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"staking.sol\":5920:5924  true */\n      0x01\n        /* \"staking.sol\":5900:5924  isVip[_msgSender] = true */\n      or\n      swap1\n      sstore\n        /* \"staking.sol\":5959:6146  _user ({... */\n      dup2\n      mload\n      0x60\n      dup2\n      add\n      dup4\n      mstore\n      dup5\n      dup2\n      mstore\n        /* \"staking.sol\":6021:6036  block.timestamp */\n      timestamp\n        /* \"staking.sol\":5959:6146  _user ({... */\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap2\n      dup3\n      add\n      swap1\n        /* \"staking.sol\":6113:6135  block.timestamp + 1200 */\n      tag_313\n      swap1\n        /* \"staking.sol\":6131:6135  1200 */\n      0x04b0\n        /* \"staking.sol\":6113:6135  block.timestamp + 1200 */\n      tag_179\n      jump\t// in\n    tag_313:\n        /* \"staking.sol\":5959:6146  _user ({... */\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":5934:5956  vipBalance[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":5934:5944  vipBalance */\n      0x10\n        /* \"staking.sol\":5934:5956  vipBalance[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":5934:6146  vipBalance[_msgSender] = _user ({... */\n      dup4\n      mload\n      dup2\n      sstore\n      swap1\n      dup4\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      swap2\n      add\n      mload\n      0x02\n      swap2\n      dup3\n      add\n      sstore\n        /* \"staking.sol\":6169:6245  deposit (_msgSender, 2, _amount, block.timestamp, block.timestamp + 90 days) */\n      0x17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f23\n      swap1\n        /* \"staking.sol\":5945:5955  _msgSender */\n      dup3\n      swap1\n        /* \"staking.sol\":6193:6200  _amount */\n      dup5\n        /* \"staking.sol\":6202:6217  block.timestamp */\n      timestamp\n        /* \"staking.sol\":6219:6244  block.timestamp + 90 days */\n      tag_180\n        /* \"staking.sol\":6202:6217  block.timestamp */\n      dup2\n        /* \"staking.sol\":6237:6244  90 days */\n      0x76a700\n        /* \"staking.sol\":6219:6244  block.timestamp + 90 days */\n      tag_179\n      jump\t// in\n        /* \"staking.sol\":2846:3054  function setNewAPY ( uint256 _level0APY, uint256 _level1APY, uint256 _vipLevelAPY) external onlyOwner{... */\n    tag_143:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_189\n      jump\t// in\n    tag_320:\n        /* \"staking.sol\":2957:2966  level0APY */\n      0x02\n        /* \"staking.sol\":2957:2979  level0APY = _level0APY */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"staking.sol\":2989:2998  level1APY */\n      0x03\n        /* \"staking.sol\":2989:3011  level1APY = _level1APY */\n      sstore\n        /* \"staking.sol\":3021:3032  vipLevelAPY */\n      0x04\n        /* \"staking.sol\":3021:3047  vipLevelAPY = _vipLevelAPY */\n      sstore\n        /* \"staking.sol\":2846:3054  function setNewAPY ( uint256 _level0APY, uint256 _level1APY, uint256 _vipLevelAPY) external onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_189\n      jump\t// in\n    tag_326:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2006:2028  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_329\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11079:11081   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11061:11082   */\n      mstore\n        /* \"#utility.yul\":11118:11120   */\n      0x26\n        /* \"#utility.yul\":11098:11116   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11091:11121   */\n      mstore\n        /* \"#utility.yul\":11157:11191   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":11137:11155   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11130:11192   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":11208:11226   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11201:11237   */\n      mstore\n        /* \"#utility.yul\":11254:11273   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_162\n        /* \"#utility.yul\":10877:11279   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1998:2071  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_329:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      tag_332\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2100:2108  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2099  _transferOwnership */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2109  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1918:2116  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"staking.sol\":3136:3508  function setNewMaxMin (uint256 _level0Min, uint256 _level0Max, uint256 _level1Min, uint256 _level1Max, uint256 _levelVipMin, uint256 _levelVipMax) external onlyOwner{... */\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1082:1089  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1108:1114  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1248:1271  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1240:1308  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_189\n      jump\t// in\n    tag_336:\n        /* \"staking.sol\":3311:3320  level0Min */\n      0x05\n        /* \"staking.sol\":3311:3333  level0Min = _level0Min */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"staking.sol\":3343:3352  level0Max */\n      0x06\n        /* \"staking.sol\":3343:3365  level0Max = _level0Max */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"staking.sol\":3375:3384  level1Min */\n      0x07\n        /* \"staking.sol\":3375:3397  level1Min = _level1Min */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"staking.sol\":3407:3416  level1Max */\n      0x08\n        /* \"staking.sol\":3407:3429  level1Max = _level1Max */\n      sstore\n        /* \"staking.sol\":3439:3450  levelVipMin */\n      0x09\n        /* \"staking.sol\":3439:3465  levelVipMin = _levelVipMin */\n      sstore\n        /* \"staking.sol\":3475:3486  levelVipMax */\n      0x0a\n        /* \"staking.sol\":3475:3501  levelVipMax = _levelVipMax */\n      sstore\n        /* \"staking.sol\":3136:3508  function setNewMaxMin (uint256 _level0Min, uint256 _level0Max, uint256 _level1Min, uint256 _level1Max, uint256 _levelVipMin, uint256 _levelVipMax) external onlyOwner{... */\n      jump\t// out\n        /* \"staking.sol\":6397:6896  function isOnTime (address user, uint8 class) public view returns (bool) {... */\n    tag_154:\n        /* \"staking.sol\":6464:6468  bool */\n      0x00\n      dup1\n        /* \"staking.sol\":6512:6522  class == 0 */\n      0xff\n      dup4\n      and\n        /* \"staking.sol\":6509:6843  if(class == 0){... */\n      tag_340\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":6551:6570  level0Balance[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":6551:6564  level0Balance */\n      0x0c\n        /* \"staking.sol\":6551:6570  level0Balance[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":6551:6581  level0Balance[user].timeFinish */\n      0x02\n      add\n      sload\n        /* \"staking.sol\":6509:6843  if(class == 0){... */\n      jump(tag_345)\n    tag_340:\n        /* \"staking.sol\":6613:6618  class */\n      dup3\n        /* \"staking.sol\":6613:6623  class == 1 */\n      0xff\n      and\n        /* \"staking.sol\":6622:6623  1 */\n      0x01\n        /* \"staking.sol\":6613:6623  class == 1 */\n      eq\n        /* \"staking.sol\":6609:6843  if (class == 1){... */\n      iszero\n      tag_342\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":6652:6671  level1Balance[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":6652:6665  level1Balance */\n      0x0e\n        /* \"staking.sol\":6652:6671  level1Balance[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":6652:6682  level1Balance[user].timeFinish */\n      0x02\n      add\n      sload\n        /* \"staking.sol\":6609:6843  if (class == 1){... */\n      jump(tag_345)\n    tag_342:\n        /* \"staking.sol\":6712:6717  class */\n      dup3\n        /* \"staking.sol\":6712:6722  class == 2 */\n      0xff\n      and\n        /* \"staking.sol\":6721:6722  2 */\n      0x02\n        /* \"staking.sol\":6712:6722  class == 2 */\n      eq\n        /* \"staking.sol\":6708:6843  if (class == 2){... */\n      iszero\n      tag_344\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":6751:6767  vipBalance[user] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":6751:6761  vipBalance */\n      0x10\n        /* \"staking.sol\":6751:6767  vipBalance[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"staking.sol\":6751:6778  vipBalance[user].timeFinish */\n      0x02\n      add\n      sload\n        /* \"staking.sol\":6708:6843  if (class == 2){... */\n      jump(tag_345)\n    tag_344:\n        /* \"staking.sol\":6827:6832  false */\n      0x00\n        /* \"staking.sol\":6820:6832  return false */\n      swap2\n      pop\n      pop\n      jump(tag_339)\n        /* \"staking.sol\":6708:6843  if (class == 2){... */\n    tag_345:\n        /* \"staking.sol\":6859:6874  block.timestamp */\n      timestamp\n        /* \"staking.sol\":6859:6889  block.timestamp >= releaseTime */\n      lt\n      iszero\n      swap1\n      pop\n        /* \"staking.sol\":6397:6896  function isOnTime (address user, uint8 class) public view returns (bool) {... */\n    tag_339:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":3657:4407  function enterLevel0 (uint256 _amount) public whenNotPaused {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_348:\n        /* \"staking.sol\":3746:3755  level0Max */\n      sload(0x06)\n        /* \"staking.sol\":3735:3742  _amount */\n      dup2\n        /* \"staking.sol\":3735:3755  _amount <= level0Max */\n      gt\n      iszero\n        /* \"staking.sol\":3735:3779  _amount <= level0Max && _amount >= level0Min */\n      dup1\n      iszero\n      tag_351\n      jumpi\n      pop\n        /* \"staking.sol\":3770:3779  level0Min */\n      sload(0x05)\n        /* \"staking.sol\":3759:3766  _amount */\n      dup2\n        /* \"staking.sol\":3759:3779  _amount >= level0Min */\n      lt\n      iszero\n        /* \"staking.sol\":3735:3779  _amount <= level0Max && _amount >= level0Min */\n    tag_351:\n        /* \"staking.sol\":3727:3834  require(_amount <= level0Max && _amount >= level0Min, \"Amount needs to be more than min and less than max\") */\n      tag_352\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_168\n      jump\t// in\n    tag_352:\n        /* \"staking.sol\":3865:3875  msg.sender */\n      caller\n        /* \"staking.sol\":3844:3862  address _msgSender */\n      0x00\n        /* \"staking.sol\":3899:3919  isLevel0[_msgSender] */\n      dup2\n      dup2\n      mstore\n        /* \"staking.sol\":3899:3907  isLevel0 */\n      0x0b\n        /* \"staking.sol\":3899:3919  isLevel0[_msgSender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"staking.sol\":3898:3919  !isLevel0[_msgSender] */\n      iszero\n        /* \"staking.sol\":3890:3958  require(!isLevel0[_msgSender], \"You're already in this Stake level\") */\n      tag_354\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_171\n      jump\t// in\n    tag_354:\n        /* \"staking.sol\":3973:3986  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":3973:4035  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5088:5103   */\n      dup4\n      dup2\n      and\n        /* \"staking.sol\":3973:4035  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":5070:5104   */\n      mstore\n        /* \"staking.sol\":4020:4024  this */\n      address\n        /* \"#utility.yul\":5120:5138   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5113:5156   */\n      mstore\n        /* \"#utility.yul\":5172:5190   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5165:5199   */\n      dup6\n      swap1\n      mstore\n        /* \"staking.sol\":3973:3986  acceptedToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":3973:3999  acceptedToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":5005:5023   */\n      0x64\n      add\n        /* \"staking.sol\":3973:4035  acceptedToken.transferFrom(_msgSender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_358\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_358:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_359\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_359:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4046:4066  isLevel0[_msgSender] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4046:4054  isLevel0 */\n      0x0b\n        /* \"staking.sol\":4046:4066  isLevel0[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"staking.sol\":4046:4073  isLevel0[_msgSender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"staking.sol\":4069:4073  true */\n      0x01\n        /* \"staking.sol\":4046:4073  isLevel0[_msgSender] = true */\n      or\n      swap1\n      sstore\n        /* \"staking.sol\":4111:4300  _user ({... */\n      dup2\n      mload\n      0x60\n      dup2\n      add\n      dup4\n      mstore\n      dup5\n      dup2\n      mstore\n        /* \"staking.sol\":4175:4190  block.timestamp */\n      timestamp\n        /* \"staking.sol\":4111:4300  _user ({... */\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap2\n      dup3\n      add\n      swap1\n        /* \"staking.sol\":4268:4289  block.timestamp + 600 */\n      tag_360\n      swap1\n        /* \"staking.sol\":4286:4289  600 */\n      0x0258\n        /* \"staking.sol\":4268:4289  block.timestamp + 600 */\n      tag_179\n      jump\t// in\n    tag_360:\n        /* \"staking.sol\":4111:4300  _user ({... */\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":4083:4108  level0Balance[_msgSender] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"staking.sol\":4083:4096  level0Balance */\n      0x0c\n        /* \"staking.sol\":4083:4108  level0Balance[_msgSender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"staking.sol\":4083:4300  level0Balance[_msgSender] = _user ({... */\n      dup5\n      mload\n      dup2\n      sstore\n      swap2\n      dup5\n      add\n      mload\n      0x01\n      dup4\n      add\n      sstore\n      swap3\n      swap1\n      swap3\n      add\n      mload\n      0x02\n      swap1\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"staking.sol\":4325:4400  deposit (_msgSender, 0, _amount, block.timestamp, block.timestamp + 7 days) */\n      0x17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f23\n      swap1\n        /* \"staking.sol\":4097:4107  _msgSender */\n      dup3\n      swap1\n        /* \"staking.sol\":4349:4356  _amount */\n      dup5\n        /* \"staking.sol\":4358:4373  block.timestamp */\n      timestamp\n        /* \"staking.sol\":4375:4399  block.timestamp + 7 days */\n      tag_180\n        /* \"staking.sol\":4358:4373  block.timestamp */\n      dup2\n        /* \"staking.sol\":4393:4399  7 days */\n      0x093a80\n        /* \"staking.sol\":4375:4399  block.timestamp + 7 days */\n      tag_179\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_367\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11997:11999   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11979:12000   */\n      mstore\n        /* \"#utility.yul\":12036:12038   */\n      0x14\n        /* \"#utility.yul\":12016:12034   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12009:12039   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":12055:12073   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12048:12098   */\n      mstore\n        /* \"#utility.yul\":12115:12133   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n      tag_162\n        /* \"#utility.yul\":11795:12139   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1669:1710  require(paused(), \"Pausable: not paused\") */\n    tag_367:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2178:2183  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2168:2183  _paused = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2207:2219  _msgSender() */\n    tag_371:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":378:410   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":360:411   */\n      dup2\n      mstore\n        /* \"#utility.yul\":348:350   */\n      0x20\n        /* \"#utility.yul\":333:351   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2198:2220  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2110:2227  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"staking.sol\":11431:12026  function swapTokensForEth(uint256 tokenAmount, address recipient) private {... */\n    tag_214:\n        /* \"staking.sol\":11598:11614  new address[](2) */\n      0x40\n      dup1\n      mload\n        /* \"staking.sol\":11612:11613  2 */\n      0x02\n        /* \"staking.sol\":11598:11614  new address[](2) */\n      dup1\n      dup3\n      mstore\n      0x60\n      dup3\n      add\n      dup4\n      mstore\n        /* \"staking.sol\":11574:11595  address[] memory path */\n      0x00\n      swap3\n        /* \"staking.sol\":11598:11614  new address[](2) */\n      0x20\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n        /* \"staking.sol\":11642:11655  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":11624:11631  path[0] */\n      dup3\n      mload\n      swap3\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":11642:11655  acceptedToken */\n      and\n      swap2\n        /* \"staking.sol\":11624:11631  path[0] */\n      dup4\n      swap2\n      pop\n        /* \"staking.sol\":11642:11655  acceptedToken */\n      0x00\n      swap1\n        /* \"staking.sol\":11624:11631  path[0] */\n      tag_379\n      jumpi\n      tag_379\n      tag_380\n      jump\t// in\n    tag_379:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"staking.sol\":11624:11656  path[0] = address(acceptedToken) */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"staking.sol\":11676:11691  uniswapV2Router */\n      immutable(\"0xccd68672d6f769e1076a41a883b1b79cd2ffe42afc01c80e02e0f47639ea513e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":11676:11696  uniswapV2Router.WETH */\n      and\n      0xad5c4648\n        /* \"staking.sol\":11676:11698  uniswapV2Router.WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_382\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_382:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_383\n      swap2\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n        /* \"staking.sol\":11666:11670  path */\n      dup2\n        /* \"staking.sol\":11671:11672  1 */\n      0x01\n        /* \"staking.sol\":11666:11673  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_386\n      jumpi\n      tag_386\n      tag_380\n      jump\t// in\n    tag_386:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":11666:11698  path[1] = uniswapV2Router.WETH() */\n      swap3\n      dup4\n      and\n        /* \"staking.sol\":11666:11673  path[1] */\n      0x20\n      swap2\n      dup3\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      add\n        /* \"staking.sol\":11666:11698  path[1] = uniswapV2Router.WETH() */\n      mstore\n        /* \"staking.sol\":11709:11722  acceptedToken */\n      sload(0x01)\n        /* \"staking.sol\":11709:11769  acceptedToken.approve(address(uniswapV2Router), tokenAmount) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n        /* \"staking.sol\":11739:11754  uniswapV2Router */\n      immutable(\"0xccd68672d6f769e1076a41a883b1b79cd2ffe42afc01c80e02e0f47639ea513e\")\n        /* \"#utility.yul\":7654:7686   */\n      dup4\n      and\n        /* \"staking.sol\":11709:11769  acceptedToken.approve(address(uniswapV2Router), tokenAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7636:7687   */\n      mstore\n        /* \"#utility.yul\":7703:7721   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7696:7730   */\n      dup7\n      swap1\n      mstore\n        /* \"staking.sol\":11709:11722  acceptedToken */\n      swap2\n      and\n      swap1\n        /* \"staking.sol\":11709:11730  acceptedToken.approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":7609:7627   */\n      0x44\n      add\n        /* \"staking.sol\":11709:11769  acceptedToken.approve(address(uniswapV2Router), tokenAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_389\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_389:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_390\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_390:\n      pop\n        /* \"staking.sol\":11805:12019  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      mload(0x40)\n      shl(0xe0, 0x791ac947)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"staking.sol\":11805:11820  uniswapV2Router */\n      immutable(\"0xccd68672d6f769e1076a41a883b1b79cd2ffe42afc01c80e02e0f47639ea513e\")\n        /* \"staking.sol\":11805:11871  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens */\n      and\n      swap1\n      0x791ac947\n      swap1\n        /* \"staking.sol\":11805:12019  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      tag_391\n      swap1\n        /* \"staking.sol\":11885:11896  tokenAmount */\n      dup7\n      swap1\n        /* \"staking.sol\":11910:11911  0 */\n      0x00\n      swap1\n        /* \"staking.sol\":11953:11957  path */\n      dup7\n      swap1\n        /* \"staking.sol\":11971:11980  recipient */\n      dup9\n      swap1\n        /* \"staking.sol\":11994:12009  block.timestamp */\n      timestamp\n      swap1\n        /* \"staking.sol\":11805:12019  uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(... */\n      0x04\n      add\n      tag_392\n      jump\t// in\n    tag_391:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_393\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_393:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_395\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_395:\n      pop\n      pop\n      pop\n      pop\n        /* \"staking.sol\":11505:12026  {... */\n      pop\n        /* \"staking.sol\":11431:12026  function swapTokensForEth(uint256 tokenAmount, address recipient) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"staking.sol\":7723:8087  function calculateInterest (uint256 _balance, uint256 _timeStarted, uint256 _APY) internal view returns (uint256){... */\n    tag_225:\n        /* \"staking.sol\":7828:7835  uint256 */\n      0x00\n      dup1\n        /* \"staking.sol\":7867:7897  block.timestamp - _timeStarted */\n      tag_397\n        /* \"staking.sol\":7885:7897  _timeStarted */\n      dup5\n        /* \"staking.sol\":7867:7882  block.timestamp */\n      timestamp\n        /* \"staking.sol\":7867:7897  block.timestamp - _timeStarted */\n      tag_206\n      jump\t// in\n    tag_397:\n        /* \"staking.sol\":7846:7897  uint256 timeStaked = block.timestamp - _timeStarted */\n      swap1\n      pop\n        /* \"staking.sol\":7915:7940  uint256 interestPerSecond */\n      0x00\n        /* \"staking.sol\":7973:7981  365 days */\n      0x01e13380\n        /* \"staking.sol\":7964:7969  10000 */\n      0x2710\n        /* \"staking.sol\":7945:7960  _balance * _APY */\n      tag_398\n        /* \"staking.sol\":7956:7960  _APY */\n      dup7\n        /* \"staking.sol\":7945:7953  _balance */\n      dup10\n        /* \"staking.sol\":7945:7960  _balance * _APY */\n      tag_399\n      jump\t// in\n    tag_398:\n        /* \"staking.sol\":7944:7969  (_balance * _APY) / 10000 */\n      tag_400\n      swap2\n      swap1\n      tag_401\n      jump\t// in\n    tag_400:\n        /* \"staking.sol\":7943:7981  ((_balance * _APY) / 10000) / 365 days */\n      tag_402\n      swap2\n      swap1\n      tag_401\n      jump\t// in\n    tag_402:\n        /* \"staking.sol\":7915:7981  uint256 interestPerSecond = ((_balance * _APY) / 10000) / 365 days */\n      swap1\n      pop\n        /* \"staking.sol\":7991:8014  uint256 interestsEarned */\n      0x00\n        /* \"staking.sol\":8017:8047  timeStaked * interestPerSecond */\n      tag_403\n        /* \"staking.sol\":7915:7981  uint256 interestPerSecond = ((_balance * _APY) / 10000) / 365 days */\n      dup3\n        /* \"staking.sol\":8017:8027  timeStaked */\n      dup5\n        /* \"staking.sol\":8017:8047  timeStaked * interestPerSecond */\n      tag_399\n      jump\t// in\n    tag_403:\n        /* \"staking.sol\":7991:8047  uint256 interestsEarned = timeStaked * interestPerSecond */\n      swap8\n        /* \"staking.sol\":7723:8087  function calculateInterest (uint256 _balance, uint256 _timeStarted, uint256 _APY) internal view returns (uint256){... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2378:2395  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2362:2368  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2343:2359  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2410:2450  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2333:2457  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2270:2457  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1863:1978  function _pause() internal virtual whenNotPaused {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1145:1149  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1168:1175  _paused */\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1411:1420  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1403:1441  require(!paused(), \"Pausable: paused\") */\n      tag_407\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_407:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1929  _paused */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1922:1936  _paused = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1951:1971  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1958:1970  _msgSender() */\n      tag_371\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"#utility.yul\":422:602   */\n    tag_53:\n        /* \"#utility.yul\":481:487   */\n      0x00\n        /* \"#utility.yul\":534:536   */\n      0x20\n        /* \"#utility.yul\":522:531   */\n      dup3\n        /* \"#utility.yul\":513:520   */\n      dup5\n        /* \"#utility.yul\":509:532   */\n      sub\n        /* \"#utility.yul\":505:537   */\n      slt\n        /* \"#utility.yul\":502:554   */\n      iszero\n      tag_419\n      jumpi\n        /* \"#utility.yul\":550:551   */\n      0x00\n        /* \"#utility.yul\":547:548   */\n      dup1\n        /* \"#utility.yul\":540:552   */\n      revert\n        /* \"#utility.yul\":502:554   */\n    tag_419:\n      pop\n        /* \"#utility.yul\":573:596   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":422:602   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1021:1152   */\n    tag_412:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1096:1127   */\n      dup2\n      and\n        /* \"#utility.yul\":1086:1128   */\n      dup2\n      eq\n        /* \"#utility.yul\":1076:1146   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":1142:1143   */\n      0x00\n        /* \"#utility.yul\":1139:1140   */\n      dup1\n        /* \"#utility.yul\":1132:1144   */\n      revert\n        /* \"#utility.yul\":1157:1404   */\n    tag_73:\n        /* \"#utility.yul\":1216:1222   */\n      0x00\n        /* \"#utility.yul\":1269:1271   */\n      0x20\n        /* \"#utility.yul\":1257:1266   */\n      dup3\n        /* \"#utility.yul\":1248:1255   */\n      dup5\n        /* \"#utility.yul\":1244:1267   */\n      sub\n        /* \"#utility.yul\":1240:1272   */\n      slt\n        /* \"#utility.yul\":1237:1289   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":1285:1286   */\n      0x00\n        /* \"#utility.yul\":1282:1283   */\n      dup1\n        /* \"#utility.yul\":1275:1287   */\n      revert\n        /* \"#utility.yul\":1237:1289   */\n    tag_425:\n        /* \"#utility.yul\":1324:1333   */\n      dup2\n        /* \"#utility.yul\":1311:1334   */\n      calldataload\n        /* \"#utility.yul\":1343:1374   */\n      tag_232\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1343:1374   */\n      tag_412\n      jump\t// in\n        /* \"#utility.yul\":1733:1889   */\n    tag_413:\n        /* \"#utility.yul\":1799:1819   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1859:1863   */\n      0xff\n        /* \"#utility.yul\":1848:1864   */\n      dup2\n      and\n        /* \"#utility.yul\":1838:1865   */\n      dup2\n      eq\n        /* \"#utility.yul\":1828:1883   */\n      tag_429\n      jumpi\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1876:1877   */\n      dup1\n        /* \"#utility.yul\":1869:1881   */\n      revert\n        /* \"#utility.yul\":1828:1883   */\n    tag_429:\n        /* \"#utility.yul\":1733:1889   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1894:2279   */\n    tag_93:\n        /* \"#utility.yul\":1969:1975   */\n      0x00\n        /* \"#utility.yul\":1977:1983   */\n      dup1\n        /* \"#utility.yul\":1985:1991   */\n      0x00\n        /* \"#utility.yul\":2038:2040   */\n      0x60\n        /* \"#utility.yul\":2026:2035   */\n      dup5\n        /* \"#utility.yul\":2017:2024   */\n      dup7\n        /* \"#utility.yul\":2013:2036   */\n      sub\n        /* \"#utility.yul\":2009:2041   */\n      slt\n        /* \"#utility.yul\":2006:2058   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":2054:2055   */\n      0x00\n        /* \"#utility.yul\":2051:2052   */\n      dup1\n        /* \"#utility.yul\":2044:2056   */\n      revert\n        /* \"#utility.yul\":2006:2058   */\n    tag_431:\n        /* \"#utility.yul\":2093:2102   */\n      dup4\n        /* \"#utility.yul\":2080:2103   */\n      calldataload\n        /* \"#utility.yul\":2112:2143   */\n      tag_432\n        /* \"#utility.yul\":2137:2142   */\n      dup2\n        /* \"#utility.yul\":2112:2143   */\n      tag_412\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":2162:2167   */\n      swap3\n      pop\n        /* \"#utility.yul\":2186:2222   */\n      tag_433\n        /* \"#utility.yul\":2218:2220   */\n      0x20\n        /* \"#utility.yul\":2203:2221   */\n      dup6\n      add\n        /* \"#utility.yul\":2186:2222   */\n      tag_413\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":2176:2222   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2271   */\n      0x40\n        /* \"#utility.yul\":2258:2267   */\n      dup5\n        /* \"#utility.yul\":2254:2272   */\n      add\n        /* \"#utility.yul\":2241:2273   */\n      calldataload\n        /* \"#utility.yul\":2231:2273   */\n      swap1\n      pop\n        /* \"#utility.yul\":1894:2279   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2492:2808   */\n    tag_142:\n        /* \"#utility.yul\":2569:2575   */\n      0x00\n        /* \"#utility.yul\":2577:2583   */\n      dup1\n        /* \"#utility.yul\":2585:2591   */\n      0x00\n        /* \"#utility.yul\":2638:2640   */\n      0x60\n        /* \"#utility.yul\":2626:2635   */\n      dup5\n        /* \"#utility.yul\":2617:2624   */\n      dup7\n        /* \"#utility.yul\":2613:2636   */\n      sub\n        /* \"#utility.yul\":2609:2641   */\n      slt\n        /* \"#utility.yul\":2606:2658   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":2654:2655   */\n      0x00\n        /* \"#utility.yul\":2651:2652   */\n      dup1\n        /* \"#utility.yul\":2644:2656   */\n      revert\n        /* \"#utility.yul\":2606:2658   */\n    tag_436:\n      pop\n      pop\n        /* \"#utility.yul\":2677:2700   */\n      dup2\n      calldataload\n      swap4\n        /* \"#utility.yul\":2747:2749   */\n      0x20\n        /* \"#utility.yul\":2732:2750   */\n      dup4\n      add\n        /* \"#utility.yul\":2719:2751   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2798:2800   */\n      0x40\n        /* \"#utility.yul\":2783:2801   */\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2770:2802   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2492:2808   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2813:3336   */\n    tag_149:\n        /* \"#utility.yul\":2917:2923   */\n      0x00\n        /* \"#utility.yul\":2925:2931   */\n      dup1\n        /* \"#utility.yul\":2933:2939   */\n      0x00\n        /* \"#utility.yul\":2941:2947   */\n      dup1\n        /* \"#utility.yul\":2949:2955   */\n      0x00\n        /* \"#utility.yul\":2957:2963   */\n      dup1\n        /* \"#utility.yul\":3010:3013   */\n      0xc0\n        /* \"#utility.yul\":2998:3007   */\n      dup8\n        /* \"#utility.yul\":2989:2996   */\n      dup10\n        /* \"#utility.yul\":2985:3008   */\n      sub\n        /* \"#utility.yul\":2981:3014   */\n      slt\n        /* \"#utility.yul\":2978:3031   */\n      iszero\n      tag_438\n      jumpi\n        /* \"#utility.yul\":3027:3028   */\n      0x00\n        /* \"#utility.yul\":3024:3025   */\n      dup1\n        /* \"#utility.yul\":3017:3029   */\n      revert\n        /* \"#utility.yul\":2978:3031   */\n    tag_438:\n      pop\n      pop\n        /* \"#utility.yul\":3050:3073   */\n      dup5\n      calldataload\n      swap7\n        /* \"#utility.yul\":3120:3122   */\n      0x20\n        /* \"#utility.yul\":3105:3123   */\n      dup7\n      add\n        /* \"#utility.yul\":3092:3124   */\n      calldataload\n      swap7\n      pop\n        /* \"#utility.yul\":3171:3173   */\n      0x40\n        /* \"#utility.yul\":3156:3174   */\n      dup7\n      add\n        /* \"#utility.yul\":3143:3175   */\n      calldataload\n      swap6\n        /* \"#utility.yul\":3222:3224   */\n      0x60\n        /* \"#utility.yul\":3207:3225   */\n      dup2\n      add\n        /* \"#utility.yul\":3194:3226   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":3273:3276   */\n      0x80\n        /* \"#utility.yul\":3258:3277   */\n      dup2\n      add\n        /* \"#utility.yul\":3245:3278   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":3325:3328   */\n      0xa0\n        /* \"#utility.yul\":3310:3329   */\n      add\n        /* \"#utility.yul\":3297:3330   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":2813:3336   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3341:3658   */\n    tag_153:\n        /* \"#utility.yul\":3407:3413   */\n      0x00\n        /* \"#utility.yul\":3415:3421   */\n      dup1\n        /* \"#utility.yul\":3468:3470   */\n      0x40\n        /* \"#utility.yul\":3456:3465   */\n      dup4\n        /* \"#utility.yul\":3447:3454   */\n      dup6\n        /* \"#utility.yul\":3443:3466   */\n      sub\n        /* \"#utility.yul\":3439:3471   */\n      slt\n        /* \"#utility.yul\":3436:3488   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":3484:3485   */\n      0x00\n        /* \"#utility.yul\":3481:3482   */\n      dup1\n        /* \"#utility.yul\":3474:3486   */\n      revert\n        /* \"#utility.yul\":3436:3488   */\n    tag_440:\n        /* \"#utility.yul\":3523:3532   */\n      dup3\n        /* \"#utility.yul\":3510:3533   */\n      calldataload\n        /* \"#utility.yul\":3542:3573   */\n      tag_441\n        /* \"#utility.yul\":3567:3572   */\n      dup2\n        /* \"#utility.yul\":3542:3573   */\n      tag_412\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":3592:3597   */\n      swap2\n      pop\n        /* \"#utility.yul\":3616:3652   */\n      tag_442\n        /* \"#utility.yul\":3648:3650   */\n      0x20\n        /* \"#utility.yul\":3633:3651   */\n      dup5\n      add\n        /* \"#utility.yul\":3616:3652   */\n      tag_413\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":3606:3652   */\n      swap1\n      pop\n        /* \"#utility.yul\":3341:3658   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3663:4003   */\n    tag_163:\n        /* \"#utility.yul\":3865:3867   */\n      0x20\n        /* \"#utility.yul\":3847:3868   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3904:3906   */\n      0x10\n        /* \"#utility.yul\":3884:3902   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3877:3907   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":3938:3940   */\n      0x40\n        /* \"#utility.yul\":3923:3941   */\n      dup3\n      add\n        /* \"#utility.yul\":3916:3962   */\n      mstore\n        /* \"#utility.yul\":3994:3996   */\n      0x60\n        /* \"#utility.yul\":3979:3997   */\n      add\n      swap1\n        /* \"#utility.yul\":3663:4003   */\n      jump\t// out\n        /* \"#utility.yul\":4008:4422   */\n    tag_168:\n        /* \"#utility.yul\":4210:4212   */\n      0x20\n        /* \"#utility.yul\":4192:4213   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4249:4251   */\n      0x32\n        /* \"#utility.yul\":4229:4247   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4222:4252   */\n      mstore\n        /* \"#utility.yul\":4288:4322   */\n      0x416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e\n        /* \"#utility.yul\":4283:4285   */\n      0x40\n        /* \"#utility.yul\":4268:4286   */\n      dup3\n      add\n        /* \"#utility.yul\":4261:4323   */\n      mstore\n      shl(0x73, 0x040c2dcc840d8cae6e640e8d0c2dc40dac2f)\n        /* \"#utility.yul\":4354:4356   */\n      0x60\n        /* \"#utility.yul\":4339:4357   */\n      dup3\n      add\n        /* \"#utility.yul\":4332:4380   */\n      mstore\n        /* \"#utility.yul\":4412:4415   */\n      0x80\n        /* \"#utility.yul\":4397:4416   */\n      add\n      swap1\n        /* \"#utility.yul\":4008:4422   */\n      jump\t// out\n        /* \"#utility.yul\":4427:4825   */\n    tag_171:\n        /* \"#utility.yul\":4629:4631   */\n      0x20\n        /* \"#utility.yul\":4611:4632   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4668:4670   */\n      0x22\n        /* \"#utility.yul\":4648:4666   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4641:4671   */\n      mstore\n        /* \"#utility.yul\":4707:4741   */\n      0x596f7527726520616c726561647920696e2074686973205374616b65206c6576\n        /* \"#utility.yul\":4702:4704   */\n      0x40\n        /* \"#utility.yul\":4687:4705   */\n      dup3\n      add\n        /* \"#utility.yul\":4680:4742   */\n      mstore\n      shl(0xf2, 0x195b)\n        /* \"#utility.yul\":4773:4775   */\n      0x60\n        /* \"#utility.yul\":4758:4776   */\n      dup3\n      add\n        /* \"#utility.yul\":4751:4783   */\n      mstore\n        /* \"#utility.yul\":4815:4818   */\n      0x80\n        /* \"#utility.yul\":4800:4819   */\n      add\n      swap1\n        /* \"#utility.yul\":4427:4825   */\n      jump\t// out\n        /* \"#utility.yul\":5210:5487   */\n    tag_177:\n        /* \"#utility.yul\":5277:5283   */\n      0x00\n        /* \"#utility.yul\":5330:5332   */\n      0x20\n        /* \"#utility.yul\":5318:5327   */\n      dup3\n        /* \"#utility.yul\":5309:5316   */\n      dup5\n        /* \"#utility.yul\":5305:5328   */\n      sub\n        /* \"#utility.yul\":5301:5333   */\n      slt\n        /* \"#utility.yul\":5298:5350   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":5346:5347   */\n      0x00\n        /* \"#utility.yul\":5343:5344   */\n      dup1\n        /* \"#utility.yul\":5336:5348   */\n      revert\n        /* \"#utility.yul\":5298:5350   */\n    tag_448:\n        /* \"#utility.yul\":5378:5387   */\n      dup2\n        /* \"#utility.yul\":5372:5388   */\n      mload\n        /* \"#utility.yul\":5431:5436   */\n      dup1\n        /* \"#utility.yul\":5424:5437   */\n      iszero\n        /* \"#utility.yul\":5417:5438   */\n      iszero\n        /* \"#utility.yul\":5410:5415   */\n      dup2\n        /* \"#utility.yul\":5407:5439   */\n      eq\n        /* \"#utility.yul\":5397:5457   */\n      tag_232\n      jumpi\n        /* \"#utility.yul\":5453:5454   */\n      0x00\n        /* \"#utility.yul\":5450:5451   */\n      dup1\n        /* \"#utility.yul\":5443:5455   */\n      revert\n        /* \"#utility.yul\":5492:5619   */\n    tag_414:\n        /* \"#utility.yul\":5553:5563   */\n      0x4e487b71\n        /* \"#utility.yul\":5548:5551   */\n      0xe0\n        /* \"#utility.yul\":5544:5564   */\n      shl\n        /* \"#utility.yul\":5541:5542   */\n      0x00\n        /* \"#utility.yul\":5534:5565   */\n      mstore\n        /* \"#utility.yul\":5584:5588   */\n      0x11\n        /* \"#utility.yul\":5581:5582   */\n      0x04\n        /* \"#utility.yul\":5574:5589   */\n      mstore\n        /* \"#utility.yul\":5608:5612   */\n      0x24\n        /* \"#utility.yul\":5605:5606   */\n      0x00\n        /* \"#utility.yul\":5598:5613   */\n      revert\n        /* \"#utility.yul\":5624:5752   */\n    tag_179:\n        /* \"#utility.yul\":5664:5667   */\n      0x00\n        /* \"#utility.yul\":5695:5696   */\n      dup3\n        /* \"#utility.yul\":5691:5697   */\n      not\n        /* \"#utility.yul\":5688:5689   */\n      dup3\n        /* \"#utility.yul\":5685:5698   */\n      gt\n        /* \"#utility.yul\":5682:5721   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":5701:5719   */\n      tag_453\n      tag_414\n      jump\t// in\n    tag_453:\n      pop\n        /* \"#utility.yul\":5737:5746   */\n      add\n      swap1\n        /* \"#utility.yul\":5624:5752   */\n      jump\t// out\n        /* \"#utility.yul\":6268:6624   */\n    tag_189:\n        /* \"#utility.yul\":6470:6472   */\n      0x20\n        /* \"#utility.yul\":6452:6473   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6489:6507   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":6482:6512   */\n      mstore\n        /* \"#utility.yul\":6548:6582   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6543:6545   */\n      0x40\n        /* \"#utility.yul\":6528:6546   */\n      dup3\n      add\n        /* \"#utility.yul\":6521:6583   */\n      mstore\n        /* \"#utility.yul\":6615:6617   */\n      0x60\n        /* \"#utility.yul\":6600:6618   */\n      add\n      swap1\n        /* \"#utility.yul\":6268:6624   */\n      jump\t// out\n        /* \"#utility.yul\":6973:7327   */\n    tag_200:\n        /* \"#utility.yul\":7175:7177   */\n      0x20\n        /* \"#utility.yul\":7157:7178   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7214:7216   */\n      0x1e\n        /* \"#utility.yul\":7194:7212   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7187:7217   */\n      mstore\n        /* \"#utility.yul\":7253:7285   */\n      0x4e6f7420656e6f7567682062616c616e636520746f2077697468647261770000\n        /* \"#utility.yul\":7248:7250   */\n      0x40\n        /* \"#utility.yul\":7233:7251   */\n      dup3\n      add\n        /* \"#utility.yul\":7226:7286   */\n      mstore\n        /* \"#utility.yul\":7318:7320   */\n      0x60\n        /* \"#utility.yul\":7303:7321   */\n      add\n      swap1\n        /* \"#utility.yul\":6973:7327   */\n      jump\t// out\n        /* \"#utility.yul\":7332:7457   */\n    tag_206:\n        /* \"#utility.yul\":7372:7376   */\n      0x00\n        /* \"#utility.yul\":7400:7401   */\n      dup3\n        /* \"#utility.yul\":7397:7398   */\n      dup3\n        /* \"#utility.yul\":7394:7402   */\n      lt\n        /* \"#utility.yul\":7391:7425   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":7405:7423   */\n      tag_460\n      tag_414\n      jump\t// in\n    tag_460:\n      pop\n        /* \"#utility.yul\":7442:7451   */\n      sub\n      swap1\n        /* \"#utility.yul\":7332:7457   */\n      jump\t// out\n        /* \"#utility.yul\":7741:8257   */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8018:8050   */\n      swap6\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":8000:8051   */\n      dup6\n      mstore\n        /* \"#utility.yul\":8099:8103   */\n      0xff\n        /* \"#utility.yul\":8087:8104   */\n      swap4\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":8082:8084   */\n      0x20\n        /* \"#utility.yul\":8067:8085   */\n      dup6\n      add\n        /* \"#utility.yul\":8060:8105   */\n      mstore\n        /* \"#utility.yul\":8148:8162   */\n      swap1\n      iszero\n        /* \"#utility.yul\":8141:8163   */\n      iszero\n        /* \"#utility.yul\":8136:8138   */\n      0x40\n        /* \"#utility.yul\":8121:8139   */\n      dup5\n      add\n        /* \"#utility.yul\":8114:8164   */\n      mstore\n        /* \"#utility.yul\":8195:8197   */\n      0x60\n        /* \"#utility.yul\":8180:8198   */\n      dup4\n      add\n        /* \"#utility.yul\":8173:8207   */\n      mstore\n        /* \"#utility.yul\":8238:8241   */\n      0x80\n        /* \"#utility.yul\":8223:8242   */\n      dup3\n      add\n        /* \"#utility.yul\":8216:8251   */\n      mstore\n        /* \"#utility.yul\":7987:7990   */\n      0xa0\n        /* \"#utility.yul\":7972:7991   */\n      add\n      swap1\n        /* \"#utility.yul\":7741:8257   */\n      jump\t// out\n        /* \"#utility.yul\":12276:12403   */\n    tag_380:\n        /* \"#utility.yul\":12337:12347   */\n      0x4e487b71\n        /* \"#utility.yul\":12332:12335   */\n      0xe0\n        /* \"#utility.yul\":12328:12348   */\n      shl\n        /* \"#utility.yul\":12325:12326   */\n      0x00\n        /* \"#utility.yul\":12318:12349   */\n      mstore\n        /* \"#utility.yul\":12368:12372   */\n      0x32\n        /* \"#utility.yul\":12365:12366   */\n      0x04\n        /* \"#utility.yul\":12358:12373   */\n      mstore\n        /* \"#utility.yul\":12392:12396   */\n      0x24\n        /* \"#utility.yul\":12389:12390   */\n      0x00\n        /* \"#utility.yul\":12382:12397   */\n      revert\n        /* \"#utility.yul\":12408:12659   */\n    tag_384:\n        /* \"#utility.yul\":12478:12484   */\n      0x00\n        /* \"#utility.yul\":12531:12533   */\n      0x20\n        /* \"#utility.yul\":12519:12528   */\n      dup3\n        /* \"#utility.yul\":12510:12517   */\n      dup5\n        /* \"#utility.yul\":12506:12529   */\n      sub\n        /* \"#utility.yul\":12502:12534   */\n      slt\n        /* \"#utility.yul\":12499:12551   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":12547:12548   */\n      0x00\n        /* \"#utility.yul\":12544:12545   */\n      dup1\n        /* \"#utility.yul\":12537:12549   */\n      revert\n        /* \"#utility.yul\":12499:12551   */\n    tag_475:\n        /* \"#utility.yul\":12579:12588   */\n      dup2\n        /* \"#utility.yul\":12573:12589   */\n      mload\n        /* \"#utility.yul\":12598:12629   */\n      tag_232\n        /* \"#utility.yul\":12623:12628   */\n      dup2\n        /* \"#utility.yul\":12598:12629   */\n      tag_412\n      jump\t// in\n        /* \"#utility.yul\":12664:13644   */\n    tag_392:\n        /* \"#utility.yul\":12926:12930   */\n      0x00\n        /* \"#utility.yul\":12974:12977   */\n      0xa0\n        /* \"#utility.yul\":12963:12972   */\n      dup3\n        /* \"#utility.yul\":12959:12978   */\n      add\n        /* \"#utility.yul\":13005:13011   */\n      dup8\n        /* \"#utility.yul\":12994:13003   */\n      dup4\n        /* \"#utility.yul\":12987:13012   */\n      mstore\n        /* \"#utility.yul\":13031:13033   */\n      0x20\n        /* \"#utility.yul\":13069:13075   */\n      dup8\n        /* \"#utility.yul\":13064:13066   */\n      dup2\n        /* \"#utility.yul\":13053:13062   */\n      dup6\n        /* \"#utility.yul\":13049:13067   */\n      add\n        /* \"#utility.yul\":13042:13076   */\n      mstore\n        /* \"#utility.yul\":13112:13115   */\n      0xa0\n        /* \"#utility.yul\":13107:13109   */\n      0x40\n        /* \"#utility.yul\":13096:13105   */\n      dup6\n        /* \"#utility.yul\":13092:13110   */\n      add\n        /* \"#utility.yul\":13085:13116   */\n      mstore\n        /* \"#utility.yul\":13136:13142   */\n      dup2\n        /* \"#utility.yul\":13171:13177   */\n      dup8\n        /* \"#utility.yul\":13165:13178   */\n      mload\n        /* \"#utility.yul\":13202:13208   */\n      dup1\n        /* \"#utility.yul\":13194:13200   */\n      dup5\n        /* \"#utility.yul\":13187:13209   */\n      mstore\n        /* \"#utility.yul\":13240:13243   */\n      0xc0\n        /* \"#utility.yul\":13229:13238   */\n      dup7\n        /* \"#utility.yul\":13225:13244   */\n      add\n        /* \"#utility.yul\":13218:13244   */\n      swap2\n      pop\n        /* \"#utility.yul\":13279:13281   */\n      dup3\n        /* \"#utility.yul\":13271:13277   */\n      dup10\n        /* \"#utility.yul\":13267:13282   */\n      add\n        /* \"#utility.yul\":13253:13282   */\n      swap4\n      pop\n        /* \"#utility.yul\":13300:13301   */\n      0x00\n        /* \"#utility.yul\":13310:13505   */\n    tag_478:\n        /* \"#utility.yul\":13324:13330   */\n      dup2\n        /* \"#utility.yul\":13321:13322   */\n      dup2\n        /* \"#utility.yul\":13318:13331   */\n      lt\n        /* \"#utility.yul\":13310:13505   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":13389:13402   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13385:13424   */\n      and\n        /* \"#utility.yul\":13373:13425   */\n      dup4\n      mstore\n        /* \"#utility.yul\":13480:13495   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":13445:13457   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":13421:13422   */\n      0x01\n        /* \"#utility.yul\":13339:13348   */\n      add\n        /* \"#utility.yul\":13310:13505   */\n      jump(tag_478)\n    tag_480:\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13561:13593   */\n      swap7\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":13556:13558   */\n      0x60\n        /* \"#utility.yul\":13541:13559   */\n      dup6\n      add\n        /* \"#utility.yul\":13534:13594   */\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13625:13628   */\n      0x80\n        /* \"#utility.yul\":13610:13629   */\n      add\n        /* \"#utility.yul\":13603:13638   */\n      mstore\n        /* \"#utility.yul\":13522:13525   */\n      swap4\n        /* \"#utility.yul\":12664:13644   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13649:13817   */\n    tag_399:\n        /* \"#utility.yul\":13689:13696   */\n      0x00\n        /* \"#utility.yul\":13755:13756   */\n      dup2\n        /* \"#utility.yul\":13751:13752   */\n      0x00\n        /* \"#utility.yul\":13747:13753   */\n      not\n        /* \"#utility.yul\":13743:13757   */\n      div\n        /* \"#utility.yul\":13740:13741   */\n      dup4\n        /* \"#utility.yul\":13737:13758   */\n      gt\n        /* \"#utility.yul\":13732:13733   */\n      dup3\n        /* \"#utility.yul\":13725:13734   */\n      iszero\n        /* \"#utility.yul\":13718:13735   */\n      iszero\n        /* \"#utility.yul\":13714:13759   */\n      and\n        /* \"#utility.yul\":13711:13782   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":13762:13780   */\n      tag_483\n      tag_414\n      jump\t// in\n    tag_483:\n      pop\n        /* \"#utility.yul\":13802:13811   */\n      mul\n      swap1\n        /* \"#utility.yul\":13649:13817   */\n      jump\t// out\n        /* \"#utility.yul\":13822:14039   */\n    tag_401:\n        /* \"#utility.yul\":13862:13863   */\n      0x00\n        /* \"#utility.yul\":13888:13889   */\n      dup3\n        /* \"#utility.yul\":13878:14010   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":13932:13942   */\n      0x4e487b71\n        /* \"#utility.yul\":13927:13930   */\n      0xe0\n        /* \"#utility.yul\":13923:13943   */\n      shl\n        /* \"#utility.yul\":13920:13921   */\n      0x00\n        /* \"#utility.yul\":13913:13944   */\n      mstore\n        /* \"#utility.yul\":13967:13971   */\n      0x12\n        /* \"#utility.yul\":13964:13965   */\n      0x04\n        /* \"#utility.yul\":13957:13972   */\n      mstore\n        /* \"#utility.yul\":13995:13999   */\n      0x24\n        /* \"#utility.yul\":13992:13993   */\n      0x00\n        /* \"#utility.yul\":13985:14000   */\n      revert\n        /* \"#utility.yul\":13878:14010   */\n    tag_485:\n      pop\n        /* \"#utility.yul\":14024:14033   */\n      div\n      swap1\n        /* \"#utility.yul\":13822:14039   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122034791199d66395d0e0b62195f89b790f54327db798ac7a088a339bbd3dfd8ae364736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_131": {
									"entryPoint": null,
									"id": 131,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_489": {
									"entryPoint": null,
									"id": 489,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_103": {
									"entryPoint": 243,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:5"
															},
															"nodeType": "YulIf",
															"src": "105:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:5"
															},
															"nodeType": "YulIf",
															"src": "204:70:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:5",
														"type": ""
													}
												],
												"src": "14:290:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a0604052610a8c600255610e746003556112c06004556802b5e3af16b18800006005556b019d971e4fe8401e7400000060065568056bc75e2d631000006007556b019d971e4fe8401e74000000600855680ad78ebc5ac62000006009556b0813f3978f89409844000000600a553480156200007a57600080fd5b5060405162001e5938038062001e598339810160408190526200009d9162000143565b620000a833620000f3565b6000805460ff60a01b19169055600180546001600160a01b0319166001600160a01b0392909216919091179055737a250d5630b4cf539739df2c5dacb4c659f2488d60805262000175565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200015657600080fd5b81516001600160a01b03811681146200016e57600080fd5b9392505050565b608051611cb3620001a660003960008181610221015281816115ca0152818161168501526117190152611cb36000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637fe509d71161011a57806397e9c5fe116100ad578063e5d157011161007c578063e5d1570114610482578063f2fde38b14610495578063f4217e1e146104a8578063f7edf9ab146104bb578063fe2981b5146104ce57600080fd5b806397e9c5fe14610424578063bb66486414610453578063bf01651a14610466578063d3900a521461047957600080fd5b80638da5cb5b116100e95780638da5cb5b146103ee5780638f0fb2b7146103ff57806391789cef14610408578063927e59981461041157600080fd5b80637fe509d71461038b5780638275b181146103ba57806384203f4b146103c35780638456cb59146103e657600080fd5b80636296e7501161019257806367911ba41161016157806367911ba41461031d57806369e0684814610367578063715018a61461037a57806371a1609b1461038257600080fd5b80636296e750146102bb578063635ef285146102de5780636505cf31146103015780636636389e1461030a57600080fd5b806332938e3a116101ce57806332938e3a146102795780633f4ba83a14610282578063451c3d801461028a5780635c975abb1461029d57600080fd5b806301ef4739146102005780631694505e1461021c5780631ed81ff81461025b5780631ff08fee14610270575b600080fd5b61020960075481565b6040519081526020015b60405180910390f35b6102437f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610213565b61026e610269366004611893565b6104e1565b005b61020960035481565b61020960045481565b61026e6106e3565b600154610243906001600160a01b031681565b600054600160a01b900460ff165b6040519015158152602001610213565b6102ab6102c93660046118c1565b600b6020526000908152604090205460ff1681565b6102ab6102ec3660046118c1565b600d6020526000908152604090205460ff1681565b61020960055481565b61026e610318366004611893565b610717565b61034c61032b3660046118c1565b600c6020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610213565b6102096103753660046118f4565b610984565b61026e610a3d565b61020960065481565b61034c6103993660046118c1565b600e6020526000908152604090208054600182015460029092015490919083565b61020960025481565b6102ab6103d13660046118c1565b600f6020526000908152604090205460ff1681565b61026e610a71565b6000546001600160a01b0316610243565b610209600a5481565b61020960095481565b61026e61041f366004611893565b610aa3565b61034c6104323660046118c1565b60106020526000908152604090208054600182015460029092015490919083565b61026e610461366004611893565b610d08565b61026e610474366004611893565b610f6d565b61020960085481565b61026e610490366004611932565b611155565b61026e6104a33660046118c1565b61118d565b61026e6104b636600461195e565b611228565b6102ab6104c93660046119a1565b61126f565b61026e6104dc366004611893565b61130e565b600054600160a01b900460ff16156105145760405162461bcd60e51b815260040161050b906119d6565b60405180910390fd5b600854811115801561052857506007548110155b6105445760405162461bcd60e51b815260040161050b90611a00565b336000818152600d602052604090205460ff16156105745760405162461bcd60e51b815260040161050b90611a52565b6001546040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af11580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f19190611a94565b506001600160a01b0381166000908152600d6020908152604091829020805460ff191660011790558151606081018352848152429181018290529182019061063b90610320611acc565b90526001600160a01b0382166000908152600e6020908152604091829020835181559083015160018083019190915592909101516002909101557f17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f2390829084426106a88162278d00611acc565b604080516001600160a01b03909616865260ff9094166020860152928401919091526060830152608082015260a00160405180910390a15050565b6000546001600160a01b0316331461070d5760405162461bcd60e51b815260040161050b90611ae4565b6107156114ca565b565b336000818152600f602052604090205460ff166107685760405162461bcd60e51b815260206004820152600f60248201526e055736572206973206e6f742056697608c1b604482015260640161050b565b6001600160a01b038116600090815260106020526040902054828110156107a15760405162461bcd60e51b815260040161050b90611b19565b60006107ae83600261126f565b905060006107be84600287610984565b905082851415610807576001600160a01b038416600090815260106020908152604080832083815560018101849055600201839055600f9091529020805460ff19169055610835565b6001600160a01b0384166000908152601060205260408120805487929061082f908490611b50565b90915550505b81156108c25760015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af115801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b29190611a94565b506108bd8185611567565b61093d565b5060015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052600092169063a9059cbb906044016020604051808303816000875af1158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190611a94565b505b7fa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b846002848885604051610975959493929190611b67565b60405180910390a15050505050565b600060ff83166109c2576001600160a01b0384166000908152600c60205260409020600101546002546109ba908490839061178e565b915050610a36565b8260ff16600114156109fa576001600160a01b0384166000908152600e60205260409020600101546003546109ba908490839061178e565b8260ff1660021415610a32576001600160a01b0384166000908152601060205260409020600101546004546109ba908490839061178e565b5060005b9392505050565b6000546001600160a01b03163314610a675760405162461bcd60e51b815260040161050b90611ae4565b61071560006117de565b6000546001600160a01b03163314610a9b5760405162461bcd60e51b815260040161050b90611ae4565b61071561182e565b336000818152600b602052604090205460ff16610afb5760405162461bcd60e51b8152602060048201526016602482015275055736572206973206e6f74206f6e204c6576656c20360541b604482015260640161050b565b6001600160a01b0381166000908152600c602052604090205482811015610b345760405162461bcd60e51b815260040161050b90611b19565b6000610b4183600061126f565b90506000610b5184600087610984565b905082851415610b9a576001600160a01b0384166000908152600c6020908152604080832083815560018101849055600201839055600b9091529020805460ff19169055610bc8565b6001600160a01b0384166000908152600c602052604081208054879290610bc2908490611b50565b90915550505b8115610c555760015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c459190611a94565b50610c508185611567565b610cd0565b5060015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052600092169063a9059cbb906044016020604051808303816000875af1158015610caa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cce9190611a94565b505b7fa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b846000848885604051610975959493929190611b67565b336000818152600d602052604090205460ff16610d605760405162461bcd60e51b815260206004820152601660248201527555736572206973206e6f74206f6e204c6576656c203160501b604482015260640161050b565b6001600160a01b0381166000908152600e602052604090205482811015610d995760405162461bcd60e51b815260040161050b90611b19565b6000610da683600161126f565b90506000610db684600187610984565b905082851415610dff576001600160a01b0384166000908152600e6020908152604080832083815560018101849055600201839055600d9091529020805460ff19169055610e2d565b6001600160a01b0384166000908152600e602052604081208054879290610e27908490611b50565b90915550505b8115610eba5760015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaa9190611a94565b50610eb58185611567565b610f35565b5060015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052600092169063a9059cbb906044016020604051808303816000875af1158015610f0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f339190611a94565b505b7fa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b846001848885604051610975959493929190611b67565b600054600160a01b900460ff1615610f975760405162461bcd60e51b815260040161050b906119d6565b600a548111158015610fab57506009548110155b610fc75760405162461bcd60e51b815260040161050b90611a00565b336000818152600f602052604090205460ff16156110275760405162461bcd60e51b815260206004820152601f60248201527f596f7527726520616c726561647920696e2074686520566970205374616b6500604482015260640161050b565b6001546040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af1158015611080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a49190611a94565b506001600160a01b0381166000908152600f6020908152604091829020805460ff19166001179055815160608101835284815242918101829052918201906110ee906104b0611acc565b90526001600160a01b038216600090815260106020908152604091829020835181559083015160018201559101516002918201557f17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f2390829084426106a8816276a700611acc565b6000546001600160a01b0316331461117f5760405162461bcd60e51b815260040161050b90611ae4565b600292909255600355600455565b6000546001600160a01b031633146111b75760405162461bcd60e51b815260040161050b90611ae4565b6001600160a01b03811661121c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161050b565b611225816117de565b50565b6000546001600160a01b031633146112525760405162461bcd60e51b815260040161050b90611ae4565b600595909555600693909355600791909155600855600955600a55565b60008060ff831661129c57506001600160a01b0383166000908152600c6020526040902060020154611302565b8260ff16600114156112ca57506001600160a01b0383166000908152600e6020526040902060020154611302565b8260ff16600214156112f857506001600160a01b038316600090815260106020526040902060020154611302565b6000915050611308565b42101590505b92915050565b600054600160a01b900460ff16156113385760405162461bcd60e51b815260040161050b906119d6565b600654811115801561134c57506005548110155b6113685760405162461bcd60e51b815260040161050b90611a00565b336000818152600b602052604090205460ff16156113985760405162461bcd60e51b815260040161050b90611a52565b6001546040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af11580156113f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114159190611a94565b506001600160a01b0381166000908152600b6020908152604091829020805460ff191660011790558151606081018352848152429181018290529182019061145f90610258611acc565b90526001600160a01b0382166000908152600c602090815260408083208451815591840151600183015592909201516002909201919091557f17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f2390829084426106a88162093a80611acc565b600054600160a01b900460ff1661151a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161050b565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b604080516002808252606082018352600092602083019080368337505060015482519293506001600160a01b0316918391506000906115a8576115a8611b98565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164a9190611bae565b8160018151811061165d5761165d611b98565b6001600160a01b03928316602091820292909201015260015460405163095ea7b360e01b81527f0000000000000000000000000000000000000000000000000000000000000000831660048201526024810186905291169063095ea7b3906044016020604051808303816000875af11580156116dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117019190611a94565b5060405163791ac94760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063791ac94790611757908690600090869088904290600401611bcb565b600060405180830381600087803b15801561177157600080fd5b505af1158015611785573d6000803e3d6000fd5b50505050505050565b60008061179b8442611b50565b905060006301e133806127106117b18689611c3c565b6117bb9190611c5b565b6117c59190611c5b565b905060006117d38284611c3c565b979650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156118585760405162461bcd60e51b815260040161050b906119d6565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861154a3390565b6000602082840312156118a557600080fd5b5035919050565b6001600160a01b038116811461122557600080fd5b6000602082840312156118d357600080fd5b8135610a36816118ac565b803560ff811681146118ef57600080fd5b919050565b60008060006060848603121561190957600080fd5b8335611914816118ac565b9250611922602085016118de565b9150604084013590509250925092565b60008060006060848603121561194757600080fd5b505081359360208301359350604090920135919050565b60008060008060008060c0878903121561197757600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b600080604083850312156119b457600080fd5b82356119bf816118ac565b91506119cd602084016118de565b90509250929050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526032908201527f416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e604082015271040c2dcc840d8cae6e640e8d0c2dc40dac2f60731b606082015260800190565b60208082526022908201527f596f7527726520616c726561647920696e2074686973205374616b65206c6576604082015261195b60f21b606082015260800190565b600060208284031215611aa657600080fd5b81518015158114610a3657600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611adf57611adf611ab6565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f4e6f7420656e6f7567682062616c616e636520746f2077697468647261770000604082015260600190565b600082821015611b6257611b62611ab6565b500390565b6001600160a01b0395909516855260ff93909316602085015290151560408401526060830152608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611bc057600080fd5b8151610a36816118ac565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611c1b5784516001600160a01b031683529383019391830191600101611bf6565b50506001600160a01b03969096166060850152505050608001529392505050565b6000816000190483118215151615611c5657611c56611ab6565b500290565b600082611c7857634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122034791199d66395d0e0b62195f89b790f54327db798ac7a088a339bbd3dfd8ae364736f6c634300080b0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH2 0xA8C PUSH1 0x2 SSTORE PUSH2 0xE74 PUSH1 0x3 SSTORE PUSH2 0x12C0 PUSH1 0x4 SSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x5 SSTORE PUSH12 0x19D971E4FE8401E74000000 PUSH1 0x6 SSTORE PUSH9 0x56BC75E2D63100000 PUSH1 0x7 SSTORE PUSH12 0x19D971E4FE8401E74000000 PUSH1 0x8 SSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x9 SSTORE PUSH12 0x813F3978F89409844000000 PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1E59 CODESIZE SUB DUP1 PUSH3 0x1E59 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x9D SWAP2 PUSH3 0x143 JUMP JUMPDEST PUSH3 0xA8 CALLER PUSH3 0xF3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D PUSH1 0x80 MSTORE PUSH3 0x175 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1CB3 PUSH3 0x1A6 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x221 ADD MSTORE DUP2 DUP2 PUSH2 0x15CA ADD MSTORE DUP2 DUP2 PUSH2 0x1685 ADD MSTORE PUSH2 0x1719 ADD MSTORE PUSH2 0x1CB3 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FE509D7 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0x97E9C5FE GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE5D15701 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE5D15701 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xF4217E1E EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xF7EDF9AB EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xFE2981B5 EQ PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97E9C5FE EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xBB664864 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0xBF01651A EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xD3900A52 EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x8F0FB2B7 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x91789CEF EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x927E5998 EQ PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7FE509D7 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x8275B181 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x84203F4B EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6296E750 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x67911BA4 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x67911BA4 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x69E06848 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x71A1609B EQ PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6296E750 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x635EF285 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x6505CF31 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x6636389E EQ PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32938E3A GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x32938E3A EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1EF4739 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x1ED81FF8 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x1FF08FEE EQ PUSH2 0x270 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x209 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x243 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x984 JUMP JUMPDEST PUSH2 0x26E PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x209 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x243 JUMP JUMPDEST PUSH2 0x209 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x209 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x490 CALLDATASIZE PUSH1 0x4 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH2 0x118D JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x195E JUMP JUMPDEST PUSH2 0x1228 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x4C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A1 JUMP JUMPDEST PUSH2 0x126F JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0x130E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x528 JUMPI POP PUSH1 0x7 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1A00 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x574 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP5 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD SWAP1 PUSH2 0x63B SWAP1 PUSH2 0x320 PUSH2 0x1ACC JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH32 0x17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23 SWAP1 DUP3 SWAP1 DUP5 TIMESTAMP PUSH2 0x6A8 DUP2 PUSH3 0x278D00 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0xFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH2 0x715 PUSH2 0x14CA JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x55736572206973206E6F742056697 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AE DUP4 PUSH1 0x2 PUSH2 0x126F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7BE DUP5 PUSH1 0x2 DUP8 PUSH2 0x984 JUMP JUMPDEST SWAP1 POP DUP3 DUP6 EQ ISZERO PUSH2 0x807 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP4 SWAP1 SSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x835 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x82F SWAP1 DUP5 SWAP1 PUSH2 0x1B50 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x88E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH2 0x8BD DUP2 DUP6 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x917 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93B SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP JUMPDEST PUSH32 0xA3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B DUP5 PUSH1 0x2 DUP5 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x975 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP4 AND PUSH2 0x9C2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x2 SLOAD PUSH2 0x9BA SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x178E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA36 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x9FA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x9BA SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x178E JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0xA32 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x9BA SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x178E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH2 0x715 PUSH1 0x0 PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH2 0x715 PUSH2 0x182E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x55736572206973206E6F74206F6E204C6576656C203 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB41 DUP4 PUSH1 0x0 PUSH2 0x126F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB51 DUP5 PUSH1 0x0 DUP8 PUSH2 0x984 JUMP JUMPDEST SWAP1 POP DUP3 DUP6 EQ ISZERO PUSH2 0xB9A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP4 SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xBC2 SWAP1 DUP5 SWAP1 PUSH2 0x1B50 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0xC55 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC45 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH2 0xC50 DUP2 DUP6 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0xCD0 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCCE SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP JUMPDEST PUSH32 0xA3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B DUP5 PUSH1 0x0 DUP5 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x975 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x55736572206973206E6F74206F6E204C6576656C2031 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA6 DUP4 PUSH1 0x1 PUSH2 0x126F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDB6 DUP5 PUSH1 0x1 DUP8 PUSH2 0x984 JUMP JUMPDEST SWAP1 POP DUP3 DUP6 EQ ISZERO PUSH2 0xDFF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP4 SWAP1 SSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xE27 SWAP1 DUP5 SWAP1 PUSH2 0x1B50 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0xEBA JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH2 0xEB5 DUP2 DUP6 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF33 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP JUMPDEST PUSH32 0xA3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B DUP5 PUSH1 0x1 DUP5 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x975 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xFAB JUMPI POP PUSH1 0x9 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1A00 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1027 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7527726520616C726561647920696E2074686520566970205374616B6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1080 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A4 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP5 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD SWAP1 PUSH2 0x10EE SWAP1 PUSH2 0x4B0 PUSH2 0x1ACC JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 ADD MLOAD PUSH1 0x2 SWAP2 DUP3 ADD SSTORE PUSH32 0x17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23 SWAP1 DUP3 SWAP1 DUP5 TIMESTAMP PUSH2 0x6A8 DUP2 PUSH3 0x76A700 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x117F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x2 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x3 SSTORE PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x121C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50B JUMP JUMPDEST PUSH2 0x1225 DUP2 PUSH2 0x17DE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1252 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x5 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 AND PUSH2 0x129C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1302 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x12CA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1302 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x12F8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x1308 JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x134C JUMPI POP PUSH1 0x5 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x1368 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1A00 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1398 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1415 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP5 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD SWAP1 PUSH2 0x145F SWAP1 PUSH2 0x258 PUSH2 0x1ACC JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE SWAP3 SWAP1 SWAP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23 SWAP1 DUP3 SWAP1 DUP5 TIMESTAMP PUSH2 0x6A8 DUP2 PUSH3 0x93A80 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x151A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x1 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x15A8 JUMPI PUSH2 0x15A8 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1626 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164A SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x165D JUMPI PUSH2 0x165D PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1701 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x1757 SWAP1 DUP7 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 DUP9 SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1785 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x179B DUP5 TIMESTAMP PUSH2 0x1B50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0x17B1 DUP7 DUP10 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0x17BB SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x17C5 SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17D3 DUP3 DUP5 PUSH2 0x1C3C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1858 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x154A CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA36 DUP2 PUSH2 0x18AC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x18EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1914 DUP2 PUSH2 0x18AC JUMP JUMPDEST SWAP3 POP PUSH2 0x1922 PUSH1 0x20 DUP6 ADD PUSH2 0x18DE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 CALLDATALOAD SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x19BF DUP2 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x19CD PUSH1 0x20 DUP5 ADD PUSH2 0x18DE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206E6565647320746F206265206D6F7265207468616E206D696E PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x40C2DCC840D8CAE6E640E8D0C2DC40DAC2F PUSH1 0x73 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7527726520616C726561647920696E2074686973205374616B65206C6576 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x195B PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1ADF JUMPI PUSH2 0x1ADF PUSH2 0x1AB6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F2077697468647261770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B62 JUMPI PUSH2 0x1B62 PUSH2 0x1AB6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0xFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA36 DUP2 PUSH2 0x18AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C1B JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1BF6 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C56 JUMPI PUSH2 0x1C56 PUSH2 0x1AB6 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH26 0x1199D66395D0E0B62195F89B790F54327DB798AC7A088A339BBD RETURNDATASIZE REVERT DUP11 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "930:11098:4:-:0;;;1261:4;1233:32;;1298:4;1271:31;;1337:4;1308:33;;1409:11;1382:38;;1453:18;1426:45;;1504:12;1477:39;;1549:18;1522:45;;1602:12;1573:41;;1649:19;1620:48;;2357:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;719:10:3;921:18:0;:32::i;:::-;991:5:1;981:15;;-1:-1:-1;;;;981:15:1;;;-1:-1:-1;2396:30:4;;-1:-1:-1;;;;;;2396:30:4;-1:-1:-1;;;;;2396:30:4;;;;;;;;;;2477:42;2548:34;;930:11098;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;930:11098:4;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_286": {
									"entryPoint": null,
									"id": 286,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_179": {
									"entryPoint": 6190,
									"id": 179,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_103": {
									"entryPoint": 6110,
									"id": 103,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_195": {
									"entryPoint": 5322,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptedToken_354": {
									"entryPoint": null,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateInterest_970": {
									"entryPoint": 6030,
									"id": 970,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@enterLevel0_651": {
									"entryPoint": 4878,
									"id": 651,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@enterLevel1_727": {
									"entryPoint": 1249,
									"id": 727,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@enterVip_803": {
									"entryPoint": 3949,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getInterest_931": {
									"entryPoint": 2436,
									"id": 931,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isLevel0_416": {
									"entryPoint": null,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isLevel1_425": {
									"entryPoint": null,
									"id": 425,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isOnTime_861": {
									"entryPoint": 4719,
									"id": 861,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isVip_434": {
									"entryPoint": null,
									"id": 434,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level0APY_364": {
									"entryPoint": null,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level0Balance_421": {
									"entryPoint": null,
									"id": 421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level0Max_384": {
									"entryPoint": null,
									"id": 384,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level0Min_377": {
									"entryPoint": null,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level1APY_367": {
									"entryPoint": null,
									"id": 367,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level1Balance_430": {
									"entryPoint": null,
									"id": 430,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level1Max_398": {
									"entryPoint": null,
									"id": 398,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@level1Min_391": {
									"entryPoint": null,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@levelVipMax_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@levelVipMin_405": {
									"entryPoint": null,
									"id": 405,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_32": {
									"entryPoint": null,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_498": {
									"entryPoint": 2673,
									"id": 498,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_60": {
									"entryPoint": 2621,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setNewAPY_532": {
									"entryPoint": 4437,
									"id": 532,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setNewMaxMin_575": {
									"entryPoint": 4648,
									"id": 575,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@swapTokensForEth_1348": {
									"entryPoint": 5479,
									"id": 1348,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 4493,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@uniswapV2Router_442": {
									"entryPoint": null,
									"id": 442,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_507": {
									"entryPoint": 1763,
									"id": 507,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vipBalance_439": {
									"entryPoint": null,
									"id": 439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vipLevelAPY_370": {
									"entryPoint": null,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawLevel0_1077": {
									"entryPoint": 2723,
									"id": 1077,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawLevel1_1184": {
									"entryPoint": 3336,
									"id": 1184,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawVip_1291": {
									"entryPoint": 1815,
									"id": 1291,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 7086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint8": {
									"entryPoint": 6561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint8t_uint256": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 6450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 6494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_uint8": {
									"entryPoint": 6366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_1_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_1_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_2_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7015,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_2_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IDexRouter_$347__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_591dc1182a2386b4749ced023bc81df809d47be83533f1ef6275681de1e04c04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6bdfb0dc4c4c59115de16dba1fe971a1a93a7298738a304cd5bd53a9e8420e1c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6656,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a7563a6a5744ba74585ebbf959f95f0839d04ae841bce20f759f432de3f6ca18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_daf93fd023ea17bf0c263d023c3e511dcafa853cd1782f387ee74b6b6866acdb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7115,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6838,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7064,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 6316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14041:5",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:5",
														"type": ""
													}
												],
												"src": "14:177:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "315:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "325:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "337:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "348:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "333:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "333:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "325:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "367:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "382:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "398:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "403:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "394:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "394:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "407:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "390:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "390:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "378:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "378:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "360:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "360:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IDexRouter_$347__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "295:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "306:4:5",
														"type": ""
													}
												],
												"src": "196:221:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "492:110:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "538:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "547:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "550:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "540:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "540:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "540:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "513:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "522:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "509:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "509:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "534:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "505:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "505:32:5"
															},
															"nodeType": "YulIf",
															"src": "502:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "563:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "586:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "573:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "458:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "469:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "481:6:5",
														"type": ""
													}
												],
												"src": "422:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "722:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "732:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "744:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "740:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "740:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "732:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "774:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "789:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "805:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "810:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "801:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "801:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "814:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "797:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "797:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "785:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "785:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "767:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "767:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "691:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "702:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "713:4:5",
														"type": ""
													}
												],
												"src": "607:217:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "924:92:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "934:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "946:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "957:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "942:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "934:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "976:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1001:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "994:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "994:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "987:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "969:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "969:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "969:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "893:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "904:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "915:4:5",
														"type": ""
													}
												],
												"src": "829:187:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1066:86:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1130:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1139:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1142:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1132:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1132:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1132:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1089:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1100:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1115:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1120:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1111:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1111:11:5"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1124:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1107:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1107:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1096:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1096:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1086:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1086:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1079:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1079:50:5"
															},
															"nodeType": "YulIf",
															"src": "1076:70:5"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1055:5:5",
														"type": ""
													}
												],
												"src": "1021:131:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1227:177:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1273:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1282:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1285:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1275:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1275:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1275:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1248:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1257:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1244:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1244:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1269:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1240:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1240:32:5"
															},
															"nodeType": "YulIf",
															"src": "1237:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1298:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1324:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1311:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1302:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1368:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1343:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1343:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1343:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1383:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1393:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1383:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1193:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1204:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1216:6:5",
														"type": ""
													}
												],
												"src": "1157:247:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1566:162:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1576:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1588:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1599:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1584:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1576:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1618:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1629:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1611:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1611:25:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1656:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1667:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1652:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1652:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1645:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1645:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1645:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1699:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1710:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1695:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1695:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1688:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1688:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1519:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1530:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1538:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1546:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1557:4:5",
														"type": ""
													}
												],
												"src": "1409:319:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1780:109:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1790:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1812:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1799:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1790:5:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1867:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1876:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1879:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1869:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1869:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1869:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1841:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1852:5:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1859:4:5",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1848:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1848:16:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1838:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1838:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1831:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1831:35:5"
															},
															"nodeType": "YulIf",
															"src": "1828:55:5"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1759:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1770:5:5",
														"type": ""
													}
												],
												"src": "1733:156:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1996:283:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2042:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2051:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2054:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2044:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2044:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2044:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2017:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2026:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2013:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2038:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2009:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:32:5"
															},
															"nodeType": "YulIf",
															"src": "2006:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2067:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2093:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2080:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2080:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2071:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2137:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2112:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2152:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2162:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2152:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2176:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2207:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2218:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2203:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2203:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "2186:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2186:36:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2176:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2231:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2258:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2269:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2254:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2241:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2241:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2231:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint8t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1946:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1957:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1969:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1977:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1985:6:5",
														"type": ""
													}
												],
												"src": "1894:385:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2385:102:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2395:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2418:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2403:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2403:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2395:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2468:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2473:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2464:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2464:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2477:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2460:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2460:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2448:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2430:51:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2354:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2365:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2376:4:5",
														"type": ""
													}
												],
												"src": "2284:203:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2596:212:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2642:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2651:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2654:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2644:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2644:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2644:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2617:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2626:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2613:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2613:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2638:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2609:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2609:32:5"
															},
															"nodeType": "YulIf",
															"src": "2606:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2667:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2690:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2677:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2667:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2709:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2736:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2732:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2732:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2719:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2719:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2760:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2787:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2798:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2783:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2783:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2770:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2770:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2760:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2546:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2557:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2569:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2577:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2585:6:5",
														"type": ""
													}
												],
												"src": "2492:316:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2968:368:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3015:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3024:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3027:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3017:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3017:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3017:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2989:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2998:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2985:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2985:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3010:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2981:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:33:5"
															},
															"nodeType": "YulIf",
															"src": "2978:53:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3040:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3063:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3050:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:23:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3040:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3082:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3109:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3120:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3105:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3105:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3092:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3092:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3133:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3160:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3171:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3156:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3156:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3143:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3143:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3133:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3184:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3211:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3222:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3207:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3207:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3194:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3194:32:5"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3235:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3262:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3273:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3258:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3258:19:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3245:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3245:33:5"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3235:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3287:43:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3314:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3325:3:5",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3310:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3310:19:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3297:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3297:33:5"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "3287:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2894:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2905:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2917:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2925:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2933:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2941:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2949:6:5",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2957:6:5",
														"type": ""
													}
												],
												"src": "2813:523:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3426:232:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3472:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3481:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3484:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3474:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3474:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3474:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3447:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3456:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3443:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3443:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3468:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3439:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:32:5"
															},
															"nodeType": "YulIf",
															"src": "3436:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3497:36:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3523:9:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3510:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:23:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3501:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3567:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3542:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3542:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3542:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3582:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3592:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3582:6:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3606:46:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3637:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3648:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3633:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3633:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "3616:16:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:36:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3384:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3395:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3407:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3415:6:5",
														"type": ""
													}
												],
												"src": "3341:317:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3837:166:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3854:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3865:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3847:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3847:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3847:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3888:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3899:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3884:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3884:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3904:2:5",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3877:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3877:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3877:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3927:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3938:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3923:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3923:18:5"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3943:18:5",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3916:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3916:46:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3916:46:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3971:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3983:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3979:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3971:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3814:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3828:4:5",
														"type": ""
													}
												],
												"src": "3663:340:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4182:240:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4199:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4210:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4192:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4192:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4233:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4244:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4229:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4229:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4249:2:5",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4222:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4222:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4222:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4272:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4283:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4268:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4268:18:5"
																	},
																	{
																		"hexValue": "416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4288:34:5",
																		"type": "",
																		"value": "Amount needs to be more than min"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4261:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4261:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4261:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4343:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4354:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4339:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4339:18:5"
																	},
																	{
																		"hexValue": "20616e64206c657373207468616e206d6178",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4359:20:5",
																		"type": "",
																		"value": " and less than max"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4332:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4332:48:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4332:48:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4389:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4401:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4412:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4397:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4397:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4389:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4159:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4173:4:5",
														"type": ""
													}
												],
												"src": "4008:414:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4601:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4618:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4629:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4611:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4611:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4611:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4652:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4663:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4648:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4648:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4668:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4641:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4641:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4641:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4691:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4702:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4687:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4687:18:5"
																	},
																	{
																		"hexValue": "596f7527726520616c726561647920696e2074686973205374616b65206c6576",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4707:34:5",
																		"type": "",
																		"value": "You're already in this Stake lev"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4680:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4680:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4762:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4773:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4758:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4758:18:5"
																	},
																	{
																		"hexValue": "656c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4778:4:5",
																		"type": "",
																		"value": "el"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4751:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4751:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4751:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4792:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4804:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4815:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4800:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4800:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4792:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4578:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4592:4:5",
														"type": ""
													}
												],
												"src": "4427:398:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4987:218:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4997:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5009:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5020:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5005:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4997:4:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5032:29:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5050:3:5",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5055:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5046:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5046:11:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5059:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5042:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5042:19:5"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5036:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5077:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5092:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5100:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5088:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5088:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5070:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5070:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5070:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5124:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5135:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5120:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5120:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5144:6:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5152:2:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5140:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5140:15:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5113:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5113:43:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5113:43:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5176:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5187:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5172:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5172:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5192:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5165:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5165:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5165:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4940:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4951:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4959:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4978:4:5",
														"type": ""
													}
												],
												"src": "4830:375:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5288:199:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5334:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5343:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5346:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5336:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5336:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5336:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5309:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5318:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5305:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5305:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5330:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5301:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5301:32:5"
															},
															"nodeType": "YulIf",
															"src": "5298:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5359:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5378:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5372:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5372:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5363:5:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5441:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5450:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5453:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5443:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5443:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5443:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5410:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "5431:5:5"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5424:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5424:13:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5417:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5417:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5407:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5407:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5400:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5400:40:5"
															},
															"nodeType": "YulIf",
															"src": "5397:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5466:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5476:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5466:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5254:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5265:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5277:6:5",
														"type": ""
													}
												],
												"src": "5210:277:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5541:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5548:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5553:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5544:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5544:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5581:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5584:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5574:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5574:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5574:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5605:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5608:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5598:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "5492:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5672:80:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5699:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5701:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5701:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5701:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5688:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5695:1:5"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5691:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5691:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5685:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:13:5"
															},
															"nodeType": "YulIf",
															"src": "5682:39:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5730:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5741:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5744:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5737:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5737:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5730:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5655:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5658:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5664:3:5",
														"type": ""
													}
												],
												"src": "5624:128:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5976:287:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5986:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5998:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6009:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5994:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5986:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6029:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6044:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6060:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6065:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6056:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6056:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6069:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6052:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6052:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6040:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6040:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6022:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6022:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6022:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6093:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6104:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6089:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6089:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6113:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6121:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6109:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6109:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6082:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6082:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6082:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6147:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6158:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6143:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6143:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6163:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6136:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6136:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6136:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6190:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6201:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6186:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6206:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6179:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6233:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6244:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6229:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6229:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6250:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6222:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6222:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6222:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_1_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5913:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5924:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5932:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5940:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5948:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5956:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5967:4:5",
														"type": ""
													}
												],
												"src": "5757:506:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6442:182:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6459:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6470:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6452:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6452:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6452:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6493:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6504:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6489:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6489:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6509:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6482:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6482:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6482:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6532:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6543:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6528:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6528:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6548:34:5",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6521:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6521:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6521:62:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6592:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6604:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6615:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6600:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6600:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6592:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6419:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6433:4:5",
														"type": ""
													}
												],
												"src": "6268:356:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6803:165:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6820:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6831:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6813:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6813:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6813:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6854:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6865:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6850:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6850:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6870:2:5",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6843:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6843:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6843:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6893:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6904:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6889:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6889:18:5"
																	},
																	{
																		"hexValue": "55736572206973206e6f7420566970",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6909:17:5",
																		"type": "",
																		"value": "User is not Vip"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6882:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6882:45:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6936:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6948:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6959:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6944:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6936:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a7563a6a5744ba74585ebbf959f95f0839d04ae841bce20f759f432de3f6ca18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6780:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6794:4:5",
														"type": ""
													}
												],
												"src": "6629:339:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7147:180:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7164:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7175:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7157:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7157:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7157:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7198:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7209:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7194:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7194:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:2:5",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7187:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7187:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7237:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7248:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7233:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7233:18:5"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682062616c616e636520746f207769746864726177",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7253:32:5",
																		"type": "",
																		"value": "Not enough balance to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7226:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7226:60:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7226:60:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7295:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7307:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7318:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7303:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7303:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7295:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7124:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7138:4:5",
														"type": ""
													}
												],
												"src": "6973:354:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7381:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7403:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7405:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7405:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7405:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7397:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7400:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7394:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7394:8:5"
															},
															"nodeType": "YulIf",
															"src": "7391:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7434:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7446:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7449:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7442:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7442:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7434:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7363:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7366:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7372:4:5",
														"type": ""
													}
												],
												"src": "7332:125:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7591:145:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7601:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7613:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7624:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7609:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7609:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7601:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7643:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7658:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7674:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7679:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7670:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7670:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7683:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7666:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7666:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7654:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7654:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7636:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7636:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7636:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7707:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7718:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7703:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7703:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7723:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7696:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7696:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7696:34:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7552:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7563:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7571:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7582:4:5",
														"type": ""
													}
												],
												"src": "7462:274:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7954:303:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7964:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7976:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7987:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7972:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7972:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7964:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8007:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8022:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8038:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8043:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8034:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8034:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8047:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8030:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8030:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8018:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8018:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8000:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8000:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8071:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8082:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8067:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8067:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8091:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8099:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8087:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8087:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8060:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8060:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8060:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8125:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8136:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8121:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8121:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "8155:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8148:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8148:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8141:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8141:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8114:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8114:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8114:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8184:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8195:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8180:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8180:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "8200:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8173:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8173:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8173:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8227:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8238:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8223:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8223:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8244:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8216:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8216:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_2_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7891:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7902:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7910:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7918:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7926:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7934:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7945:4:5",
														"type": ""
													}
												],
												"src": "7741:516:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8436:172:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8453:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8464:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8446:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8446:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8446:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8487:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8498:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8483:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8483:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8503:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8476:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8476:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8476:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8526:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8537:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8522:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8522:18:5"
																	},
																	{
																		"hexValue": "55736572206973206e6f74206f6e204c6576656c2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8542:24:5",
																		"type": "",
																		"value": "User is not on Level 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8515:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8515:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8515:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8576:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8588:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8599:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8584:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8584:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8576:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6bdfb0dc4c4c59115de16dba1fe971a1a93a7298738a304cd5bd53a9e8420e1c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8413:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8427:4:5",
														"type": ""
													}
												],
												"src": "8262:346:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8826:303:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8836:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8848:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8859:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8844:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8844:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8836:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8879:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8894:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8910:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8915:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8906:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8906:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8919:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "8902:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8902:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8890:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8890:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8872:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8872:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8872:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8943:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8954:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8939:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8939:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "8963:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8971:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8959:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8959:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8932:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8997:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9008:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8993:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8993:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "9027:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9020:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9020:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9013:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9013:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8986:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8986:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8986:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9056:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9067:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9052:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9052:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9072:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9045:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9045:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9045:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9099:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9110:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9095:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9095:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "9116:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9088:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9088:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9088:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8763:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8774:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8782:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8790:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8798:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8806:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8817:4:5",
														"type": ""
													}
												],
												"src": "8613:516:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9308:172:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9325:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9336:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9318:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9318:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9318:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9359:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9370:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9355:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9355:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9375:2:5",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9348:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9348:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9348:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9398:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9409:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9394:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9394:18:5"
																	},
																	{
																		"hexValue": "55736572206973206e6f74206f6e204c6576656c2031",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9414:24:5",
																		"type": "",
																		"value": "User is not on Level 1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9387:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9387:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9387:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9448:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9460:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9471:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9456:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9456:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9448:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_591dc1182a2386b4749ced023bc81df809d47be83533f1ef6275681de1e04c04__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9285:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9299:4:5",
														"type": ""
													}
												],
												"src": "9134:346:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9698:303:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9708:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9720:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9731:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9716:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9716:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9708:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9751:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9766:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9782:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9787:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9778:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9778:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9791:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9774:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9774:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9762:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9762:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9744:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9744:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9744:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9815:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9826:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9811:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9811:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9835:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9843:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9831:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9831:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9804:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9804:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9804:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9869:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9880:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9865:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9865:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "9899:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9892:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9892:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9885:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9885:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9858:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9858:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9858:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9928:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9939:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9924:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9924:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9944:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9917:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9917:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9917:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9971:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9982:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9967:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9967:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "9988:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9960:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9960:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9960:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_1_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9635:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9646:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9654:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9662:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9670:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9678:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9689:4:5",
														"type": ""
													}
												],
												"src": "9485:516:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10180:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10197:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10208:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10190:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10190:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10190:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10231:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10242:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10227:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10227:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10247:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10220:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10220:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10220:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10270:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10281:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10266:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10266:18:5"
																	},
																	{
																		"hexValue": "596f7527726520616c726561647920696e2074686520566970205374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10286:33:5",
																		"type": "",
																		"value": "You're already in the Vip Stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10259:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10259:61:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10259:61:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10329:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10341:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10352:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10337:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10337:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10329:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daf93fd023ea17bf0c263d023c3e511dcafa853cd1782f387ee74b6b6866acdb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10157:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10171:4:5",
														"type": ""
													}
												],
												"src": "10006:355:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10585:287:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10595:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10607:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10618:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10603:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10603:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10595:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10638:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10653:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10669:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10674:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10665:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10665:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10678:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10661:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10661:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10649:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10649:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10631:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10631:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10631:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10702:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10713:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10698:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10698:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10722:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10730:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10718:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10718:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10691:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10691:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10691:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10756:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10767:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10752:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10752:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10772:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10745:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10745:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10745:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10799:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10810:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10795:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10795:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10815:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10788:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10788:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10788:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10842:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10853:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10838:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10838:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10859:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10831:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10831:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10831:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_2_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10522:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10533:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10541:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10549:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10557:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10565:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10576:4:5",
														"type": ""
													}
												],
												"src": "10366:506:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11051:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11068:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11079:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11061:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11061:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11061:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11102:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11113:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11098:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11098:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11118:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11091:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11091:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11091:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11141:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11152:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11137:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11137:18:5"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11157:34:5",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11130:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11130:62:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11130:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11212:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11223:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11208:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11208:18:5"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11228:8:5",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11201:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11201:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11201:36:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11246:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11258:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11269:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11254:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11254:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11246:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11028:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11042:4:5",
														"type": ""
													}
												],
												"src": "10877:402:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11503:287:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11513:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11525:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11536:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11521:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11521:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11513:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11556:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11571:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11587:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "11592:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "11583:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11583:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11596:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "11579:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11579:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11567:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11567:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11549:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11549:51:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11549:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11620:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11631:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11616:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11616:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11640:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11648:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11636:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11636:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11609:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11609:45:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11609:45:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11674:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11685:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11670:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11670:18:5"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11690:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11663:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11663:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11663:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11717:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11728:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11713:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11713:18:5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11733:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11706:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11706:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11706:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11760:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11771:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11756:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11756:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "11777:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11749:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11749:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11749:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11440:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11451:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11459:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11467:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11475:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11483:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11494:4:5",
														"type": ""
													}
												],
												"src": "11284:506:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11969:170:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11986:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11997:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11979:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11979:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11979:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12020:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12031:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12016:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12016:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12036:2:5",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12009:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12009:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12009:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12059:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12070:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12055:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12055:18:5"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12075:22:5",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12048:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12048:50:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12048:50:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12107:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12119:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12130:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12115:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12115:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12107:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11946:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11960:4:5",
														"type": ""
													}
												],
												"src": "11795:344:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12176:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12193:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12200:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12205:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12196:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12196:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12186:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12186:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12186:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12233:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12236:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12226:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12226:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12226:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12257:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12260:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12250:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12250:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12250:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "12144:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12308:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12325:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12332:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12337:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12328:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12328:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12318:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12318:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12318:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12365:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12368:4:5",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12358:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12358:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12358:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12389:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12392:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12382:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12382:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12382:15:5"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12276:127:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12489:170:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12535:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12544:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12547:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12537:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12537:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12537:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12510:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12519:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12506:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12506:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12531:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12502:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12502:32:5"
															},
															"nodeType": "YulIf",
															"src": "12499:52:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12560:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12579:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12573:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12573:16:5"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "12564:5:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12623:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "12598:24:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12598:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12598:31:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12638:15:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12648:5:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12638:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12455:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12466:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12478:6:5",
														"type": ""
													}
												],
												"src": "12408:251:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12935:709:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12945:33:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12963:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12974:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12959:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12959:19:5"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "12949:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12994:9:5"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13005:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12987:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12987:25:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12987:25:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13021:12:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13031:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13025:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13053:9:5"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13064:2:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13049:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13049:18:5"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13069:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13042:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13042:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13042:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13096:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13107:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13092:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13092:18:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13112:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13085:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13085:31:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13085:31:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13125:17:5",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "13136:6:5"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "13129:3:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13151:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13171:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13165:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13165:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13155:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13194:6:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13202:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13187:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13187:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13187:22:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13218:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13229:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13240:3:5",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13225:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13225:19:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13218:3:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13253:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13271:6:5"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13279:2:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13267:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13267:15:5"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "13257:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13291:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13300:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13295:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13359:146:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13380:3:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "13395:6:5"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "13389:5:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13389:13:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "13412:3:5",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "13417:1:5",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "13408:3:5"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13408:11:5"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "13421:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "13404:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13404:19:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "13385:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13385:39:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13373:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13373:52:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13373:52:5"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13438:19:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13449:3:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "13454:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13445:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13445:12:5"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13438:3:5"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13470:25:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13484:6:5"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "13492:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13480:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13480:15:5"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13470:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13321:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13324:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13318:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13318:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13332:18:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13334:14:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13343:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13346:1:5",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13339:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13339:9:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13334:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13314:3:5",
																"statements": []
															},
															"src": "13310:195:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13514:11:5",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "13522:3:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13514:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13545:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13556:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13541:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13541:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "13565:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13581:3:5",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13586:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "13577:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13577:11:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13590:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13573:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13573:19:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13561:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13561:32:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13534:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13534:60:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13534:60:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13614:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13625:3:5",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13610:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13610:19:5"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13631:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13603:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13603:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13603:35:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12872:9:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12883:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12891:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12899:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12907:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12915:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12926:4:5",
														"type": ""
													}
												],
												"src": "12664:980:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13701:116:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13760:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13762:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13762:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13762:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13732:1:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13725:6:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13725:9:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13718:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13718:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13740:1:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13751:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "13747:3:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13747:6:5"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13755:1:5"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "13743:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13743:14:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13737:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13737:21:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13714:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13714:45:5"
															},
															"nodeType": "YulIf",
															"src": "13711:71:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13791:20:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13806:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13809:1:5"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13802:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13802:9:5"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13791:7:5"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13680:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13683:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13689:7:5",
														"type": ""
													}
												],
												"src": "13649:168:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13868:171:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13899:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13920:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13927:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13932:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "13923:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13923:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13913:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13913:31:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13913:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13964:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13967:4:5",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13957:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13957:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13957:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13992:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13995:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13985:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13985:15:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13985:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13888:1:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13881:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "13881:9:5"
															},
															"nodeType": "YulIf",
															"src": "13878:132:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14019:14:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14028:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14031:1:5"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14024:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "14024:9:5"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14019:1:5"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13853:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13856:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13862:1:5",
														"type": ""
													}
												],
												"src": "13822:217:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IDexRouter_$347__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$274__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint8t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_uint8(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"Amount needs to be more than min\")\n        mstore(add(headStart, 96), \" and less than max\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"You're already in this Stake lev\")\n        mstore(add(headStart, 96), \"el\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_rational_1_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a7563a6a5744ba74585ebbf959f95f0839d04ae841bce20f759f432de3f6ca18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"User is not Vip\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Not enough balance to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_rational_2_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_6bdfb0dc4c4c59115de16dba1fe971a1a93a7298738a304cd5bd53a9e8420e1c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"User is not on Level 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_591dc1182a2386b4749ced023bc81df809d47be83533f1ef6275681de1e04c04__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"User is not on Level 1\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_rational_1_by_1_t_bool_t_uint256_t_uint256__to_t_address_t_uint8_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_daf93fd023ea17bf0c263d023c3e511dcafa853cd1782f387ee74b6b6866acdb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"You're already in the Vip Stake\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_rational_2_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1_t_uint256_t_uint256_t_uint256__to_t_address_t_uint8_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_rational_0_by_1_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 160)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), value1)\n        mstore(add(headStart, 64), 160)\n        let pos := tail_1\n        let length := mload(value2)\n        mstore(tail_1, length)\n        pos := add(headStart, 192)\n        let srcPtr := add(value2, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"442": [
									{
										"length": 32,
										"start": 545
									},
									{
										"length": 32,
										"start": 5578
									},
									{
										"length": 32,
										"start": 5765
									},
									{
										"length": 32,
										"start": 5913
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637fe509d71161011a57806397e9c5fe116100ad578063e5d157011161007c578063e5d1570114610482578063f2fde38b14610495578063f4217e1e146104a8578063f7edf9ab146104bb578063fe2981b5146104ce57600080fd5b806397e9c5fe14610424578063bb66486414610453578063bf01651a14610466578063d3900a521461047957600080fd5b80638da5cb5b116100e95780638da5cb5b146103ee5780638f0fb2b7146103ff57806391789cef14610408578063927e59981461041157600080fd5b80637fe509d71461038b5780638275b181146103ba57806384203f4b146103c35780638456cb59146103e657600080fd5b80636296e7501161019257806367911ba41161016157806367911ba41461031d57806369e0684814610367578063715018a61461037a57806371a1609b1461038257600080fd5b80636296e750146102bb578063635ef285146102de5780636505cf31146103015780636636389e1461030a57600080fd5b806332938e3a116101ce57806332938e3a146102795780633f4ba83a14610282578063451c3d801461028a5780635c975abb1461029d57600080fd5b806301ef4739146102005780631694505e1461021c5780631ed81ff81461025b5780631ff08fee14610270575b600080fd5b61020960075481565b6040519081526020015b60405180910390f35b6102437f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610213565b61026e610269366004611893565b6104e1565b005b61020960035481565b61020960045481565b61026e6106e3565b600154610243906001600160a01b031681565b600054600160a01b900460ff165b6040519015158152602001610213565b6102ab6102c93660046118c1565b600b6020526000908152604090205460ff1681565b6102ab6102ec3660046118c1565b600d6020526000908152604090205460ff1681565b61020960055481565b61026e610318366004611893565b610717565b61034c61032b3660046118c1565b600c6020526000908152604090208054600182015460029092015490919083565b60408051938452602084019290925290820152606001610213565b6102096103753660046118f4565b610984565b61026e610a3d565b61020960065481565b61034c6103993660046118c1565b600e6020526000908152604090208054600182015460029092015490919083565b61020960025481565b6102ab6103d13660046118c1565b600f6020526000908152604090205460ff1681565b61026e610a71565b6000546001600160a01b0316610243565b610209600a5481565b61020960095481565b61026e61041f366004611893565b610aa3565b61034c6104323660046118c1565b60106020526000908152604090208054600182015460029092015490919083565b61026e610461366004611893565b610d08565b61026e610474366004611893565b610f6d565b61020960085481565b61026e610490366004611932565b611155565b61026e6104a33660046118c1565b61118d565b61026e6104b636600461195e565b611228565b6102ab6104c93660046119a1565b61126f565b61026e6104dc366004611893565b61130e565b600054600160a01b900460ff16156105145760405162461bcd60e51b815260040161050b906119d6565b60405180910390fd5b600854811115801561052857506007548110155b6105445760405162461bcd60e51b815260040161050b90611a00565b336000818152600d602052604090205460ff16156105745760405162461bcd60e51b815260040161050b90611a52565b6001546040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af11580156105cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f19190611a94565b506001600160a01b0381166000908152600d6020908152604091829020805460ff191660011790558151606081018352848152429181018290529182019061063b90610320611acc565b90526001600160a01b0382166000908152600e6020908152604091829020835181559083015160018083019190915592909101516002909101557f17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f2390829084426106a88162278d00611acc565b604080516001600160a01b03909616865260ff9094166020860152928401919091526060830152608082015260a00160405180910390a15050565b6000546001600160a01b0316331461070d5760405162461bcd60e51b815260040161050b90611ae4565b6107156114ca565b565b336000818152600f602052604090205460ff166107685760405162461bcd60e51b815260206004820152600f60248201526e055736572206973206e6f742056697608c1b604482015260640161050b565b6001600160a01b038116600090815260106020526040902054828110156107a15760405162461bcd60e51b815260040161050b90611b19565b60006107ae83600261126f565b905060006107be84600287610984565b905082851415610807576001600160a01b038416600090815260106020908152604080832083815560018101849055600201839055600f9091529020805460ff19169055610835565b6001600160a01b0384166000908152601060205260408120805487929061082f908490611b50565b90915550505b81156108c25760015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af115801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b29190611a94565b506108bd8185611567565b61093d565b5060015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052600092169063a9059cbb906044016020604051808303816000875af1158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190611a94565b505b7fa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b846002848885604051610975959493929190611b67565b60405180910390a15050505050565b600060ff83166109c2576001600160a01b0384166000908152600c60205260409020600101546002546109ba908490839061178e565b915050610a36565b8260ff16600114156109fa576001600160a01b0384166000908152600e60205260409020600101546003546109ba908490839061178e565b8260ff1660021415610a32576001600160a01b0384166000908152601060205260409020600101546004546109ba908490839061178e565b5060005b9392505050565b6000546001600160a01b03163314610a675760405162461bcd60e51b815260040161050b90611ae4565b61071560006117de565b6000546001600160a01b03163314610a9b5760405162461bcd60e51b815260040161050b90611ae4565b61071561182e565b336000818152600b602052604090205460ff16610afb5760405162461bcd60e51b8152602060048201526016602482015275055736572206973206e6f74206f6e204c6576656c20360541b604482015260640161050b565b6001600160a01b0381166000908152600c602052604090205482811015610b345760405162461bcd60e51b815260040161050b90611b19565b6000610b4183600061126f565b90506000610b5184600087610984565b905082851415610b9a576001600160a01b0384166000908152600c6020908152604080832083815560018101849055600201839055600b9091529020805460ff19169055610bc8565b6001600160a01b0384166000908152600c602052604081208054879290610bc2908490611b50565b90915550505b8115610c555760015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610c21573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c459190611a94565b50610c508185611567565b610cd0565b5060015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052600092169063a9059cbb906044016020604051808303816000875af1158015610caa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cce9190611a94565b505b7fa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b846000848885604051610975959493929190611b67565b336000818152600d602052604090205460ff16610d605760405162461bcd60e51b815260206004820152601660248201527555736572206973206e6f74206f6e204c6576656c203160501b604482015260640161050b565b6001600160a01b0381166000908152600e602052604090205482811015610d995760405162461bcd60e51b815260040161050b90611b19565b6000610da683600161126f565b90506000610db684600187610984565b905082851415610dff576001600160a01b0384166000908152600e6020908152604080832083815560018101849055600201839055600d9091529020805460ff19169055610e2d565b6001600160a01b0384166000908152600e602052604081208054879290610e27908490611b50565b90915550505b8115610eba5760015460405163a9059cbb60e01b81526001600160a01b038681166004830152602482018890529091169063a9059cbb906044016020604051808303816000875af1158015610e86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaa9190611a94565b50610eb58185611567565b610f35565b5060015460405163a9059cbb60e01b81526001600160a01b03858116600483015260248201879052600092169063a9059cbb906044016020604051808303816000875af1158015610f0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f339190611a94565b505b7fa3dff5863d601223d9b31a0253b97a6c2085daca56089b92836b4b6a1991e04b846001848885604051610975959493929190611b67565b600054600160a01b900460ff1615610f975760405162461bcd60e51b815260040161050b906119d6565b600a548111158015610fab57506009548110155b610fc75760405162461bcd60e51b815260040161050b90611a00565b336000818152600f602052604090205460ff16156110275760405162461bcd60e51b815260206004820152601f60248201527f596f7527726520616c726561647920696e2074686520566970205374616b6500604482015260640161050b565b6001546040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af1158015611080573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110a49190611a94565b506001600160a01b0381166000908152600f6020908152604091829020805460ff19166001179055815160608101835284815242918101829052918201906110ee906104b0611acc565b90526001600160a01b038216600090815260106020908152604091829020835181559083015160018201559101516002918201557f17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f2390829084426106a8816276a700611acc565b6000546001600160a01b0316331461117f5760405162461bcd60e51b815260040161050b90611ae4565b600292909255600355600455565b6000546001600160a01b031633146111b75760405162461bcd60e51b815260040161050b90611ae4565b6001600160a01b03811661121c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161050b565b611225816117de565b50565b6000546001600160a01b031633146112525760405162461bcd60e51b815260040161050b90611ae4565b600595909555600693909355600791909155600855600955600a55565b60008060ff831661129c57506001600160a01b0383166000908152600c6020526040902060020154611302565b8260ff16600114156112ca57506001600160a01b0383166000908152600e6020526040902060020154611302565b8260ff16600214156112f857506001600160a01b038316600090815260106020526040902060020154611302565b6000915050611308565b42101590505b92915050565b600054600160a01b900460ff16156113385760405162461bcd60e51b815260040161050b906119d6565b600654811115801561134c57506005548110155b6113685760405162461bcd60e51b815260040161050b90611a00565b336000818152600b602052604090205460ff16156113985760405162461bcd60e51b815260040161050b90611a52565b6001546040516323b872dd60e01b81526001600160a01b03838116600483015230602483015260448201859052909116906323b872dd906064016020604051808303816000875af11580156113f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114159190611a94565b506001600160a01b0381166000908152600b6020908152604091829020805460ff191660011790558151606081018352848152429181018290529182019061145f90610258611acc565b90526001600160a01b0382166000908152600c602090815260408083208451815591840151600183015592909201516002909201919091557f17849bb8c713de96b48f218d3bacc9af082261c3ccc7c6dccebe70e667b22f2390829084426106a88162093a80611acc565b600054600160a01b900460ff1661151a5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161050b565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b604080516002808252606082018352600092602083019080368337505060015482519293506001600160a01b0316918391506000906115a8576115a8611b98565b60200260200101906001600160a01b031690816001600160a01b0316815250507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015611626573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061164a9190611bae565b8160018151811061165d5761165d611b98565b6001600160a01b03928316602091820292909201015260015460405163095ea7b360e01b81527f0000000000000000000000000000000000000000000000000000000000000000831660048201526024810186905291169063095ea7b3906044016020604051808303816000875af11580156116dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117019190611a94565b5060405163791ac94760e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063791ac94790611757908690600090869088904290600401611bcb565b600060405180830381600087803b15801561177157600080fd5b505af1158015611785573d6000803e3d6000fd5b50505050505050565b60008061179b8442611b50565b905060006301e133806127106117b18689611c3c565b6117bb9190611c5b565b6117c59190611c5b565b905060006117d38284611c3c565b979650505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600054600160a01b900460ff16156118585760405162461bcd60e51b815260040161050b906119d6565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861154a3390565b6000602082840312156118a557600080fd5b5035919050565b6001600160a01b038116811461122557600080fd5b6000602082840312156118d357600080fd5b8135610a36816118ac565b803560ff811681146118ef57600080fd5b919050565b60008060006060848603121561190957600080fd5b8335611914816118ac565b9250611922602085016118de565b9150604084013590509250925092565b60008060006060848603121561194757600080fd5b505081359360208301359350604090920135919050565b60008060008060008060c0878903121561197757600080fd5b505084359660208601359650604086013595606081013595506080810135945060a0013592509050565b600080604083850312156119b457600080fd5b82356119bf816118ac565b91506119cd602084016118de565b90509250929050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b60208082526032908201527f416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e604082015271040c2dcc840d8cae6e640e8d0c2dc40dac2f60731b606082015260800190565b60208082526022908201527f596f7527726520616c726561647920696e2074686973205374616b65206c6576604082015261195b60f21b606082015260800190565b600060208284031215611aa657600080fd5b81518015158114610a3657600080fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611adf57611adf611ab6565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f4e6f7420656e6f7567682062616c616e636520746f2077697468647261770000604082015260600190565b600082821015611b6257611b62611ab6565b500390565b6001600160a01b0395909516855260ff93909316602085015290151560408401526060830152608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b600060208284031215611bc057600080fd5b8151610a36816118ac565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611c1b5784516001600160a01b031683529383019391830191600101611bf6565b50506001600160a01b03969096166060850152505050608001529392505050565b6000816000190483118215151615611c5657611c56611ab6565b500290565b600082611c7857634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122034791199d66395d0e0b62195f89b790f54327db798ac7a088a339bbd3dfd8ae364736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FE509D7 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0x97E9C5FE GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xE5D15701 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xE5D15701 EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xF4217E1E EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xF7EDF9AB EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xFE2981B5 EQ PUSH2 0x4CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x97E9C5FE EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xBB664864 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0xBF01651A EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0xD3900A52 EQ PUSH2 0x479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x8F0FB2B7 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x91789CEF EQ PUSH2 0x408 JUMPI DUP1 PUSH4 0x927E5998 EQ PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7FE509D7 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x8275B181 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0x84203F4B EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6296E750 GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x67911BA4 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x67911BA4 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x69E06848 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x71A1609B EQ PUSH2 0x382 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6296E750 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0x635EF285 EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0x6505CF31 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x6636389E EQ PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32938E3A GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x32938E3A EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x451C3D80 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1EF4739 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x1ED81FF8 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x1FF08FEE EQ PUSH2 0x270 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x209 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x209 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x243 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x2C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x213 JUMP JUMPDEST PUSH2 0x209 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x984 JUMP JUMPDEST PUSH2 0x26E PUSH2 0xA3D JUMP JUMPDEST PUSH2 0x209 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0xA71 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x243 JUMP JUMPDEST PUSH2 0x209 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x209 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0xAA3 JUMP JUMPDEST PUSH2 0x34C PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP4 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0xD08 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0xF6D JUMP JUMPDEST PUSH2 0x209 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x490 CALLDATASIZE PUSH1 0x4 PUSH2 0x1932 JUMP JUMPDEST PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x18C1 JUMP JUMPDEST PUSH2 0x118D JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x195E JUMP JUMPDEST PUSH2 0x1228 JUMP JUMPDEST PUSH2 0x2AB PUSH2 0x4C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x19A1 JUMP JUMPDEST PUSH2 0x126F JUMP JUMPDEST PUSH2 0x26E PUSH2 0x4DC CALLDATASIZE PUSH1 0x4 PUSH2 0x1893 JUMP JUMPDEST PUSH2 0x130E JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x528 JUMPI POP PUSH1 0x7 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1A00 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x574 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5CD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5F1 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP5 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD SWAP1 PUSH2 0x63B SWAP1 PUSH2 0x320 PUSH2 0x1ACC JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP3 SWAP1 SWAP2 ADD MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH32 0x17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23 SWAP1 DUP3 SWAP1 DUP5 TIMESTAMP PUSH2 0x6A8 DUP2 PUSH3 0x278D00 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0xFF SWAP1 SWAP5 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH2 0x715 PUSH2 0x14CA JUMP JUMPDEST JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x768 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x55736572206973206E6F742056697 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7AE DUP4 PUSH1 0x2 PUSH2 0x126F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7BE DUP5 PUSH1 0x2 DUP8 PUSH2 0x984 JUMP JUMPDEST SWAP1 POP DUP3 DUP6 EQ ISZERO PUSH2 0x807 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP4 SWAP1 SSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x835 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x82F SWAP1 DUP5 SWAP1 PUSH2 0x1B50 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0x8C2 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x88E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8B2 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH2 0x8BD DUP2 DUP6 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x917 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93B SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP JUMPDEST PUSH32 0xA3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B DUP5 PUSH1 0x2 DUP5 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x975 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP4 AND PUSH2 0x9C2 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x2 SLOAD PUSH2 0x9BA SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x178E JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA36 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x9FA JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x3 SLOAD PUSH2 0x9BA SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x178E JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0xA32 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x9BA SWAP1 DUP5 SWAP1 DUP4 SWAP1 PUSH2 0x178E JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH2 0x715 PUSH1 0x0 PUSH2 0x17DE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH2 0x715 PUSH2 0x182E JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xAFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x55736572206973206E6F74206F6E204C6576656C203 PUSH1 0x54 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB41 DUP4 PUSH1 0x0 PUSH2 0x126F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB51 DUP5 PUSH1 0x0 DUP8 PUSH2 0x984 JUMP JUMPDEST SWAP1 POP DUP3 DUP6 EQ ISZERO PUSH2 0xB9A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP4 SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xBC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xBC2 SWAP1 DUP5 SWAP1 PUSH2 0x1B50 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0xC55 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC21 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC45 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH2 0xC50 DUP2 DUP6 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0xCD0 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCAA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCCE SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP JUMPDEST PUSH32 0xA3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B DUP5 PUSH1 0x0 DUP5 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x975 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xD60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x55736572206973206E6F74206F6E204C6576656C2031 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1B19 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDA6 DUP4 PUSH1 0x1 PUSH2 0x126F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xDB6 DUP5 PUSH1 0x1 DUP8 PUSH2 0x984 JUMP JUMPDEST SWAP1 POP DUP3 DUP6 EQ ISZERO PUSH2 0xDFF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP4 SWAP1 SSTORE PUSH1 0xD SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xE2D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xE27 SWAP1 DUP5 SWAP1 PUSH2 0x1B50 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 ISZERO PUSH2 0xEBA JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP9 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEAA SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH2 0xEB5 DUP2 DUP6 PUSH2 0x1567 JUMP JUMPDEST PUSH2 0xF35 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF0F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF33 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP JUMPDEST PUSH32 0xA3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B DUP5 PUSH1 0x1 DUP5 DUP9 DUP6 PUSH1 0x40 MLOAD PUSH2 0x975 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B67 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0xFAB JUMPI POP PUSH1 0x9 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0xFC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1A00 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1027 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7527726520616C726561647920696E2074686520566970205374616B6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1080 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A4 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP5 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD SWAP1 PUSH2 0x10EE SWAP1 PUSH2 0x4B0 PUSH2 0x1ACC JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP2 ADD MLOAD PUSH1 0x2 SWAP2 DUP3 ADD SSTORE PUSH32 0x17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23 SWAP1 DUP3 SWAP1 DUP5 TIMESTAMP PUSH2 0x6A8 DUP2 PUSH3 0x76A700 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x117F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x2 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x3 SSTORE PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x11B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x121C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x50B JUMP JUMPDEST PUSH2 0x1225 DUP2 PUSH2 0x17DE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1252 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1AE4 JUMP JUMPDEST PUSH1 0x5 SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x6 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xFF DUP4 AND PUSH2 0x129C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1302 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x12CA JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1302 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x2 EQ ISZERO PUSH2 0x12F8 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x1308 JUMP JUMPDEST TIMESTAMP LT ISZERO SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1338 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 GT ISZERO DUP1 ISZERO PUSH2 0x134C JUMPI POP PUSH1 0x5 SLOAD DUP2 LT ISZERO JUMPDEST PUSH2 0x1368 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1A00 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1398 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x1A52 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1415 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP5 DUP2 MSTORE TIMESTAMP SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE SWAP2 DUP3 ADD SWAP1 PUSH2 0x145F SWAP1 PUSH2 0x258 PUSH2 0x1ACC JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 MLOAD DUP2 SSTORE SWAP2 DUP5 ADD MLOAD PUSH1 0x1 DUP4 ADD SSTORE SWAP3 SWAP1 SWAP3 ADD MLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH32 0x17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23 SWAP1 DUP3 SWAP1 DUP5 TIMESTAMP PUSH2 0x6A8 DUP2 PUSH3 0x93A80 PUSH2 0x1ACC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x151A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x50B JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x1 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x15A8 JUMPI PUSH2 0x15A8 PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1626 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x164A SWAP2 SWAP1 PUSH2 0x1BAE JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x165D JUMPI PUSH2 0x165D PUSH2 0x1B98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x0 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1701 SWAP2 SWAP1 PUSH2 0x1A94 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x791AC947 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x791AC947 SWAP1 PUSH2 0x1757 SWAP1 DUP7 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 DUP9 SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1771 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1785 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x179B DUP5 TIMESTAMP PUSH2 0x1B50 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0x17B1 DUP7 DUP10 PUSH2 0x1C3C JUMP JUMPDEST PUSH2 0x17BB SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST PUSH2 0x17C5 SWAP2 SWAP1 PUSH2 0x1C5B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17D3 DUP3 DUP5 PUSH2 0x1C3C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1858 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x50B SWAP1 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x154A CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA36 DUP2 PUSH2 0x18AC JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x18EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1909 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1914 DUP2 PUSH2 0x18AC JUMP JUMPDEST SWAP3 POP PUSH2 0x1922 PUSH1 0x20 DUP6 ADD PUSH2 0x18DE JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1977 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP5 CALLDATALOAD SWAP7 PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP7 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP6 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP6 POP PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 POP PUSH1 0xA0 ADD CALLDATALOAD SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x19BF DUP2 PUSH2 0x18AC JUMP JUMPDEST SWAP2 POP PUSH2 0x19CD PUSH1 0x20 DUP5 ADD PUSH2 0x18DE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206E6565647320746F206265206D6F7265207468616E206D696E PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x40C2DCC840D8CAE6E640E8D0C2DC40DAC2F PUSH1 0x73 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x596F7527726520616C726561647920696E2074686973205374616B65206C6576 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x195B PUSH1 0xF2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xA36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1ADF JUMPI PUSH2 0x1ADF PUSH2 0x1AB6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1E SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F2077697468647261770000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B62 JUMPI PUSH2 0x1B62 PUSH2 0x1AB6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0xFF SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP1 ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xA36 DUP2 PUSH2 0x18AC JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 DUP2 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C1B JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1BF6 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C56 JUMPI PUSH2 0x1C56 PUSH2 0x1AB6 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE PUSH26 0x1199D66395D0E0B62195F89B790F54327DB798AC7A088A339BBD RETURNDATASIZE REVERT DUP11 0xE3 PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "930:11098:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1477:39;;;;;;;;;160:25:5;;;148:2;133:18;1477:39:4;;;;;;;;2050:43;;;;;;;;-1:-1:-1;;;;;378:32:5;;;360:51;;348:2;333:18;2050:43:4;196:221:5;4563:742:4;;;;;;:::i;:::-;;:::i;:::-;;1271:31;;;;;;1308:33;;;;;;2714:64;;;:::i;1024:27::-;;;;;-1:-1:-1;;;;;1024:27:4;;;1098:84:1;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1098:84;;;994:14:5;;987:22;969:41;;957:2;942:18;1098:84:1;829:187:5;1731:41:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1831;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1382:38;;;;;;10487:936;;;;;;:::i;:::-;;:::i;1778:47::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1611:25:5;;;1667:2;1652:18;;1645:34;;;;1695:18;;;1688:34;1599:2;1584:18;1778:47:4;1409:319:5;7031:686:4;;;;;;:::i;:::-;;:::i;1668:101:0:-;;;:::i;1426:45:4:-;;;;;;1878:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1233:32;;;;;;1931:38;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2644:60;;;:::i;1036:85:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;;1620:48:4;;;;;;1573:41;;;;;;8245:970;;;;;;:::i;:::-;;:::i;1975:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;9373:956;;;;;;:::i;:::-;;:::i;5504:748::-;;;;;;:::i;:::-;;:::i;1522:45::-;;;;;;2846:208;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;3136:372:4:-;;;;;;:::i;:::-;;:::i;6397:499::-;;;;;;:::i;:::-;;:::i;3657:750::-;;;;;;:::i;:::-;;:::i;4563:742::-;1145:4:1;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;;;;;;;;;4652:9:4::1;;4641:7;:20;;:44;;;;;4676:9;;4665:7;:20;;4641:44;4633:107;;;;-1:-1:-1::0;;;4633:107:4::1;;;;;;;:::i;:::-;4771:10;4750:18;4802:20:::0;;;:8:::1;:20;::::0;;;;;::::1;;4801:21;4793:68;;;;-1:-1:-1::0;;;4793:68:4::1;;;;;;;:::i;:::-;4878:13;::::0;:62:::1;::::0;-1:-1:-1;;;4878:62:4;;-1:-1:-1;;;;;5088:15:5;;;4878:62:4::1;::::0;::::1;5070:34:5::0;4925:4:4::1;5120:18:5::0;;;5113:43;5172:18;;;5165:34;;;4878:13:4;;::::1;::::0;:26:::1;::::0;5005:18:5;;4878:62:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;4951:20:4;::::1;;::::0;;;:8:::1;:20;::::0;;;;;;;;:27;;-1:-1:-1;;4951:27:4::1;4974:4;4951:27;::::0;;5016:186;;::::1;::::0;::::1;::::0;;;;;5078:15:::1;5016:186:::0;;::::1;::::0;;;;;;;5170:21:::1;::::0;5188:3:::1;5170:21;:::i;:::-;5016:186:::0;;-1:-1:-1;;;;;4988:25:4;::::1;;::::0;;;:13:::1;:25;::::0;;;;;;;;:214;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;5222:76:::1;::::0;5002:10;;5246:7;5255:15:::1;5272:25;5255:15:::0;5290:7:::1;5272:25;:::i;:::-;5222:76;::::0;;-1:-1:-1;;;;;6040:32:5;;;6022:51;;6121:4;6109:17;;;6104:2;6089:18;;6082:45;6143:18;;;6136:34;;;;6201:2;6186:18;;6179:34;6244:3;6229:19;;6222:35;6009:3;5994:19;5222:76:4::1;;;;;;;4623:682;4563:742:::0;:::o;2714:64::-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2761:10:4::1;:8;:10::i;:::-;2714:64::o:0;10487:936::-;10565:10;10544:18;10593:17;;;:5;:17;;;;;;;;10585:45;;;;-1:-1:-1;;;10585:45:4;;6831:2:5;10585:45:4;;;6813:21:5;6870:2;6850:18;;;6843:30;-1:-1:-1;;;6889:18:5;;;6882:45;6944:18;;10585:45:4;6629:339:5;10585:45:4;-1:-1:-1;;;;;10663:22:4;;10645:15;10663:22;;;:10;:22;;;;;:30;10711:18;;;;10703:61;;;;-1:-1:-1;;;10703:61:4;;;;;;;:::i;:::-;10775:14;10792:23;10801:10;10813:1;10792:8;:23::i;:::-;10775:40;;10825:16;10844:35;10856:10;10868:1;10871:7;10844:11;:35::i;:::-;10825:54;;10904:7;10893;:18;10890:192;;;-1:-1:-1;;;;;10933:22:4;;;;;;:10;:22;;;;;;;;10926:29;;;;;;;;;;;;;;10974:5;:17;;;;;:25;;-1:-1:-1;;10974:25:4;;;10890:192;;;-1:-1:-1;;;;;11030:22:4;;;;;;:10;:22;;;;;:41;;11064:7;;11030:22;:41;;11064:7;;11030:41;:::i;:::-;;;;-1:-1:-1;;10890:192:4;11095:9;11092:256;;;11119:13;;:43;;-1:-1:-1;;;11119:43:4;;-1:-1:-1;;;;;7654:32:5;;;11119:43:4;;;7636:51:5;7703:18;;;7696:34;;;11119:13:4;;;;:22;;7609:18:5;;11119:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11177:38;11194:8;11204:10;11177:16;:38::i;:::-;11092:256;;;-1:-1:-1;11283:13:4;;:43;;-1:-1:-1;;;11283:43:4;;-1:-1:-1;;;;;7654:32:5;;;11283:43:4;;;7636:51:5;7703:18;;;7696:34;;;11257:1:4;;11283:13;;:22;;7609:18:5;;11283:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11092:256;11363:53;11372:10;11384:1;11387:9;11398:7;11407:8;11363:53;;;;;;;;;;:::i;:::-;;;;;;;;10534:889;;;;10487:936;:::o;7031:686::-;7118:7;7139:10;;;7136:575;;-1:-1:-1;;;;;7198:19:4;;7175:20;7198:19;;;:13;:19;;;;;:31;;;7291:9;;7251:50;;7269:7;;7198:31;;7251:17;:50::i;:::-;7244:57;;;;;7136:575;7322:5;:10;;7331:1;7322:10;7318:393;;;-1:-1:-1;;;;;7376:19:4;;7353:20;7376:19;;;:13;:19;;;;;:31;;;7469:9;;7429:50;;7447:7;;7376:31;;7429:17;:50::i;7318:393::-;7500:5;:10;;7509:1;7500:10;7496:215;;;-1:-1:-1;;;;;7559:16:4;;7536:20;7559:16;;;:10;:16;;;;;:28;;;7649:11;;7609:52;;7627:7;;7559:28;;7609:17;:52::i;7496:215::-;-1:-1:-1;7699:1:4;7496:215;7031:686;;;;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;2644:60:4:-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2689:8:4::1;:6;:8::i;8245:970::-:0;8326:10;8305:18;8354:20;;;:8;:20;;;;;;;;8346:55;;;;-1:-1:-1;;;8346:55:4;;8464:2:5;8346:55:4;;;8446:21:5;8503:2;8483:18;;;8476:30;-1:-1:-1;;;8522:18:5;;;8515:52;8584:18;;8346:55:4;8262:346:5;8346:55:4;-1:-1:-1;;;;;8430:25:4;;8412:15;8430:25;;;:13;:25;;;;;:33;8481:18;;;;8473:61;;;;-1:-1:-1;;;8473:61:4;;;;;;;:::i;:::-;8545:14;8562:23;8571:10;8583:1;8562:8;:23::i;:::-;8545:40;;8595:16;8614:35;8626:10;8638:1;8641:7;8614:11;:35::i;:::-;8595:54;;8674:7;8663;:18;8660:202;;;-1:-1:-1;;;;;8703:25:4;;;;;;:13;:25;;;;;;;;8696:32;;;;;;;;;;;;;;8748:8;:20;;;;;:28;;-1:-1:-1;;8748:28:4;;;8660:202;;;-1:-1:-1;;;;;8807:25:4;;;;;;:13;:25;;;;;:44;;8844:7;;8807:25;:44;;8844:7;;8807:44;:::i;:::-;;;;-1:-1:-1;;8660:202:4;8875:9;8872:264;;;8899:13;;:43;;-1:-1:-1;;;8899:43:4;;-1:-1:-1;;;;;7654:32:5;;;8899:43:4;;;7636:51:5;7703:18;;;7696:34;;;8899:13:4;;;;:22;;7609:18:5;;8899:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8969:38;8986:8;8996:10;8969:16;:38::i;:::-;8872:264;;;-1:-1:-1;9071:13:4;;:43;;-1:-1:-1;;;9071:43:4;;-1:-1:-1;;;;;7654:32:5;;;9071:43:4;;;7636:51:5;7703:18;;;7696:34;;;9049:1:4;;9071:13;;:22;;7609:18:5;;9071:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8872:264;9155:53;9164:10;9176:1;9179:9;9190:7;9199:8;9155:53;;;;;;;;;;:::i;9373:956::-;9454:10;9433:18;9482:20;;;:8;:20;;;;;;;;9474:55;;;;-1:-1:-1;;;9474:55:4;;9336:2:5;9474:55:4;;;9318:21:5;9375:2;9355:18;;;9348:30;-1:-1:-1;;;9394:18:5;;;9387:52;9456:18;;9474:55:4;9134:346:5;9474:55:4;-1:-1:-1;;;;;9558:25:4;;9540:15;9558:25;;;:13;:25;;;;;:33;9609:18;;;;9601:61;;;;-1:-1:-1;;;9601:61:4;;;;;;;:::i;:::-;9673:14;9690:23;9699:10;9711:1;9690:8;:23::i;:::-;9673:40;;9723:16;9742:35;9754:10;9766:1;9769:7;9742:11;:35::i;:::-;9723:54;;9802:7;9791;:18;9788:202;;;-1:-1:-1;;;;;9831:25:4;;;;;;:13;:25;;;;;;;;9824:32;;;;;;;;;;;;;;9876:8;:20;;;;;:28;;-1:-1:-1;;9876:28:4;;;9788:202;;;-1:-1:-1;;;;;9935:25:4;;;;;;:13;:25;;;;;:44;;9972:7;;9935:25;:44;;9972:7;;9935:44;:::i;:::-;;;;-1:-1:-1;;9788:202:4;10003:9;10000:254;;;10027:13;;:43;;-1:-1:-1;;;10027:43:4;;-1:-1:-1;;;;;7654:32:5;;;10027:43:4;;;7636:51:5;7703:18;;;7696:34;;;10027:13:4;;;;:22;;7609:18:5;;10027:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10085:38;10102:8;10112:10;10085:16;:38::i;:::-;10000:254;;;-1:-1:-1;10189:13:4;;:43;;-1:-1:-1;;;10189:43:4;;-1:-1:-1;;;;;7654:32:5;;;10189:43:4;;;7636:51:5;7703:18;;;7696:34;;;10165:1:4;;10189:13;;:22;;7609:18:5;;10189:43:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10000:254;10269:53;10278:10;10290:1;10293:9;10304:7;10313:8;10269:53;;;;;;;;;;:::i;5504:748::-;1145:4:1;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;5590:11:4::1;;5579:7;:22;;:48;;;;;5616:11;;5605:7;:22;;5579:48;5571:111;;;;-1:-1:-1::0;;;5571:111:4::1;;;;;;;:::i;:::-;5713:10;5692:18;5755:17:::0;;;:5:::1;:17;::::0;;;;;::::1;;5754:18;5746:62;;;::::0;-1:-1:-1;;;5746:62:4;;10208:2:5;5746:62:4::1;::::0;::::1;10190:21:5::0;10247:2;10227:18;;;10220:30;10286:33;10266:18;;;10259:61;10337:18;;5746:62:4::1;10006:355:5::0;5746:62:4::1;5827:13;::::0;:62:::1;::::0;-1:-1:-1;;;5827:62:4;;-1:-1:-1;;;;;5088:15:5;;;5827:62:4::1;::::0;::::1;5070:34:5::0;5874:4:4::1;5120:18:5::0;;;5113:43;5172:18;;;5165:34;;;5827:13:4;;::::1;::::0;:26:::1;::::0;5005:18:5;;5827:62:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;5900:17:4;::::1;;::::0;;;:5:::1;:17;::::0;;;;;;;;:24;;-1:-1:-1;;5900:24:4::1;5920:4;5900:24;::::0;;5959:187;;::::1;::::0;::::1;::::0;;;;;6021:15:::1;5959:187:::0;;::::1;::::0;;;;;;;6113:22:::1;::::0;6131:4:::1;6113:22;:::i;:::-;5959:187:::0;;-1:-1:-1;;;;;5934:22:4;::::1;;::::0;;;:10:::1;:22;::::0;;;;;;;;:212;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;6169:76:::1;::::0;5945:10;;6193:7;6202:15:::1;6219:25;6202:15:::0;6237:7:::1;6219:25;:::i;2846:208::-:0;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2957:9:4::1;:22:::0;;;;2989:9:::1;:22:::0;3021:11:::1;:26:::0;2846:208::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;11079:2:5;1998:73:0::1;::::0;::::1;11061:21:5::0;11118:2;11098:18;;;11091:30;11157:34;11137:18;;;11130:62;-1:-1:-1;;;11208:18:5;;;11201:36;11254:19;;1998:73:0::1;10877:402:5::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;3136:372:4:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3311:9:4::1;:22:::0;;;;3343:9:::1;:22:::0;;;;3375:9:::1;:22:::0;;;;3407:9:::1;:22:::0;3439:11:::1;:26:::0;3475:11:::1;:26:::0;3136:372::o;6397:499::-;6464:4;;6512:10;;;6509:334;;-1:-1:-1;;;;;;6551:19:4;;;;;;:13;:19;;;;;:30;;;6509:334;;;6613:5;:10;;6622:1;6613:10;6609:234;;;-1:-1:-1;;;;;;6652:19:4;;;;;;:13;:19;;;;;:30;;;6609:234;;;6712:5;:10;;6721:1;6712:10;6708:135;;;-1:-1:-1;;;;;;6751:16:4;;;;;;:10;:16;;;;;:27;;;6708:135;;;6827:5;6820:12;;;;;6708:135;6859:15;:30;;;-1:-1:-1;6397:499:4;;;;;:::o;3657:750::-;1145:4:1;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;3746:9:4::1;;3735:7;:20;;:44;;;;;3770:9;;3759:7;:20;;3735:44;3727:107;;;;-1:-1:-1::0;;;3727:107:4::1;;;;;;;:::i;:::-;3865:10;3844:18;3899:20:::0;;;:8:::1;:20;::::0;;;;;::::1;;3898:21;3890:68;;;;-1:-1:-1::0;;;3890:68:4::1;;;;;;;:::i;:::-;3973:13;::::0;:62:::1;::::0;-1:-1:-1;;;3973:62:4;;-1:-1:-1;;;;;5088:15:5;;;3973:62:4::1;::::0;::::1;5070:34:5::0;4020:4:4::1;5120:18:5::0;;;5113:43;5172:18;;;5165:34;;;3973:13:4;;::::1;::::0;:26:::1;::::0;5005:18:5;;3973:62:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;4046:20:4;::::1;;::::0;;;:8:::1;:20;::::0;;;;;;;;:27;;-1:-1:-1;;4046:27:4::1;4069:4;4046:27;::::0;;4111:189;;::::1;::::0;::::1;::::0;;;;;4175:15:::1;4111:189:::0;;::::1;::::0;;;;;;;4268:21:::1;::::0;4286:3:::1;4268:21;:::i;:::-;4111:189:::0;;-1:-1:-1;;;;;4083:25:4;::::1;;::::0;;;:13:::1;:25;::::0;;;;;;;:217;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;4325:75:::1;::::0;4097:10;;4349:7;4358:15:::1;4375:24;4358:15:::0;4393:6:::1;4375:24;:::i;2110:117:1:-:0;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1669:41;;;;-1:-1:-1;;;1669:41:1;;11997:2:5;1669:41:1;;;11979:21:5;12036:2;12016:18;;;12009:30;-1:-1:-1;;;12055:18:5;;;12048:50;12115:18;;1669:41:1;11795:344:5;1669:41:1;2178:5:::1;2168:15:::0;;-1:-1:-1;;;;2168:15:1::1;::::0;;2198:22:::1;719:10:3::0;2207:12:1::1;2198:22;::::0;-1:-1:-1;;;;;378:32:5;;;360:51;;348:2;333:18;2198:22:1::1;;;;;;;2110:117::o:0;11431:595:4:-;11598:16;;;11612:1;11598:16;;;;;;;;11574:21;;11598:16;;;;;;;;-1:-1:-1;;11642:13:4;;11624:7;;;;-1:-1:-1;;;;;;11642:13:4;;11624:7;;-1:-1:-1;11642:13:4;;11624:7;;;;:::i;:::-;;;;;;:32;-1:-1:-1;;;;;11624:32:4;;;-1:-1:-1;;;;;11624:32:4;;;;;11676:15;-1:-1:-1;;;;;11676:20:4;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11666:4;11671:1;11666:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;11666:32:4;;;:7;;;;;;;;;:32;11709:13;;:60;;-1:-1:-1;;;11709:60:4;;11739:15;7654:32:5;;11709:60:4;;;7636:51:5;7703:18;;;7696:34;;;11709:13:4;;;:21;;7609:18:5;;11709:60:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;11805:214:4;;-1:-1:-1;;;11805:214:4;;-1:-1:-1;;;;;11805:15:4;:66;;;;:214;;11885:11;;11910:1;;11953:4;;11971:9;;11994:15;;11805:214;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11505:521;11431:595;;:::o;7723:364::-;7828:7;;7867:30;7885:12;7867:15;:30;:::i;:::-;7846:51;-1:-1:-1;7915:25:4;7973:8;7964:5;7945:15;7956:4;7945:8;:15;:::i;:::-;7944:25;;;;:::i;:::-;7943:38;;;;:::i;:::-;7915:66;-1:-1:-1;7991:23:4;8017:30;7915:66;8017:10;:30;:::i;:::-;7991:56;7723:364;-1:-1:-1;;;;;;;7723:364:4:o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;1863:115:1:-;1145:4;1168:7;-1:-1:-1;;;1168:7:1;;;;1411:9;1403:38;;;;-1:-1:-1;;;1403:38:1;;;;;;;:::i;:::-;1922:7:::1;:14:::0;;-1:-1:-1;;;;1922:14:1::1;-1:-1:-1::0;;;1922:14:1::1;::::0;;1951:20:::1;1958:12;719:10:3::0;;640:96;422:180:5;481:6;534:2;522:9;513:7;509:23;505:32;502:52;;;550:1;547;540:12;502:52;-1:-1:-1;573:23:5;;422:180;-1:-1:-1;422:180:5:o;1021:131::-;-1:-1:-1;;;;;1096:31:5;;1086:42;;1076:70;;1142:1;1139;1132:12;1157:247;1216:6;1269:2;1257:9;1248:7;1244:23;1240:32;1237:52;;;1285:1;1282;1275:12;1237:52;1324:9;1311:23;1343:31;1368:5;1343:31;:::i;1733:156::-;1799:20;;1859:4;1848:16;;1838:27;;1828:55;;1879:1;1876;1869:12;1828:55;1733:156;;;:::o;1894:385::-;1969:6;1977;1985;2038:2;2026:9;2017:7;2013:23;2009:32;2006:52;;;2054:1;2051;2044:12;2006:52;2093:9;2080:23;2112:31;2137:5;2112:31;:::i;:::-;2162:5;-1:-1:-1;2186:36:5;2218:2;2203:18;;2186:36;:::i;:::-;2176:46;;2269:2;2258:9;2254:18;2241:32;2231:42;;1894:385;;;;;:::o;2492:316::-;2569:6;2577;2585;2638:2;2626:9;2617:7;2613:23;2609:32;2606:52;;;2654:1;2651;2644:12;2606:52;-1:-1:-1;;2677:23:5;;;2747:2;2732:18;;2719:32;;-1:-1:-1;2798:2:5;2783:18;;;2770:32;;2492:316;-1:-1:-1;2492:316:5:o;2813:523::-;2917:6;2925;2933;2941;2949;2957;3010:3;2998:9;2989:7;2985:23;2981:33;2978:53;;;3027:1;3024;3017:12;2978:53;-1:-1:-1;;3050:23:5;;;3120:2;3105:18;;3092:32;;-1:-1:-1;3171:2:5;3156:18;;3143:32;;3222:2;3207:18;;3194:32;;-1:-1:-1;3273:3:5;3258:19;;3245:33;;-1:-1:-1;3325:3:5;3310:19;3297:33;;-1:-1:-1;2813:523:5;-1:-1:-1;2813:523:5:o;3341:317::-;3407:6;3415;3468:2;3456:9;3447:7;3443:23;3439:32;3436:52;;;3484:1;3481;3474:12;3436:52;3523:9;3510:23;3542:31;3567:5;3542:31;:::i;:::-;3592:5;-1:-1:-1;3616:36:5;3648:2;3633:18;;3616:36;:::i;:::-;3606:46;;3341:317;;;;;:::o;3663:340::-;3865:2;3847:21;;;3904:2;3884:18;;;3877:30;-1:-1:-1;;;3938:2:5;3923:18;;3916:46;3994:2;3979:18;;3663:340::o;4008:414::-;4210:2;4192:21;;;4249:2;4229:18;;;4222:30;4288:34;4283:2;4268:18;;4261:62;-1:-1:-1;;;4354:2:5;4339:18;;4332:48;4412:3;4397:19;;4008:414::o;4427:398::-;4629:2;4611:21;;;4668:2;4648:18;;;4641:30;4707:34;4702:2;4687:18;;4680:62;-1:-1:-1;;;4773:2:5;4758:18;;4751:32;4815:3;4800:19;;4427:398::o;5210:277::-;5277:6;5330:2;5318:9;5309:7;5305:23;5301:32;5298:52;;;5346:1;5343;5336:12;5298:52;5378:9;5372:16;5431:5;5424:13;5417:21;5410:5;5407:32;5397:60;;5453:1;5450;5443:12;5492:127;5553:10;5548:3;5544:20;5541:1;5534:31;5584:4;5581:1;5574:15;5608:4;5605:1;5598:15;5624:128;5664:3;5695:1;5691:6;5688:1;5685:13;5682:39;;;5701:18;;:::i;:::-;-1:-1:-1;5737:9:5;;5624:128::o;6268:356::-;6470:2;6452:21;;;6489:18;;;6482:30;6548:34;6543:2;6528:18;;6521:62;6615:2;6600:18;;6268:356::o;6973:354::-;7175:2;7157:21;;;7214:2;7194:18;;;7187:30;7253:32;7248:2;7233:18;;7226:60;7318:2;7303:18;;6973:354::o;7332:125::-;7372:4;7400:1;7397;7394:8;7391:34;;;7405:18;;:::i;:::-;-1:-1:-1;7442:9:5;;7332:125::o;7741:516::-;-1:-1:-1;;;;;8018:32:5;;;;8000:51;;8099:4;8087:17;;;;8082:2;8067:18;;8060:45;8148:14;;8141:22;8136:2;8121:18;;8114:50;8195:2;8180:18;;8173:34;8238:3;8223:19;;8216:35;7987:3;7972:19;;7741:516::o;12276:127::-;12337:10;12332:3;12328:20;12325:1;12318:31;12368:4;12365:1;12358:15;12392:4;12389:1;12382:15;12408:251;12478:6;12531:2;12519:9;12510:7;12506:23;12502:32;12499:52;;;12547:1;12544;12537:12;12499:52;12579:9;12573:16;12598:31;12623:5;12598:31;:::i;12664:980::-;12926:4;12974:3;12963:9;12959:19;13005:6;12994:9;12987:25;13031:2;13069:6;13064:2;13053:9;13049:18;13042:34;13112:3;13107:2;13096:9;13092:18;13085:31;13136:6;13171;13165:13;13202:6;13194;13187:22;13240:3;13229:9;13225:19;13218:26;;13279:2;13271:6;13267:15;13253:29;;13300:1;13310:195;13324:6;13321:1;13318:13;13310:195;;;13389:13;;-1:-1:-1;;;;;13385:39:5;13373:52;;13480:15;;;;13445:12;;;;13421:1;13339:9;13310:195;;;-1:-1:-1;;;;;;;13561:32:5;;;;13556:2;13541:18;;13534:60;-1:-1:-1;;;13625:3:5;13610:19;13603:35;13522:3;12664:980;-1:-1:-1;;;12664:980:5:o;13649:168::-;13689:7;13755:1;13751;13747:6;13743:14;13740:1;13737:21;13732:1;13725:9;13718:17;13714:45;13711:71;;;13762:18;;:::i;:::-;-1:-1:-1;13802:9:5;;13649:168::o;13822:217::-;13862:1;13888;13878:132;;13932:10;13927:3;13923:20;13920:1;13913:31;13967:4;13964:1;13957:15;13995:4;13992:1;13985:15;13878:132;-1:-1:-1;14024:9:5;;13822:217::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1469400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptedToken()": "2427",
								"enterLevel0(uint256)": "infinite",
								"enterLevel1(uint256)": "infinite",
								"enterVip(uint256)": "infinite",
								"getInterest(address,uint8,uint256)": "infinite",
								"isLevel0(address)": "2571",
								"isLevel1(address)": "2593",
								"isOnTime(address,uint8)": "2885",
								"isVip(address)": "2615",
								"level0APY()": "2352",
								"level0Balance(address)": "6833",
								"level0Max()": "2395",
								"level0Min()": "2374",
								"level1APY()": "2397",
								"level1Balance(address)": "6834",
								"level1Max()": "2395",
								"level1Min()": "2331",
								"levelVipMax()": "2351",
								"levelVipMin()": "2373",
								"owner()": "2376",
								"pause()": "29891",
								"paused()": "2422",
								"renounceOwnership()": "28203",
								"setNewAPY(uint256,uint256,uint256)": "68769",
								"setNewMaxMin(uint256,uint256,uint256,uint256,uint256,uint256)": "135194",
								"transferOwnership(address)": "infinite",
								"uniswapV2Router()": "infinite",
								"unpause()": "29818",
								"vipBalance(address)": "6833",
								"vipLevelAPY()": "2330",
								"withdrawLevel0(uint256)": "infinite",
								"withdrawLevel1(uint256)": "infinite",
								"withdrawVip(uint256)": "infinite"
							},
							"internal": {
								"calculateInterest(uint256,uint256,uint256)": "infinite",
								"swapTokensForEth(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 930,
									"end": 12028,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1261,
									"end": 1265,
									"name": "PUSH",
									"source": 4,
									"value": "A8C"
								},
								{
									"begin": 1233,
									"end": 1265,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1233,
									"end": 1265,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1298,
									"end": 1302,
									"name": "PUSH",
									"source": 4,
									"value": "E74"
								},
								{
									"begin": 1271,
									"end": 1302,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1271,
									"end": 1302,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1337,
									"end": 1341,
									"name": "PUSH",
									"source": 4,
									"value": "12C0"
								},
								{
									"begin": 1308,
									"end": 1341,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1308,
									"end": 1341,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1409,
									"end": 1420,
									"name": "PUSH",
									"source": 4,
									"value": "2B5E3AF16B1880000"
								},
								{
									"begin": 1382,
									"end": 1420,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1382,
									"end": 1420,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1453,
									"end": 1471,
									"name": "PUSH",
									"source": 4,
									"value": "19D971E4FE8401E74000000"
								},
								{
									"begin": 1426,
									"end": 1471,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1426,
									"end": 1471,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1504,
									"end": 1516,
									"name": "PUSH",
									"source": 4,
									"value": "56BC75E2D63100000"
								},
								{
									"begin": 1477,
									"end": 1516,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1477,
									"end": 1516,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1549,
									"end": 1567,
									"name": "PUSH",
									"source": 4,
									"value": "19D971E4FE8401E74000000"
								},
								{
									"begin": 1522,
									"end": 1567,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1522,
									"end": 1567,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1602,
									"end": 1614,
									"name": "PUSH",
									"source": 4,
									"value": "AD78EBC5AC6200000"
								},
								{
									"begin": 1573,
									"end": 1614,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1573,
									"end": 1614,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1649,
									"end": 1668,
									"name": "PUSH",
									"source": 4,
									"value": "813F3978F89409844000000"
								},
								{
									"begin": 1620,
									"end": 1668,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 1620,
									"end": 1668,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2357,
									"end": 2593,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 921,
									"end": 953,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 921,
									"end": 939,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 921,
									"end": 953,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 991,
									"end": 996,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 996,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 981,
									"end": 996,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2396,
									"end": 2426,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2477,
									"end": 2519,
									"name": "PUSH",
									"source": 4,
									"value": "7A250D5630B4CF539739DF2C5DACB4C659F2488D"
								},
								{
									"begin": 2548,
									"end": 2582,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 2548,
									"end": 2582,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2378,
									"end": 2395,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2362,
									"end": 2368,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2343,
									"end": 2359,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2410,
									"end": 2450,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2333,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2270,
									"end": 2457,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "442"
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 930,
									"end": 12028,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122034791199d66395d0e0b62195f89b790f54327db798ac7a088a339bbd3dfd8ae364736f6c634300080b0033",
									".code": [
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "7FE509D7"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "97E9C5FE"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "E5D15701"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "E5D15701"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "F2FDE38B"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "F4217E1E"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "F7EDF9AB"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "FE2981B5"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "97E9C5FE"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "BB664864"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "BF01651A"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "D3900A52"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "8DA5CB5B"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "8F0FB2B7"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "91789CEF"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "927E5998"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "7FE509D7"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "8275B181"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "84203F4B"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "8456CB59"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "6296E750"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "67911BA4"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "67911BA4"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "69E06848"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "715018A6"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "71A1609B"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "6296E750"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "635EF285"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "6505CF31"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "6636389E"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "32938E3A"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "32938E3A"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "3F4BA83A"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "451C3D80"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "5C975ABB"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "1EF4739"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "1694505E"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "1ED81FF8"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "1FF08FEE"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 930,
											"end": 12028,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1477,
											"end": 1516,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2093,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2050,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2050,
											"end": 2093,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 2050,
											"end": 2093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2093,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2093,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 2050,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2050,
											"end": 2093,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2050,
											"end": 2093,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 378,
											"end": 410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 378,
											"end": 410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 378,
											"end": 410,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 360,
											"end": 411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 360,
											"end": 411,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2050,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 196,
											"end": 417,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1302,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1271,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1271,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1271,
											"end": 1302,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1302,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1302,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1308,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1308,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1308,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1308,
											"end": 1341,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1308,
											"end": 1341,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1308,
											"end": 1341,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1308,
											"end": 1341,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2778,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 2714,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2714,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2714,
											"end": 2778,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 994,
											"end": 1008,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1008,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1009,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 969,
											"end": 1010,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 969,
											"end": 1010,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 957,
											"end": 959,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 942,
											"end": 960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1098,
											"end": 1182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 829,
											"end": 1016,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1731,
											"end": 1772,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1872,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1420,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1382,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1382,
											"end": 1420,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1382,
											"end": 1420,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1420,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1611,
											"end": 1636,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1636,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1636,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1669,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1645,
											"end": 1679,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1713,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1713,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1695,
											"end": 1713,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1722,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1599,
											"end": 1601,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1778,
											"end": 1825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1409,
											"end": 1728,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1426,
											"end": 1471,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1426,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1426,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1426,
											"end": 1471,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1471,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1471,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1878,
											"end": 1925,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1265,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1233,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1233,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1233,
											"end": 1265,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1265,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1931,
											"end": 1969,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2704,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 2644,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2644,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2644,
											"end": 2704,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1036,
											"end": 1121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1620,
											"end": 1668,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1614,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1573,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1573,
											"end": 1614,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1573,
											"end": 1614,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1573,
											"end": 1614,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1975,
											"end": 2019,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1522,
											"end": 1567,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1522,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1522,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 1522,
											"end": 1567,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1522,
											"end": 1567,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1522,
											"end": 1567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1522,
											"end": 1567,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4661,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4652,
											"end": 4661,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4648,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4661,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4661,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4685,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4685,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4641,
											"end": 4685,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4676,
											"end": 4685,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4676,
											"end": 4685,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4665,
											"end": 4672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4665,
											"end": 4685,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4665,
											"end": 4685,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4641,
											"end": 4685,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4641,
											"end": 4685,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4771,
											"end": 4781,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4810,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4802,
											"end": 4822,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4822,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 4793,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4891,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4878,
											"end": 4891,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4925,
											"end": 4929,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5199,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5199,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4891,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4891,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4891,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4891,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4904,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 4878,
											"end": 4904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4878,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4959,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4971,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 4978,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 4978,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5078,
											"end": 5093,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5170,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5170,
											"end": 5191,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5188,
											"end": 5191,
											"name": "PUSH",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 5170,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5170,
											"end": 5191,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5170,
											"end": 5191,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 5170,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5016,
											"end": 5202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5001,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5013,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4988,
											"end": 5202,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5222,
											"end": 5298,
											"name": "PUSH",
											"source": 4,
											"value": "17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23"
										},
										{
											"begin": 5222,
											"end": 5298,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5246,
											"end": 5253,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5255,
											"end": 5270,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5255,
											"end": 5270,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5290,
											"end": 5297,
											"name": "PUSH",
											"source": 4,
											"value": "278D00"
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 5272,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5222,
											"end": 5298,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5222,
											"end": 5298,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5222,
											"end": 5298,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6040,
											"end": 6072,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6040,
											"end": 6072,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 6040,
											"end": 6072,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6022,
											"end": 6073,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6022,
											"end": 6073,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6121,
											"end": 6125,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 6109,
											"end": 6126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6109,
											"end": 6126,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 6109,
											"end": 6126,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6104,
											"end": 6106,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6089,
											"end": 6107,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6082,
											"end": 6127,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6143,
											"end": 6161,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6143,
											"end": 6161,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6143,
											"end": 6161,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6136,
											"end": 6170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6136,
											"end": 6170,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6136,
											"end": 6170,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6136,
											"end": 6170,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6201,
											"end": 6203,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6186,
											"end": 6204,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6186,
											"end": 6204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6244,
											"end": 6247,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 6229,
											"end": 6248,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6229,
											"end": 6248,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6222,
											"end": 6257,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6009,
											"end": 6012,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 5994,
											"end": 6013,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5222,
											"end": 5298,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5222,
											"end": 5298,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5222,
											"end": 5298,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5222,
											"end": 5298,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5222,
											"end": 5298,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5222,
											"end": 5298,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5222,
											"end": 5298,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 4623,
											"end": 5305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 5305,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2714,
											"end": 2778,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2714,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2761,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2761,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2714,
											"end": 2778,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10565,
											"end": 10575,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10544,
											"end": 10562,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10593,
											"end": 10610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10610,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10598,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 10593,
											"end": 10610,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10593,
											"end": 10610,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10610,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10593,
											"end": 10610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10610,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10610,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10593,
											"end": 10610,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 10593,
											"end": 10610,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10585,
											"end": 10630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 10585,
											"end": 10630,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10585,
											"end": 10630,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10585,
											"end": 10630,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10585,
											"end": 10630,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10585,
											"end": 10630,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6831,
											"end": 6833,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10585,
											"end": 10630,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10585,
											"end": 10630,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10585,
											"end": 10630,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6813,
											"end": 6834,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6872,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 6850,
											"end": 6868,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 6850,
											"end": 6868,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6850,
											"end": 6868,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6843,
											"end": 6873,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55736572206973206E6F742056697"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6882,
											"end": 6927,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6944,
											"end": 6962,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 6944,
											"end": 6962,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10585,
											"end": 10630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 6629,
											"end": 6968,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10585,
											"end": 10630,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 10585,
											"end": 10630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10663,
											"end": 10685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10685,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10645,
											"end": 10660,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10663,
											"end": 10685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10685,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10673,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 10663,
											"end": 10685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10663,
											"end": 10685,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10685,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10663,
											"end": 10685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10685,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 10693,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10711,
											"end": 10729,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10711,
											"end": 10729,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10711,
											"end": 10729,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10711,
											"end": 10729,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 10703,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10775,
											"end": 10789,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10792,
											"end": 10815,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 10801,
											"end": 10811,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10813,
											"end": 10814,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10792,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 10792,
											"end": 10815,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10792,
											"end": 10815,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 10792,
											"end": 10815,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10775,
											"end": 10815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10775,
											"end": 10815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10825,
											"end": 10841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10844,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 10856,
											"end": 10866,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10868,
											"end": 10869,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10871,
											"end": 10878,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10844,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 10844,
											"end": 10879,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10844,
											"end": 10879,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 10844,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10825,
											"end": 10879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10825,
											"end": 10879,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10911,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10893,
											"end": 10900,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10890,
											"end": 11082,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10890,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 10890,
											"end": 11082,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10943,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10933,
											"end": 10955,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10926,
											"end": 10955,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 10979,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 10974,
											"end": 10991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 10991,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 10991,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 10991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 10991,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 10999,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 10999,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10974,
											"end": 10999,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 10999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10974,
											"end": 10999,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10890,
											"end": 11082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 10890,
											"end": 11082,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10890,
											"end": 11082,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 10890,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11040,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11071,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11071,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11064,
											"end": 11071,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11064,
											"end": 11071,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 11030,
											"end": 11071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11064,
											"end": 11071,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11064,
											"end": 11071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11071,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 11030,
											"end": 11071,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11030,
											"end": 11071,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 11030,
											"end": 11071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11071,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11030,
											"end": 11071,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10890,
											"end": 11082,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 10890,
											"end": 11082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11095,
											"end": 11104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11092,
											"end": 11348,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11092,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 11092,
											"end": 11348,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11132,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11119,
											"end": 11132,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7636,
											"end": 7687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11119,
											"end": 11132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11132,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11132,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11132,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11141,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 11119,
											"end": 11141,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11119,
											"end": 11162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 11194,
											"end": 11202,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11204,
											"end": 11214,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11177,
											"end": 11193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 11177,
											"end": 11215,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11177,
											"end": 11215,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 11177,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11092,
											"end": 11348,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 11092,
											"end": 11348,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11092,
											"end": 11348,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 11092,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11283,
											"end": 11296,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11283,
											"end": 11296,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7636,
											"end": 7687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11257,
											"end": 11258,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11257,
											"end": 11258,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11296,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11305,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 11283,
											"end": 11305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11283,
											"end": 11326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11092,
											"end": 11348,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 11092,
											"end": 11348,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "PUSH",
											"source": 4,
											"value": "A3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B"
										},
										{
											"begin": 11372,
											"end": 11382,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11384,
											"end": 11385,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11387,
											"end": 11396,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11398,
											"end": 11405,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11363,
											"end": 11416,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 10534,
											"end": 11423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10534,
											"end": 11423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10534,
											"end": 11423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10534,
											"end": 11423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10487,
											"end": 11423,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7118,
											"end": 7125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7136,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 7136,
											"end": 7711,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7175,
											"end": 7195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7198,
											"end": 7211,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7198,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7198,
											"end": 7229,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7198,
											"end": 7229,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7291,
											"end": 7300,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7291,
											"end": 7300,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7251,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7251,
											"end": 7301,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7276,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7198,
											"end": 7229,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7198,
											"end": 7229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7251,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 7251,
											"end": 7301,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7251,
											"end": 7301,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7251,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7301,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7301,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 7244,
											"end": 7301,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7136,
											"end": 7711,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 7136,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7322,
											"end": 7327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7322,
											"end": 7332,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 7322,
											"end": 7332,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7331,
											"end": 7332,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7322,
											"end": 7332,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7318,
											"end": 7711,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7318,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 7318,
											"end": 7711,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7376,
											"end": 7395,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7395,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7353,
											"end": 7373,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7376,
											"end": 7395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7395,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7395,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7389,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 7376,
											"end": 7395,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7376,
											"end": 7395,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7395,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7376,
											"end": 7395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7395,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7407,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7376,
											"end": 7407,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7407,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 7478,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7469,
											"end": 7478,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7429,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7429,
											"end": 7479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7454,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7376,
											"end": 7407,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7429,
											"end": 7446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 7429,
											"end": 7479,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7318,
											"end": 7711,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 7318,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7500,
											"end": 7505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7500,
											"end": 7510,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 7500,
											"end": 7510,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7509,
											"end": 7510,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7500,
											"end": 7510,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7496,
											"end": 7711,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7496,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7496,
											"end": 7711,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7559,
											"end": 7575,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7575,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7559,
											"end": 7575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7575,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7569,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 7559,
											"end": 7575,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7559,
											"end": 7575,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7575,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7559,
											"end": 7575,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7575,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7587,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7559,
											"end": 7587,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7587,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7649,
											"end": 7660,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7649,
											"end": 7660,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7609,
											"end": 7661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7634,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7627,
											"end": 7634,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7587,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7559,
											"end": 7587,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7626,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 7609,
											"end": 7661,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7496,
											"end": 7711,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7496,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7699,
											"end": 7700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7496,
											"end": 7711,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 7496,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7717,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1668,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1732,
											"end": 1762,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2644,
											"end": 2704,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2644,
											"end": 2704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2689,
											"end": 2697,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2689,
											"end": 2697,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 8245,
											"end": 9215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8326,
											"end": 8336,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8305,
											"end": 8323,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8362,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 8354,
											"end": 8374,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8464,
											"end": 8466,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8446,
											"end": 8467,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8503,
											"end": 8505,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8483,
											"end": 8501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8476,
											"end": 8506,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55736572206973206E6F74206F6E204C6576656C203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8522,
											"end": 8540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8515,
											"end": 8567,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8584,
											"end": 8602,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8262,
											"end": 8608,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8346,
											"end": 8401,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8430,
											"end": 8455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8455,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 8427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8430,
											"end": 8455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8443,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 8430,
											"end": 8455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8430,
											"end": 8455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8430,
											"end": 8455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8455,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8430,
											"end": 8463,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 8473,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8545,
											"end": 8559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8562,
											"end": 8585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 8571,
											"end": 8581,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 8584,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8562,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 8562,
											"end": 8585,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8562,
											"end": 8585,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 8562,
											"end": 8585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8545,
											"end": 8585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8545,
											"end": 8585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8595,
											"end": 8611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8614,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 8626,
											"end": 8636,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8638,
											"end": 8639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8648,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8614,
											"end": 8625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 8614,
											"end": 8649,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8614,
											"end": 8649,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 8614,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8595,
											"end": 8649,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8595,
											"end": 8649,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8674,
											"end": 8681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8670,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8663,
											"end": 8681,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8660,
											"end": 8862,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8660,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 8660,
											"end": 8862,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8716,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8703,
											"end": 8728,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8696,
											"end": 8728,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8756,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 8748,
											"end": 8768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8768,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8768,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8768,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8768,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8776,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8776,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8748,
											"end": 8776,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8748,
											"end": 8776,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8660,
											"end": 8862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 8660,
											"end": 8862,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8660,
											"end": 8862,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 8660,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8820,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8844,
											"end": 8851,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8844,
											"end": 8851,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8832,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8844,
											"end": 8851,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8844,
											"end": 8851,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8807,
											"end": 8851,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8660,
											"end": 8862,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 8660,
											"end": 8862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8875,
											"end": 8884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 9136,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 9136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 8872,
											"end": 9136,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8912,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8899,
											"end": 8912,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7636,
											"end": 7687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8899,
											"end": 8912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8912,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8912,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8912,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8921,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 8899,
											"end": 8921,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8899,
											"end": 8942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8969,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 8986,
											"end": 8994,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8996,
											"end": 9006,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8969,
											"end": 8985,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8969,
											"end": 9007,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8969,
											"end": 9007,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 8969,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 9136,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 8872,
											"end": 9136,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 9136,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 8872,
											"end": 9136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9071,
											"end": 9084,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9071,
											"end": 9084,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7636,
											"end": 7687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9049,
											"end": 9050,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9049,
											"end": 9050,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9084,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9093,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 9071,
											"end": 9093,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9071,
											"end": 9114,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 9136,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 8872,
											"end": 9136,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9155,
											"end": 9208,
											"name": "PUSH",
											"source": 4,
											"value": "A3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B"
										},
										{
											"begin": 9164,
											"end": 9174,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9176,
											"end": 9177,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9188,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9190,
											"end": 9197,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9207,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9155,
											"end": 9208,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9155,
											"end": 9208,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9155,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 9155,
											"end": 9208,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 9155,
											"end": 9208,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9155,
											"end": 9208,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9155,
											"end": 9208,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9155,
											"end": 9208,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9155,
											"end": 9208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9155,
											"end": 9208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 9155,
											"end": 9208,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 9373,
											"end": 10329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9454,
											"end": 9464,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9433,
											"end": 9451,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9482,
											"end": 9502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9482,
											"end": 9502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9482,
											"end": 9502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9482,
											"end": 9490,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 9482,
											"end": 9502,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9482,
											"end": 9502,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9482,
											"end": 9502,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9482,
											"end": 9502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9482,
											"end": 9502,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9482,
											"end": 9502,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9482,
											"end": 9502,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 9482,
											"end": 9502,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9474,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 9474,
											"end": 9529,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9474,
											"end": 9529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9474,
											"end": 9529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9474,
											"end": 9529,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9474,
											"end": 9529,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9336,
											"end": 9338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9474,
											"end": 9529,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9474,
											"end": 9529,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9474,
											"end": 9529,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9318,
											"end": 9339,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9375,
											"end": 9377,
											"name": "PUSH",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9355,
											"end": 9373,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9348,
											"end": 9378,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "55736572206973206E6F74206F6E204C6576656C2031"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9394,
											"end": 9412,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 9394,
											"end": 9412,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9394,
											"end": 9412,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9439,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9456,
											"end": 9474,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 9456,
											"end": 9474,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9474,
											"end": 9529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 9134,
											"end": 9480,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9474,
											"end": 9529,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 9474,
											"end": 9529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9558,
											"end": 9571,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9558,
											"end": 9583,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9558,
											"end": 9591,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9609,
											"end": 9627,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 9601,
											"end": 9662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 9687,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9690,
											"end": 9713,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 9699,
											"end": 9709,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9711,
											"end": 9712,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9690,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 9690,
											"end": 9713,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9690,
											"end": 9713,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 9690,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 9713,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9673,
											"end": 9713,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9742,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 9754,
											"end": 9764,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9766,
											"end": 9767,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9769,
											"end": 9776,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9742,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 9742,
											"end": 9777,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9742,
											"end": 9777,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 9742,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9802,
											"end": 9809,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9791,
											"end": 9798,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9791,
											"end": 9809,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9788,
											"end": 9990,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9788,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 9788,
											"end": 9990,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9844,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9856,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9824,
											"end": 9856,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9884,
											"name": "PUSH",
											"source": 4,
											"value": "D"
										},
										{
											"begin": 9876,
											"end": 9896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9896,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9896,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9904,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9904,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9876,
											"end": 9904,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9904,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9876,
											"end": 9904,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9788,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 9788,
											"end": 9990,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9788,
											"end": 9990,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 9788,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9948,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9972,
											"end": 9979,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9972,
											"end": 9979,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9972,
											"end": 9979,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9972,
											"end": 9979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9935,
											"end": 9979,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9788,
											"end": 9990,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 9788,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10003,
											"end": 10012,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10000,
											"end": 10254,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10000,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 10000,
											"end": 10254,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7636,
											"end": 7687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10049,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 10027,
											"end": 10049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10027,
											"end": 10070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10123,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 10102,
											"end": 10110,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10112,
											"end": 10122,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 10085,
											"end": 10123,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10085,
											"end": 10123,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 10085,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10000,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10000,
											"end": 10254,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10000,
											"end": 10254,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 10000,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10189,
											"end": 10202,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10189,
											"end": 10202,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7636,
											"end": 7687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10165,
											"end": 10166,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10165,
											"end": 10166,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10202,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10211,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 10189,
											"end": 10211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10189,
											"end": 10232,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10000,
											"end": 10254,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10000,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "PUSH",
											"source": 4,
											"value": "A3DFF5863D601223D9B31A0253B97A6C2085DACA56089B92836B4B6A1991E04B"
										},
										{
											"begin": 10278,
											"end": 10288,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10290,
											"end": 10291,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10293,
											"end": 10302,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10304,
											"end": 10311,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 10313,
											"end": 10321,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 10269,
											"end": 10322,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 5504,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5601,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 5590,
											"end": 5601,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5601,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5627,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5627,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 5579,
											"end": 5627,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5627,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5616,
											"end": 5627,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 5616,
											"end": 5627,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5612,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5627,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5605,
											"end": 5627,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5579,
											"end": 5627,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 5579,
											"end": 5627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 5571,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5713,
											"end": 5723,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5692,
											"end": 5710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5760,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5755,
											"end": 5772,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5754,
											"end": 5772,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5746,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 5746,
											"end": 5808,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5746,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5746,
											"end": 5808,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5746,
											"end": 5808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5746,
											"end": 5808,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10208,
											"end": 10210,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5746,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5746,
											"end": 5808,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5746,
											"end": 5808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10190,
											"end": 10211,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10247,
											"end": 10249,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10227,
											"end": 10245,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10227,
											"end": 10245,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10227,
											"end": 10245,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10220,
											"end": 10250,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10286,
											"end": 10319,
											"name": "PUSH",
											"source": 5,
											"value": "596F7527726520616C726561647920696E2074686520566970205374616B6500"
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10259,
											"end": 10320,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10337,
											"end": 10355,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10337,
											"end": 10355,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 10006,
											"end": 10361,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5808,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 5746,
											"end": 5808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5840,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5827,
											"end": 5840,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5878,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5199,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5199,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5827,
											"end": 5840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5840,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5840,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5853,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 5827,
											"end": 5853,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "tag",
											"source": 4,
											"value": "312"
										},
										{
											"begin": 5827,
											"end": 5889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "F"
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5917,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5924,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5924,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5924,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5920,
											"end": 5924,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5900,
											"end": 5924,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5924,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6021,
											"end": 6036,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 6113,
											"end": 6135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6135,
											"name": "PUSH",
											"source": 4,
											"value": "4B0"
										},
										{
											"begin": 6113,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6113,
											"end": 6135,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6113,
											"end": 6135,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 6113,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5959,
											"end": 6146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5944,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 5956,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5934,
											"end": 6146,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6169,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23"
										},
										{
											"begin": 6169,
											"end": 6245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5945,
											"end": 5955,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5945,
											"end": 5955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6193,
											"end": 6200,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6202,
											"end": 6217,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 6219,
											"end": 6244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 6202,
											"end": 6217,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6237,
											"end": 6244,
											"name": "PUSH",
											"source": 4,
											"value": "76A700"
										},
										{
											"begin": 6219,
											"end": 6244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6219,
											"end": 6244,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2957,
											"end": 2966,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2957,
											"end": 2979,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2979,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2957,
											"end": 2979,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2989,
											"end": 2998,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2989,
											"end": 3011,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3021,
											"end": 3032,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3047,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2846,
											"end": 3054,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2006,
											"end": 2028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11079,
											"end": 11081,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11061,
											"end": 11082,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11118,
											"end": 11120,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11098,
											"end": 11116,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11091,
											"end": 11121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11157,
											"end": 11191,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 11137,
											"end": 11155,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 11137,
											"end": 11155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11137,
											"end": 11155,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11130,
											"end": 11192,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11208,
											"end": 11226,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 11208,
											"end": 11226,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11208,
											"end": 11226,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11201,
											"end": 11237,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11254,
											"end": 11273,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 11254,
											"end": 11273,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 10877,
											"end": 11279,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1998,
											"end": 2071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2100,
											"end": 2108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 2081,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1918,
											"end": 2116,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1082,
											"end": 1089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1108,
											"end": 1114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1248,
											"end": 1271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 1240,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3320,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3311,
											"end": 3333,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3333,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3311,
											"end": 3333,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3352,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3343,
											"end": 3365,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3365,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3365,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3384,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3375,
											"end": 3397,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3397,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3397,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3375,
											"end": 3397,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3416,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 3407,
											"end": 3429,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3439,
											"end": 3450,
											"name": "PUSH",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 3439,
											"end": 3465,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 3475,
											"end": 3501,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3136,
											"end": 3508,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6464,
											"end": 6468,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6522,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6512,
											"end": 6522,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6522,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6509,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 6509,
											"end": 6843,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6564,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6570,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6581,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6551,
											"end": 6581,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6551,
											"end": 6581,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6509,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 6509,
											"end": 6843,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6509,
											"end": 6843,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 6509,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6613,
											"end": 6618,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6613,
											"end": 6623,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6613,
											"end": 6623,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6622,
											"end": 6623,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6613,
											"end": 6623,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6609,
											"end": 6843,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6609,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 6609,
											"end": 6843,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6652,
											"end": 6671,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6652,
											"end": 6671,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6652,
											"end": 6671,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6652,
											"end": 6671,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6652,
											"end": 6671,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6652,
											"end": 6665,
											"name": "PUSH",
											"source": 4,
											"value": "E"
										},
										{
											"begin": 6652,
											"end": 6671,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6652,
											"end": 6671,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6652,
											"end": 6671,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6652,
											"end": 6671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6652,
											"end": 6671,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6652,
											"end": 6682,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6652,
											"end": 6682,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6652,
											"end": 6682,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6609,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 6609,
											"end": 6843,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6609,
											"end": 6843,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 6609,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6712,
											"end": 6717,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6721,
											"end": 6722,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6712,
											"end": 6722,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6708,
											"end": 6843,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6708,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 6708,
											"end": 6843,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6751,
											"end": 6767,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6751,
											"end": 6767,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6751,
											"end": 6767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6751,
											"end": 6767,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6751,
											"end": 6767,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6751,
											"end": 6767,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6751,
											"end": 6761,
											"name": "PUSH",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 6751,
											"end": 6767,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6751,
											"end": 6767,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6751,
											"end": 6767,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6751,
											"end": 6767,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6751,
											"end": 6767,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6751,
											"end": 6778,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6751,
											"end": 6778,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6751,
											"end": 6778,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6708,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 6708,
											"end": 6843,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6708,
											"end": 6843,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 6708,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6832,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6832,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6820,
											"end": 6832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6820,
											"end": 6832,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6820,
											"end": 6832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 6820,
											"end": 6832,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6708,
											"end": 6843,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 6708,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6859,
											"end": 6874,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 6859,
											"end": 6889,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6859,
											"end": 6889,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6859,
											"end": 6889,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6397,
											"end": 6896,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3657,
											"end": 4407,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3746,
											"end": 3755,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3746,
											"end": 3755,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3742,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3755,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3755,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3779,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3779,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 3735,
											"end": 3779,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3779,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3759,
											"end": 3766,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3759,
											"end": 3779,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3759,
											"end": 3779,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3735,
											"end": 3779,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 3735,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 3727,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3865,
											"end": 3875,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3844,
											"end": 3862,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3899,
											"end": 3907,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 3899,
											"end": 3919,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3898,
											"end": 3919,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 3890,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3973,
											"end": 3986,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5088,
											"end": 5103,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5104,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4020,
											"end": 4024,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5120,
											"end": 5138,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5113,
											"end": 5156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5199,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5165,
											"end": 5199,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3986,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 3999,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 3973,
											"end": 3999,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5005,
											"end": 5023,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "tag",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 3973,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4054,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4066,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4073,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4073,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4046,
											"end": 4073,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4046,
											"end": 4073,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4073,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4046,
											"end": 4073,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4175,
											"end": 4190,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4268,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 4268,
											"end": 4289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4286,
											"end": 4289,
											"name": "PUSH",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 4268,
											"end": 4289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4268,
											"end": 4289,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4289,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 4268,
											"end": 4289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4111,
											"end": 4300,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4096,
											"name": "PUSH",
											"source": 4,
											"value": "C"
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4108,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4300,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4325,
											"end": 4400,
											"name": "PUSH",
											"source": 4,
											"value": "17849BB8C713DE96B48F218D3BACC9AF082261C3CCC7C6DCCEBE70E667B22F23"
										},
										{
											"begin": 4325,
											"end": 4400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4097,
											"end": 4107,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4097,
											"end": 4107,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4349,
											"end": 4356,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4358,
											"end": 4373,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4375,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 4358,
											"end": 4373,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4393,
											"end": 4399,
											"name": "PUSH",
											"source": 4,
											"value": "93A80"
										},
										{
											"begin": 4375,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4375,
											"end": 4399,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11997,
											"end": 11999,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11979,
											"end": 12000,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12036,
											"end": 12038,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 12016,
											"end": 12034,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12016,
											"end": 12034,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12016,
											"end": 12034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12009,
											"end": 12039,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12055,
											"end": 12073,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 12055,
											"end": 12073,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12055,
											"end": 12073,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12048,
											"end": 12098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 12115,
											"end": 12133,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 11795,
											"end": 12139,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 1669,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2168,
											"end": 2183,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 378,
											"end": 410,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 378,
											"end": 410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 378,
											"end": 410,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 360,
											"end": 411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 360,
											"end": 411,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 333,
											"end": 351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2227,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11431,
											"end": 12026,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 11431,
											"end": 12026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11612,
											"end": 11613,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11574,
											"end": 11595,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11574,
											"end": 11595,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11598,
											"end": 11614,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11642,
											"end": 11655,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11642,
											"end": 11655,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11642,
											"end": 11655,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11642,
											"end": 11655,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11642,
											"end": 11655,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11642,
											"end": 11655,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "tag",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11631,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11624,
											"end": 11656,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11624,
											"end": 11656,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11656,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11656,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11656,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11691,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "442"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11676,
											"end": 11696,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11696,
											"name": "PUSH",
											"source": 4,
											"value": "AD5C4648"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "tag",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "tag",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 11676,
											"end": 11698,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11670,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11671,
											"end": 11672,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11666,
											"end": 11698,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11698,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11666,
											"end": 11698,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11722,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11709,
											"end": 11722,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11739,
											"end": 11754,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7654,
											"end": 7686,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7636,
											"end": 7687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7696,
											"end": 7730,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11709,
											"end": 11722,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11722,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11722,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11730,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 11709,
											"end": 11730,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "tag",
											"source": 4,
											"value": "390"
										},
										{
											"begin": 11709,
											"end": 11769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "791AC947"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11805,
											"end": 11820,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 11805,
											"end": 11871,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 11871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 11871,
											"name": "PUSH",
											"source": 4,
											"value": "791AC947"
										},
										{
											"begin": 11805,
											"end": 11871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11885,
											"end": 11896,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11885,
											"end": 11896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11910,
											"end": 11911,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11910,
											"end": 11911,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11953,
											"end": 11957,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11953,
											"end": 11957,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11971,
											"end": 11980,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 11971,
											"end": 11980,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11994,
											"end": 12009,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 11994,
											"end": 12009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11805,
											"end": 12019,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11505,
											"end": 12026,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 12026,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 12026,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11431,
											"end": 12026,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7723,
											"end": 8087,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 7723,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7828,
											"end": 7835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7867,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 7885,
											"end": 7897,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7867,
											"end": 7882,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7867,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 7867,
											"end": 7897,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7867,
											"end": 7897,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 7867,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7846,
											"end": 7897,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7915,
											"end": 7940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7973,
											"end": 7981,
											"name": "PUSH",
											"source": 4,
											"value": "1E13380"
										},
										{
											"begin": 7964,
											"end": 7969,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 7945,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 7956,
											"end": 7960,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7945,
											"end": 7953,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 7945,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 7945,
											"end": 7960,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7945,
											"end": 7960,
											"name": "tag",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 7945,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7944,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 7944,
											"end": 7969,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7944,
											"end": 7969,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7944,
											"end": 7969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 7944,
											"end": 7969,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7944,
											"end": 7969,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 7944,
											"end": 7969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 7943,
											"end": 7981,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 7981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7943,
											"end": 7981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 7943,
											"end": 7981,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7943,
											"end": 7981,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 7943,
											"end": 7981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7915,
											"end": 7981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7991,
											"end": 8014,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8017,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 7915,
											"end": 7981,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8017,
											"end": 8027,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8017,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "399"
										},
										{
											"begin": 8017,
											"end": 8047,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8017,
											"end": 8047,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 8017,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 8047,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 7723,
											"end": 8087,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7723,
											"end": 8087,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2378,
											"end": 2395,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2343,
											"end": 2359,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2410,
											"end": 2450,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2333,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2270,
											"end": 2457,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1863,
											"end": 1978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1168,
											"end": 1175,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 1403,
											"end": 1441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1936,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 1958,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 422,
											"end": 602,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 422,
											"end": 602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 481,
											"end": 487,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 534,
											"end": 536,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 513,
											"end": 520,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 509,
											"end": 532,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 505,
											"end": 537,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 502,
											"end": 554,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 502,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 502,
											"end": 554,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 550,
											"end": 551,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 547,
											"end": 548,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 540,
											"end": 552,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 502,
											"end": 554,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 502,
											"end": 554,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 573,
											"end": 596,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 573,
											"end": 596,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 422,
											"end": 602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 422,
											"end": 602,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1021,
											"end": 1152,
											"name": "tag",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 1021,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1096,
											"end": 1127,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1096,
											"end": 1127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1128,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1146,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 1076,
											"end": 1146,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1142,
											"end": 1143,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1139,
											"end": 1140,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1144,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1157,
											"end": 1404,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1157,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1216,
											"end": 1222,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1269,
											"end": 1271,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1257,
											"end": 1266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1248,
											"end": 1255,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1244,
											"end": 1267,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1272,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1285,
											"end": 1286,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1275,
											"end": 1287,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "tag",
											"source": 5,
											"value": "425"
										},
										{
											"begin": 1237,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1324,
											"end": 1333,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1311,
											"end": 1334,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1343,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 1343,
											"end": 1374,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1733,
											"end": 1889,
											"name": "tag",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 1733,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1799,
											"end": 1819,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1859,
											"end": 1863,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1848,
											"end": 1864,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1848,
											"end": 1864,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1865,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1838,
											"end": 1865,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 1828,
											"end": 1883,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1877,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1869,
											"end": 1881,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1883,
											"name": "tag",
											"source": 5,
											"value": "429"
										},
										{
											"begin": 1828,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1889,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 1889,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1894,
											"end": 2279,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1894,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2040,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2026,
											"end": 2035,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2017,
											"end": 2024,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2036,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2009,
											"end": 2041,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2058,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 2006,
											"end": 2058,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2054,
											"end": 2055,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2052,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2044,
											"end": 2056,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2058,
											"name": "tag",
											"source": 5,
											"value": "431"
										},
										{
											"begin": 2006,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2093,
											"end": 2102,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2103,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "tag",
											"source": 5,
											"value": "432"
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2167,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2186,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 2218,
											"end": 2220,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2203,
											"end": 2221,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 2186,
											"end": 2222,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2186,
											"end": 2222,
											"name": "tag",
											"source": 5,
											"value": "433"
										},
										{
											"begin": 2186,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2222,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2176,
											"end": 2222,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2271,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2258,
											"end": 2267,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2272,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2273,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2231,
											"end": 2273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2279,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2279,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2279,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 2279,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2583,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2585,
											"end": 2591,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2640,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2626,
											"end": 2635,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2617,
											"end": 2624,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2613,
											"end": 2636,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2609,
											"end": 2641,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2658,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 2606,
											"end": 2658,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2654,
											"end": 2655,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2651,
											"end": 2652,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2644,
											"end": 2656,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2658,
											"name": "tag",
											"source": 5,
											"value": "436"
										},
										{
											"begin": 2606,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2677,
											"end": 2700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2700,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2700,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2747,
											"end": 2749,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2732,
											"end": 2750,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 2751,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2719,
											"end": 2751,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2798,
											"end": 2800,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2801,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2802,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2802,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2808,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2813,
											"end": 3336,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 2813,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2917,
											"end": 2923,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2931,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2933,
											"end": 2939,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2949,
											"end": 2955,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3010,
											"end": 3013,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 2998,
											"end": 3007,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2989,
											"end": 2996,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2985,
											"end": 3008,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2981,
											"end": 3014,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3025,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3017,
											"end": 3029,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "tag",
											"source": 5,
											"value": "438"
										},
										{
											"begin": 2978,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3073,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3073,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3050,
											"end": 3073,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3122,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3123,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3124,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3092,
											"end": 3124,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3175,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3143,
											"end": 3175,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 3222,
											"end": 3224,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3207,
											"end": 3225,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3226,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3273,
											"end": 3276,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3258,
											"end": 3277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3258,
											"end": 3277,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3245,
											"end": 3278,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3328,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 3310,
											"end": 3329,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3330,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3297,
											"end": 3330,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2813,
											"end": 3336,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2813,
											"end": 3336,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3341,
											"end": 3658,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 3341,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3407,
											"end": 3413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3415,
											"end": 3421,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3468,
											"end": 3470,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3465,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3454,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3443,
											"end": 3466,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3471,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3488,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3488,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 3436,
											"end": 3488,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3485,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3482,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3474,
											"end": 3486,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3488,
											"name": "tag",
											"source": 5,
											"value": "440"
										},
										{
											"begin": 3436,
											"end": 3488,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3523,
											"end": 3532,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3533,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 3567,
											"end": 3572,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3542,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 3542,
											"end": 3573,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3542,
											"end": 3573,
											"name": "tag",
											"source": 5,
											"value": "441"
										},
										{
											"begin": 3542,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3592,
											"end": 3597,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3616,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "442"
										},
										{
											"begin": 3648,
											"end": 3650,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3633,
											"end": 3651,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3633,
											"end": 3651,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3652,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "413"
										},
										{
											"begin": 3616,
											"end": 3652,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3616,
											"end": 3652,
											"name": "tag",
											"source": 5,
											"value": "442"
										},
										{
											"begin": 3616,
											"end": 3652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3606,
											"end": 3652,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3606,
											"end": 3652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3658,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3658,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3658,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3658,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3341,
											"end": 3658,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3663,
											"end": 4003,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 3663,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3865,
											"end": 3867,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3868,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3847,
											"end": 3868,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3904,
											"end": 3906,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3907,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3938,
											"end": 3940,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3923,
											"end": 3941,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3916,
											"end": 3962,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3979,
											"end": 3997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3663,
											"end": 4003,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4008,
											"end": 4422,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 4008,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4210,
											"end": 4212,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4213,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4213,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4213,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4229,
											"end": 4247,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4229,
											"end": 4247,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4229,
											"end": 4247,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4222,
											"end": 4252,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4288,
											"end": 4322,
											"name": "PUSH",
											"source": 5,
											"value": "416D6F756E74206E6565647320746F206265206D6F7265207468616E206D696E"
										},
										{
											"begin": 4283,
											"end": 4285,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4261,
											"end": 4323,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40C2DCC840D8CAE6E640E8D0C2DC40DAC2F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4354,
											"end": 4356,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4339,
											"end": 4357,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4339,
											"end": 4357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4332,
											"end": 4380,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4397,
											"end": 4416,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4416,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4008,
											"end": 4422,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4427,
											"end": 4825,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 4427,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4632,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4668,
											"end": 4670,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4648,
											"end": 4666,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4641,
											"end": 4671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4707,
											"end": 4741,
											"name": "PUSH",
											"source": 5,
											"value": "596F7527726520616C726561647920696E2074686973205374616B65206C6576"
										},
										{
											"begin": 4702,
											"end": 4704,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4742,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4773,
											"end": 4775,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4758,
											"end": 4776,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4758,
											"end": 4776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4751,
											"end": 4783,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4815,
											"end": 4818,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4800,
											"end": 4819,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4800,
											"end": 4819,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4427,
											"end": 4825,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5210,
											"end": 5487,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 5210,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5283,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5330,
											"end": 5332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5318,
											"end": 5327,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5309,
											"end": 5316,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5305,
											"end": 5328,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5301,
											"end": 5333,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5298,
											"end": 5350,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5298,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 5298,
											"end": 5350,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5346,
											"end": 5347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5343,
											"end": 5344,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5336,
											"end": 5348,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5298,
											"end": 5350,
											"name": "tag",
											"source": 5,
											"value": "448"
										},
										{
											"begin": 5298,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5378,
											"end": 5387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5372,
											"end": 5388,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5431,
											"end": 5436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5424,
											"end": 5437,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5417,
											"end": 5438,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5410,
											"end": 5415,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5439,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5397,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5397,
											"end": 5457,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5453,
											"end": 5454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5451,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5619,
											"name": "tag",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 5492,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5563,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 5548,
											"end": 5551,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5544,
											"end": 5564,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 5541,
											"end": 5542,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5565,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5584,
											"end": 5588,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 5581,
											"end": 5582,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5574,
											"end": 5589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5608,
											"end": 5612,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5605,
											"end": 5606,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5598,
											"end": 5613,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5752,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 5624,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5664,
											"end": 5667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5691,
											"end": 5697,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5689,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5685,
											"end": 5698,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5682,
											"end": 5721,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5682,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 5682,
											"end": 5721,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 5701,
											"end": 5719,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 5701,
											"end": 5719,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5701,
											"end": 5719,
											"name": "tag",
											"source": 5,
											"value": "453"
										},
										{
											"begin": 5701,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5624,
											"end": 5752,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6268,
											"end": 6624,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 6268,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6470,
											"end": 6472,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6473,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6452,
											"end": 6473,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6452,
											"end": 6473,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6489,
											"end": 6507,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6489,
											"end": 6507,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6489,
											"end": 6507,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6482,
											"end": 6512,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6548,
											"end": 6582,
											"name": "PUSH",
											"source": 5,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6543,
											"end": 6545,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6528,
											"end": 6546,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6521,
											"end": 6583,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6615,
											"end": 6617,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6268,
											"end": 6624,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6973,
											"end": 7327,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 6973,
											"end": 7327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7175,
											"end": 7177,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7157,
											"end": 7178,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7214,
											"end": 7216,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 7194,
											"end": 7212,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7212,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7194,
											"end": 7212,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7187,
											"end": 7217,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7253,
											"end": 7285,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420656E6F7567682062616C616E636520746F2077697468647261770000"
										},
										{
											"begin": 7248,
											"end": 7250,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7251,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7233,
											"end": 7251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7226,
											"end": 7286,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7318,
											"end": 7320,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7303,
											"end": 7321,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6973,
											"end": 7327,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7332,
											"end": 7457,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 7332,
											"end": 7457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7372,
											"end": 7376,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7401,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7397,
											"end": 7398,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7402,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7391,
											"end": 7425,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7391,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 7391,
											"end": 7425,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "tag",
											"source": 5,
											"value": "460"
										},
										{
											"begin": 7405,
											"end": 7423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7442,
											"end": 7451,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7442,
											"end": 7451,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7332,
											"end": 7457,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7741,
											"end": 8257,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 7741,
											"end": 8257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8018,
											"end": 8050,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 8018,
											"end": 8050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8018,
											"end": 8050,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 8018,
											"end": 8050,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8000,
											"end": 8051,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8000,
											"end": 8051,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8103,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 8087,
											"end": 8104,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8087,
											"end": 8104,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8087,
											"end": 8104,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8087,
											"end": 8104,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8082,
											"end": 8084,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8067,
											"end": 8085,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8067,
											"end": 8085,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8060,
											"end": 8105,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8162,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8141,
											"end": 8163,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8136,
											"end": 8138,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8114,
											"end": 8164,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8195,
											"end": 8197,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8173,
											"end": 8207,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8238,
											"end": 8241,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 8223,
											"end": 8242,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8223,
											"end": 8242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8216,
											"end": 8251,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7987,
											"end": 7990,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 7972,
											"end": 7991,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7972,
											"end": 7991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7741,
											"end": 8257,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12276,
											"end": 12403,
											"name": "tag",
											"source": 5,
											"value": "380"
										},
										{
											"begin": 12276,
											"end": 12403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12337,
											"end": 12347,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 12332,
											"end": 12335,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 12328,
											"end": 12348,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 12325,
											"end": 12326,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12318,
											"end": 12349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12368,
											"end": 12372,
											"name": "PUSH",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 12365,
											"end": 12366,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 12358,
											"end": 12373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 12392,
											"end": 12396,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 12389,
											"end": 12390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12382,
											"end": 12397,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12408,
											"end": 12659,
											"name": "tag",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 12408,
											"end": 12659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12478,
											"end": 12484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12531,
											"end": 12533,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12519,
											"end": 12528,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12510,
											"end": 12517,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 12506,
											"end": 12529,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 12502,
											"end": 12534,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 12499,
											"end": 12551,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 12499,
											"end": 12551,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 12499,
											"end": 12551,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12547,
											"end": 12548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12544,
											"end": 12545,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12537,
											"end": 12549,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12499,
											"end": 12551,
											"name": "tag",
											"source": 5,
											"value": "475"
										},
										{
											"begin": 12499,
											"end": 12551,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12579,
											"end": 12588,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12573,
											"end": 12589,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 12598,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 12623,
											"end": 12628,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12598,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "412"
										},
										{
											"begin": 12598,
											"end": 12629,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12664,
											"end": 13644,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 12664,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12926,
											"end": 12930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12974,
											"end": 12977,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 12963,
											"end": 12972,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 12959,
											"end": 12978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13005,
											"end": 13011,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 12994,
											"end": 13003,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 12987,
											"end": 13012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13031,
											"end": 13033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 13069,
											"end": 13075,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 13064,
											"end": 13066,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13053,
											"end": 13062,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13049,
											"end": 13067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13042,
											"end": 13076,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13112,
											"end": 13115,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 13107,
											"end": 13109,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 13096,
											"end": 13105,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13092,
											"end": 13110,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13085,
											"end": 13116,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13136,
											"end": 13142,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13171,
											"end": 13177,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 13165,
											"end": 13178,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 13202,
											"end": 13208,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 13194,
											"end": 13200,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13187,
											"end": 13209,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13240,
											"end": 13243,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 13229,
											"end": 13238,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 13225,
											"end": 13244,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13218,
											"end": 13244,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13218,
											"end": 13244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13279,
											"end": 13281,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13271,
											"end": 13277,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 13267,
											"end": 13282,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13253,
											"end": 13282,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13253,
											"end": 13282,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 13300,
											"end": 13301,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13505,
											"name": "tag",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 13310,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13324,
											"end": 13330,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13321,
											"end": 13322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13318,
											"end": 13331,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 13310,
											"end": 13505,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13310,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 13310,
											"end": 13505,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13389,
											"end": 13402,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 13389,
											"end": 13402,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13385,
											"end": 13424,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13373,
											"end": 13425,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13373,
											"end": 13425,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13480,
											"end": 13495,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13480,
											"end": 13495,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13480,
											"end": 13495,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13480,
											"end": 13495,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 13445,
											"end": 13457,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13445,
											"end": 13457,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13445,
											"end": 13457,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13445,
											"end": 13457,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 13421,
											"end": 13422,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 13339,
											"end": 13348,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13310,
											"end": 13505,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "478"
										},
										{
											"begin": 13310,
											"end": 13505,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13310,
											"end": 13505,
											"name": "tag",
											"source": 5,
											"value": "480"
										},
										{
											"begin": 13310,
											"end": 13505,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13561,
											"end": 13593,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 13561,
											"end": 13593,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13561,
											"end": 13593,
											"name": "SWAP7",
											"source": 5
										},
										{
											"begin": 13561,
											"end": 13593,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13556,
											"end": 13558,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 13541,
											"end": 13559,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 13541,
											"end": 13559,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13534,
											"end": 13594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13625,
											"end": 13628,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 13610,
											"end": 13629,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 13603,
											"end": 13638,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13522,
											"end": 13525,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 12664,
											"end": 13644,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12664,
											"end": 13644,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13649,
											"end": 13817,
											"name": "tag",
											"source": 5,
											"value": "399"
										},
										{
											"begin": 13649,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13689,
											"end": 13696,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13755,
											"end": 13756,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 13751,
											"end": 13752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13747,
											"end": 13753,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 13743,
											"end": 13757,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 13740,
											"end": 13741,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 13737,
											"end": 13758,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 13732,
											"end": 13733,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13725,
											"end": 13734,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13718,
											"end": 13735,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13714,
											"end": 13759,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13782,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 13711,
											"end": 13782,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "483"
										},
										{
											"begin": 13711,
											"end": 13782,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13762,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "483"
										},
										{
											"begin": 13762,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "414"
										},
										{
											"begin": 13762,
											"end": 13780,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 13762,
											"end": 13780,
											"name": "tag",
											"source": 5,
											"value": "483"
										},
										{
											"begin": 13762,
											"end": 13780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13802,
											"end": 13811,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 13802,
											"end": 13811,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13649,
											"end": 13817,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 13822,
											"end": 14039,
											"name": "tag",
											"source": 5,
											"value": "401"
										},
										{
											"begin": 13822,
											"end": 14039,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 13862,
											"end": 13863,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13888,
											"end": 13889,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 13878,
											"end": 14010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "485"
										},
										{
											"begin": 13878,
											"end": 14010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 13932,
											"end": 13942,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 13927,
											"end": 13930,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 13923,
											"end": 13943,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 13920,
											"end": 13921,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13913,
											"end": 13944,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13967,
											"end": 13971,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 13964,
											"end": 13965,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 13957,
											"end": 13972,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 13995,
											"end": 13999,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 13992,
											"end": 13993,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 13985,
											"end": 14000,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 13878,
											"end": 14010,
											"name": "tag",
											"source": 5,
											"value": "485"
										},
										{
											"begin": 13878,
											"end": 14010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14024,
											"end": 14033,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 14024,
											"end": 14033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 13822,
											"end": 14039,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"acceptedToken()": "451c3d80",
							"enterLevel0(uint256)": "fe2981b5",
							"enterLevel1(uint256)": "1ed81ff8",
							"enterVip(uint256)": "bf01651a",
							"getInterest(address,uint8,uint256)": "69e06848",
							"isLevel0(address)": "6296e750",
							"isLevel1(address)": "635ef285",
							"isOnTime(address,uint8)": "f7edf9ab",
							"isVip(address)": "84203f4b",
							"level0APY()": "8275b181",
							"level0Balance(address)": "67911ba4",
							"level0Max()": "71a1609b",
							"level0Min()": "6505cf31",
							"level1APY()": "1ff08fee",
							"level1Balance(address)": "7fe509d7",
							"level1Max()": "d3900a52",
							"level1Min()": "01ef4739",
							"levelVipMax()": "8f0fb2b7",
							"levelVipMin()": "91789cef",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"setNewAPY(uint256,uint256,uint256)": "e5d15701",
							"setNewMaxMin(uint256,uint256,uint256,uint256,uint256,uint256)": "f4217e1e",
							"transferOwnership(address)": "f2fde38b",
							"uniswapV2Router()": "1694505e",
							"unpause()": "3f4ba83a",
							"vipBalance(address)": "97e9c5fe",
							"vipLevelAPY()": "32938e3a",
							"withdrawLevel0(uint256)": "927e5998",
							"withdrawLevel1(uint256)": "bb664864",
							"withdrawVip(uint256)": "6636389e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"class\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeEnd\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"class\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"onTime\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"earnings\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptedToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterLevel0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterLevel1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enterVip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"class\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"getInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLevel0\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isLevel1\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"class\",\"type\":\"uint8\"}],\"name\":\"isOnTime\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isVip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level0APY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"level0Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStarted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeFinish\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level0Max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level0Min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level1APY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"level1Balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStarted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeFinish\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level1Max\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"level1Min\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levelVipMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levelVipMin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level0APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level1APY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vipLevelAPY\",\"type\":\"uint256\"}],\"name\":\"setNewAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_level0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level0Max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_level1Max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_levelVipMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_levelVipMax\",\"type\":\"uint256\"}],\"name\":\"setNewMaxMin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IDexRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vipBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeStarted\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeFinish\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vipLevelAPY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawLevel0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawLevel1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawVip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"enterLevel0(uint256)\":{\"details\":\"Join to a staking class. Requirements:   - User has not enter the staking class previously. \"},\"enterLevel1(uint256)\":{\"details\":\"Join to a staking class. Requirements:    - User has not enter the staking class previously.   \"},\"enterVip(uint256)\":{\"details\":\"Join to a staking class. Requirements: - _amount must be greather than enter fee. - User has not enter the staking class previously.    \"},\"getInterest(address,uint8,uint256)\":{\"details\":\"Get interest earned during the staking time. classes : 0 - level 0, 1 - level 1, 2 - Vip\"},\"isOnTime(address,uint8)\":{\"details\":\"Checks if the staking has reached the timeFinish limit. classes :0 - level 0, 1 - level 1, 2 - Vip\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setNewAPY(uint256,uint256,uint256)\":{\"details\":\"Change APY for all categories.   \"},\"setNewMaxMin(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Change max and min values for all categories.   \"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawLevel0(uint256)\":{\"details\":\"Withdraw from a staking class. Requirements: - Msg.sender should have an active deposit in the class.\"},\"withdrawLevel1(uint256)\":{\"details\":\"Withdraw from a staking class. Requirements: - Msg.sender should have an active deposit in the class.\"},\"withdrawVip(uint256)\":{\"details\":\"Withdraw from a staking class. Requirements: - Msg.sender should have an active deposit in the class.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"staking.sol\":\"mochiStaking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0xe68ed7fb8766ed1e888291f881e36b616037f852b37d96877045319ad298ba87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d491a2ca79dbf44bc02e876e21a5847a2cbcc011188532ad8662cdc1c134a4e\",\"dweb:/ipfs/QmUQXhSV8ZvHLzfdG89ZNSh1nLrAYyjnNBLznJGwGcwVk8\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"staking.sol\":{\"keccak256\":\"0x6cd84f4f6666b171c8eb585abb69730f3d656a6a13f0c87c5cf6a9061eb971b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70f2e75896a9562e3cb7f98d6a7203439ee74901fdb44923c882bb0c7312f005\",\"dweb:/ipfs/QmUUGQQQNseMiTmsgw1uZ9N9dD8q7mxZjYx61H8CyZpjS3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Ownable": [
							104
						]
					},
					"id": 105,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 105,
							"sourceUnit": 297,
							"src": "112:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "668:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "668:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "144:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 104,
							"linearizedBaseContracts": [
								104,
								296
							],
							"name": "Ownable",
							"nameLocation": "657:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "698:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 104,
									"src": "682:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "682:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "717:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "754:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "738:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "785:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "769:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:57:0"
									},
									"src": "711:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "911:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "940:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "940:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "921:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "921:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "921:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "801:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "908:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "911:0:0"
									},
									"scope": 104,
									"src": "897:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1091:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1108:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1101:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "966:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1045:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:9:0"
									},
									"scope": 104,
									"src": "1036:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1230:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1248:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "1259:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1259:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1248:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1273:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1240:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1240:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1318:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1127:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1218:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1227:2:0"
									},
									"src": "1209:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1722:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1759:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1751:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1751:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1751:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1732:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1732:30:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1332:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1712:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1712:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1677:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1694:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1722:0:0"
									},
									"scope": 104,
									"src": "1668:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1988:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "2006:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2026:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2018:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2018:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2018:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2006:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2030:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1998:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1998:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2100:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2081:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2081:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2081:28:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1775:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1978:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1978:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1927:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1945:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1944:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1988:0:0"
									},
									"scope": 104,
									"src": "1918:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 102,
										"nodeType": "Block",
										"src": "2333:124:0",
										"statements": [
											{
												"assignments": [
													90
												],
												"declarations": [
													{
														"constant": false,
														"id": 90,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2351:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 102,
														"src": "2343:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 89,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2343:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": {
													"id": 91,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2362:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2343:25:0"
											},
											{
												"expression": {
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 93,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2378:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 94,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "2387:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2378:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2378:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 98,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 99,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2441:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 97,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2410:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2410:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "EmitStatement",
												"src": "2405:45:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2122:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 103,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2306:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2298:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2297:18:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:0:0"
									},
									"scope": 104,
									"src": "2270:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 105,
							"src": "639:1820:0",
							"usedErrors": []
						}
					],
					"src": "87:2373:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"Pausable": [
							196
						]
					},
					"id": 197,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 106,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 107,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 197,
							"sourceUnit": 297,
							"src": "115:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 109,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "617:7:1"
									},
									"id": 110,
									"nodeType": "InheritanceSpecifier",
									"src": "617:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 108,
								"nodeType": "StructuredDocumentation",
								"src": "147:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 196,
							"linearizedBaseContracts": [
								196,
								296
							],
							"name": "Pausable",
							"nameLocation": "605:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "631:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"id": 115,
									"name": "Paused",
									"nameLocation": "715:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "730:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "722:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "721:17:1"
									},
									"src": "709:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "745:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"id": 120,
									"name": "Unpaused",
									"nameLocation": "826:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "843:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "835:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "834:17:1"
									},
									"src": "820:32:1"
								},
								{
									"constant": false,
									"id": 122,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "871:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 196,
									"src": "858:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 121,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "858:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "971:32:1",
										"statements": [
											{
												"expression": {
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 126,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "981:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "991:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "981:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "981:15:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "885:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 131,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "971:0:1"
									},
									"scope": 196,
									"src": "957:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1151:31:1",
										"statements": [
											{
												"expression": {
													"id": 137,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 122,
													"src": "1168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 136,
												"id": 138,
												"nodeType": "Return",
												"src": "1161:14:1"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "1009:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1107:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1113:2:1"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1145:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1145:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1144:6:1"
									},
									"scope": 196,
									"src": "1098:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1393:66:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1411:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 144,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "1412:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1412:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1422:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1403:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1403:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1403:38:1"
											},
											{
												"id": 150,
												"nodeType": "PlaceholderStatement",
												"src": "1451:1:1"
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "1188:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 152,
									"name": "whenNotPaused",
									"nameLocation": "1377:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1390:2:1"
									},
									"src": "1368:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 162,
										"nodeType": "Block",
										"src": "1659:69:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 156,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "1677:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1677:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1687:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1669:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "1669:41:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "1465:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 163,
									"name": "whenPaused",
									"nameLocation": "1646:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1656:2:1"
									},
									"src": "1637:91:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1912:66:1",
										"statements": [
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 169,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "1922:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1932:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1922:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1922:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 174,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "1958:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1958:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 173,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 115,
														"src": "1951:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1951:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "EmitStatement",
												"src": "1946:25:1"
											}
										]
									},
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "1734:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 166,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "1898:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1898:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "1872:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:0:1"
									},
									"scope": 196,
									"src": "1863:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "2158:69:1",
										"statements": [
											{
												"expression": {
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 185,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2168:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2178:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2168:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2168:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 190,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "2207:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2207:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 189,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "2198:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2198:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "EmitStatement",
												"src": "2193:27:1"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "1984:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 183,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "whenPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 163,
												"src": "2147:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2147:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2119:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:1"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2158:0:1"
									},
									"scope": 196,
									"src": "2110:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 197,
							"src": "587:1642:1",
							"usedErrors": []
						}
					],
					"src": "90:2140:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							274
						]
					},
					"id": 275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 198,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 199,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "225:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "305:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:2:2"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "342:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:9:2"
									},
									"scope": 274,
									"src": "296:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "357:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "443:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "461:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "453:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "453:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "452:17:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "492:9:2"
									},
									"scope": 274,
									"src": "434:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "508:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "724:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "741:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "733:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "753:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "745:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:28:2"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "779:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "779:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "778:6:2"
									},
									"scope": 274,
									"src": "715:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "791:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1069:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1087:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1079:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1102:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1094:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:32:2"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1134:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1134:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:9:2"
									},
									"scope": 274,
									"src": "1060:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "1149:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1805:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1821:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1813:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1813:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1838:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1830:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1830:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1812:33:2"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "1864:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1864:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1863:6:2"
									},
									"scope": 274,
									"src": "1796:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "1876:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2177:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2207:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2199:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2249:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2241:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:72:2"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2280:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2280:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2279:6:2"
									},
									"scope": 274,
									"src": "2168:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "2292:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 264,
									"name": "Transfer",
									"nameLocation": "2461:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2486:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2470:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2508:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2492:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2492:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2520:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "2512:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2512:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:57:2"
									},
									"src": "2455:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "2533:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 273,
									"name": "Approval",
									"nameLocation": "2692:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2717:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2701:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2740:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2724:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2724:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2757:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "2749:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2749:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2700:63:2"
									},
									"src": "2686:78:2"
								}
							],
							"scope": 275,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 276,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 277,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 282,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 281,
												"id": 284,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 296,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 291,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 290,
												"id": 293,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 296,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			},
			"staking.sol": {
				"ast": {
					"absolutePath": "staking.sol",
					"exportedSymbols": {
						"Context": [
							296
						],
						"IDexRouter": [
							347
						],
						"IERC20": [
							274
						],
						"Ownable": [
							104
						],
						"Pausable": [
							196
						],
						"mochiStaking": [
							1349
						]
					},
					"id": 1350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1350,
							"sourceUnit": 275,
							"src": "57:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1350,
							"sourceUnit": 105,
							"src": "114:52:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1350,
							"sourceUnit": 197,
							"src": "167:55:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IDexRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 347,
							"linearizedBaseContracts": [
								347
							],
							"name": "IDexRouter",
							"nameLocation": "234:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "260:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "267:2:4"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "293:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "293:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:9:4"
									},
									"scope": 347,
									"src": "251:51:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "316:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "320:2:4"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "346:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:4"
									},
									"scope": 347,
									"src": "307:48:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 325,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "374:50:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "439:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "434:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "434:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "462:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "457:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "457:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "503:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "484:23:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 316,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "484:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 317,
													"nodeType": "ArrayTypeName",
													"src": "484:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "525:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "517:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "542:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "537:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:132:4"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "565:0:4"
									},
									"scope": 347,
									"src": "365:201:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "581:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "614:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "606:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "606:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "637:18:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "629:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "673:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "665:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "665:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "705:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "697:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "697:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "735:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "727:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "755:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "747:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:173:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "841:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "833:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "874:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "866:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "905:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "897:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:105:4"
									},
									"scope": 347,
									"src": "572:353:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1350,
							"src": "224:703:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 348,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 104,
										"src": "955:7:4"
									},
									"id": 349,
									"nodeType": "InheritanceSpecifier",
									"src": "955:7:4"
								},
								{
									"baseName": {
										"id": 350,
										"name": "Pausable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 196,
										"src": "964:8:4"
									},
									"id": 351,
									"nodeType": "InheritanceSpecifier",
									"src": "964:8:4"
								}
							],
							"canonicalName": "mochiStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1349,
							"linearizedBaseContracts": [
								1349,
								196,
								104,
								296
							],
							"name": "mochiStaking",
							"nameLocation": "939:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "451c3d80",
									"id": 354,
									"mutability": "mutable",
									"name": "acceptedToken",
									"nameLocation": "1038:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1024:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$274",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 353,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 352,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 274,
											"src": "1024:6:4"
										},
										"referencedDeclaration": 274,
										"src": "1024:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$274",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "mochiStaking._user",
									"id": 361,
									"members": [
										{
											"constant": false,
											"id": 356,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "1125:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 361,
											"src": "1117:15:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 355,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1117:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 358,
											"mutability": "mutable",
											"name": "timeStarted",
											"nameLocation": "1150:11:4",
											"nodeType": "VariableDeclaration",
											"scope": 361,
											"src": "1142:19:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 357,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1142:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 360,
											"mutability": "mutable",
											"name": "timeFinish",
											"nameLocation": "1179:10:4",
											"nodeType": "VariableDeclaration",
											"scope": 361,
											"src": "1171:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 359,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1171:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "_user",
									"nameLocation": "1101:5:4",
									"nodeType": "StructDefinition",
									"scope": 1349,
									"src": "1094:102:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8275b181",
									"id": 364,
									"mutability": "mutable",
									"name": "level0APY",
									"nameLocation": "1248:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1233:32:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 362,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1233:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32373030",
										"id": 363,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1261:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2700_by_1",
											"typeString": "int_const 2700"
										},
										"value": "2700"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1ff08fee",
									"id": 367,
									"mutability": "mutable",
									"name": "level1APY",
									"nameLocation": "1286:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1271:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 365,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1271:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33373030",
										"id": 366,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1298:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3700_by_1",
											"typeString": "int_const 3700"
										},
										"value": "3700"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "32938e3a",
									"id": 370,
									"mutability": "mutable",
									"name": "vipLevelAPY",
									"nameLocation": "1323:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1308:33:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 368,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1308:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "34383030",
										"id": 369,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1337:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4800_by_1",
											"typeString": "int_const 4800"
										},
										"value": "4800"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6505cf31",
									"id": 377,
									"mutability": "mutable",
									"name": "level0Min",
									"nameLocation": "1397:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1382:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 371,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1382:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_50000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000"
										},
										"id": 376,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3530",
											"id": 372,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1409:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 375,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 373,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1414:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 374,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1418:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1414:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1409:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50000000000000000000_by_1",
											"typeString": "int_const 50000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "71a1609b",
									"id": 384,
									"mutability": "mutable",
									"name": "level0Max",
									"nameLocation": "1441:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1426:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1426:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000000"
										},
										"id": 383,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "353030303030303030",
											"id": 379,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1453:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000000_by_1",
												"typeString": "int_const 500000000"
											},
											"value": "500000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 382,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 380,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1465:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 381,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1469:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1465:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1453:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "01ef4739",
									"id": 391,
									"mutability": "mutable",
									"name": "level1Min",
									"nameLocation": "1492:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1477:39:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 385,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1477:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										},
										"id": 390,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313030",
											"id": 386,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1504:3:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_100_by_1",
												"typeString": "int_const 100"
											},
											"value": "100"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 389,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 387,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1510:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 388,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1514:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1510:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1504:12:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000000_by_1",
											"typeString": "int_const 100000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3900a52",
									"id": 398,
									"mutability": "mutable",
									"name": "level1Max",
									"nameLocation": "1537:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1522:45:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 392,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1522:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_500000000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000000"
										},
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "353030303030303030",
											"id": 393,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1549:9:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_500000000_by_1",
												"typeString": "int_const 500000000"
											},
											"value": "500000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 396,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 394,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1561:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 395,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1565:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1561:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1549:18:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_500000000000000000000000000_by_1",
											"typeString": "int_const 500000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "91789cef",
									"id": 405,
									"mutability": "mutable",
									"name": "levelVipMin",
									"nameLocation": "1588:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1573:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1573:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_200000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000"
										},
										"id": 404,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "323030",
											"id": 400,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1602:3:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_200_by_1",
												"typeString": "int_const 200"
											},
											"value": "200"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 403,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 401,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1608:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 402,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1612:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1608:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1602:12:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_200000000000000000000_by_1",
											"typeString": "int_const 200000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f0fb2b7",
									"id": 412,
									"mutability": "mutable",
									"name": "levelVipMax",
									"nameLocation": "1635:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1620:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 406,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1620:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_2500000000000000000000000000_by_1",
											"typeString": "int_const 2500000000000000000000000000"
										},
										"id": 411,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32353030303030303030",
											"id": 407,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1649:10:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2500000000_by_1",
												"typeString": "int_const 2500000000"
											},
											"value": "2500000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 410,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 408,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1662:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 409,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1666:2:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1662:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1649:19:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2500000000000000000000000000_by_1",
											"typeString": "int_const 2500000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6296e750",
									"id": 416,
									"mutability": "mutable",
									"name": "isLevel0",
									"nameLocation": "1764:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1731:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 415,
										"keyType": {
											"id": 413,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1740:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1731:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 414,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1751:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67911ba4",
									"id": 421,
									"mutability": "mutable",
									"name": "level0Balance",
									"nameLocation": "1812:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1778:47:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
										"typeString": "mapping(address => struct mochiStaking._user)"
									},
									"typeName": {
										"id": 420,
										"keyType": {
											"id": 417,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1787:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1778:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
											"typeString": "mapping(address => struct mochiStaking._user)"
										},
										"valueType": {
											"id": 419,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 418,
												"name": "_user",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 361,
												"src": "1798:5:4"
											},
											"referencedDeclaration": 361,
											"src": "1798:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$__user_$361_storage_ptr",
												"typeString": "struct mochiStaking._user"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "635ef285",
									"id": 425,
									"mutability": "mutable",
									"name": "isLevel1",
									"nameLocation": "1864:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1831:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 424,
										"keyType": {
											"id": 422,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1840:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1831:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 423,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1851:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7fe509d7",
									"id": 430,
									"mutability": "mutable",
									"name": "level1Balance",
									"nameLocation": "1912:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1878:47:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
										"typeString": "mapping(address => struct mochiStaking._user)"
									},
									"typeName": {
										"id": 429,
										"keyType": {
											"id": 426,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1887:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1878:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
											"typeString": "mapping(address => struct mochiStaking._user)"
										},
										"valueType": {
											"id": 428,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 427,
												"name": "_user",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 361,
												"src": "1898:5:4"
											},
											"referencedDeclaration": 361,
											"src": "1898:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$__user_$361_storage_ptr",
												"typeString": "struct mochiStaking._user"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "84203f4b",
									"id": 434,
									"mutability": "mutable",
									"name": "isVip",
									"nameLocation": "1964:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1931:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 433,
										"keyType": {
											"id": 431,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1940:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1931:25:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 432,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1951:4:4",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "97e9c5fe",
									"id": 439,
									"mutability": "mutable",
									"name": "vipBalance",
									"nameLocation": "2009:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "1975:44:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
										"typeString": "mapping(address => struct mochiStaking._user)"
									},
									"typeName": {
										"id": 438,
										"keyType": {
											"id": 435,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1984:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1975:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
											"typeString": "mapping(address => struct mochiStaking._user)"
										},
										"valueType": {
											"id": 437,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 436,
												"name": "_user",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 361,
												"src": "1995:5:4"
											},
											"referencedDeclaration": 361,
											"src": "1995:5:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$__user_$361_storage_ptr",
												"typeString": "struct mochiStaking._user"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1694505e",
									"id": 442,
									"mutability": "immutable",
									"name": "uniswapV2Router",
									"nameLocation": "2078:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1349,
									"src": "2050:43:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IDexRouter_$347",
										"typeString": "contract IDexRouter"
									},
									"typeName": {
										"id": 441,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 440,
											"name": "IDexRouter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 347,
											"src": "2050:10:4"
										},
										"referencedDeclaration": 347,
										"src": "2050:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IDexRouter_$347",
											"typeString": "contract IDexRouter"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 454,
									"name": "deposit",
									"nameLocation": "2121:7:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2138:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2130:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2130:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "2150:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2144:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 445,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2144:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2165:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2157:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"indexed": false,
												"mutability": "mutable",
												"name": "timeStart",
												"nameLocation": "2181:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2173:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"indexed": false,
												"mutability": "mutable",
												"name": "timeEnd",
												"nameLocation": "2200:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2192:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2192:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:79:4"
									},
									"src": "2115:94:4"
								},
								{
									"anonymous": false,
									"id": 466,
									"name": "withdraw",
									"nameLocation": "2220:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"indexed": false,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2238:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2230:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2230:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "2250:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2244:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 457,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2244:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"indexed": false,
												"mutability": "mutable",
												"name": "onTime",
												"nameLocation": "2262:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2257:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2257:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2278:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2270:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"indexed": false,
												"mutability": "mutable",
												"name": "earnings",
												"nameLocation": "2294:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 466,
												"src": "2286:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2286:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2229:74:4"
									},
									"src": "2214:90:4"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "2386:207:4",
										"statements": [
											{
												"expression": {
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 471,
														"name": "acceptedToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 354,
														"src": "2396:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 473,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "2419:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 472,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "2412:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$274_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2412:14:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$274",
															"typeString": "contract IERC20"
														}
													},
													"src": "2396:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$274",
														"typeString": "contract IERC20"
													}
												},
												"id": 476,
												"nodeType": "ExpressionStatement",
												"src": "2396:30:4"
											},
											{
												"assignments": [
													479
												],
												"declarations": [
													{
														"constant": false,
														"id": 479,
														"mutability": "mutable",
														"name": "_uniswapV2Router",
														"nameLocation": "2447:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 488,
														"src": "2436:27:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDexRouter_$347",
															"typeString": "contract IDexRouter"
														},
														"typeName": {
															"id": 478,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 477,
																"name": "IDexRouter",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 347,
																"src": "2436:10:4"
															},
															"referencedDeclaration": 347,
															"src": "2436:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDexRouter_$347",
																"typeString": "contract IDexRouter"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 483,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307837613235306435363330423463463533393733396446324335644163623463363539463234383844",
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2477:42:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 480,
														"name": "IDexRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "2466:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IDexRouter_$347_$",
															"typeString": "type(contract IDexRouter)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2466:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDexRouter_$347",
														"typeString": "contract IDexRouter"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2436:84:4"
											},
											{
												"expression": {
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 484,
														"name": "uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "2548:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDexRouter_$347",
															"typeString": "contract IDexRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 485,
														"name": "_uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "2566:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IDexRouter_$347",
															"typeString": "contract IDexRouter"
														}
													},
													"src": "2548:34:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IDexRouter_$347",
														"typeString": "contract IDexRouter"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "2548:34:4"
											}
										]
									},
									"id": 489,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2377:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "2369:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2369:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:17:4"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:4"
									},
									"scope": 1349,
									"src": "2357:236:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "2679:25:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 494,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "2689:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2689:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "2689:8:4"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 492,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 491,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2669:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2669:9:4"
										}
									],
									"name": "pause",
									"nameLocation": "2653:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2659:2:4"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2679:0:4"
									},
									"scope": 1349,
									"src": "2644:60:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2751:27:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 503,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "2761:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2761:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "ExpressionStatement",
												"src": "2761:10:4"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 501,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 500,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2741:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2741:9:4"
										}
									],
									"name": "unpause",
									"nameLocation": "2723:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2731:2:4"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:4"
									},
									"scope": 1349,
									"src": "2714:64:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2947:107:4",
										"statements": [
											{
												"expression": {
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 519,
														"name": "level0APY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "2957:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 520,
														"name": "_level0APY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "2969:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2957:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "2957:22:4"
											},
											{
												"expression": {
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 523,
														"name": "level1APY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "2989:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 524,
														"name": "_level1APY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 512,
														"src": "3001:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2989:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "2989:22:4"
											},
											{
												"expression": {
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 527,
														"name": "vipLevelAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "3021:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 528,
														"name": "_vipLevelAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3035:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3021:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "3021:26:4"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2785:55:4",
										"text": " @dev Change APY for all categories.   "
									},
									"functionSelector": "e5d15701",
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 517,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 516,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2938:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2938:9:4"
										}
									],
									"name": "setNewAPY",
									"nameLocation": "2855:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "_level0APY",
												"nameLocation": "2875:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2867:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "_level1APY",
												"nameLocation": "2895:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2887:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "_vipLevelAPY",
												"nameLocation": "2915:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 532,
												"src": "2907:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2907:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2865:63:4"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2947:0:4"
									},
									"scope": 1349,
									"src": "2846:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 574,
										"nodeType": "Block",
										"src": "3301:207:4",
										"statements": [
											{
												"expression": {
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 550,
														"name": "level0Min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 377,
														"src": "3311:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 551,
														"name": "_level0Min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "3323:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3311:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 553,
												"nodeType": "ExpressionStatement",
												"src": "3311:22:4"
											},
											{
												"expression": {
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 554,
														"name": "level0Max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "3343:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 555,
														"name": "_level0Max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "3355:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3343:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "3343:22:4"
											},
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "level1Min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "3375:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "_level1Min",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "3387:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3375:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "3375:22:4"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "level1Max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "3407:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "_level1Max",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "3419:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3407:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "3407:22:4"
											},
											{
												"expression": {
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 566,
														"name": "levelVipMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "3439:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 567,
														"name": "_levelVipMin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "3453:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3439:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "3439:26:4"
											},
											{
												"expression": {
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 570,
														"name": "levelVipMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "3475:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 571,
														"name": "_levelVipMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "3489:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3475:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "3475:26:4"
											}
										]
									},
									"documentation": {
										"id": 533,
										"nodeType": "StructuredDocumentation",
										"src": "3060:70:4",
										"text": " @dev Change max and min values for all categories.   "
									},
									"functionSelector": "f4217e1e",
									"id": 575,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 548,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 547,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3292:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3292:9:4"
										}
									],
									"name": "setNewMaxMin",
									"nameLocation": "3145:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "_level0Min",
												"nameLocation": "3167:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3159:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3159:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "_level0Max",
												"nameLocation": "3187:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3179:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3179:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "_level1Min",
												"nameLocation": "3207:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3199:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3199:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "_level1Max",
												"nameLocation": "3227:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3219:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "_levelVipMin",
												"nameLocation": "3247:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3239:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3239:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "_levelVipMax",
												"nameLocation": "3269:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "3261:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3261:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3158:124:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3301:0:4"
									},
									"scope": 1349,
									"src": "3136:372:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "3717:690:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 584,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "3735:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 585,
																	"name": "level0Max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "3746:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3735:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 587,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "3759:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 588,
																	"name": "level0Min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "3770:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3759:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3735:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e20616e64206c657373207468616e206d6178",
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3781:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09",
																"typeString": "literal_string \"Amount needs to be more than min and less than max\""
															},
															"value": "Amount needs to be more than min and less than max"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09",
																"typeString": "literal_string \"Amount needs to be more than min and less than max\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3727:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3727:107:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "3727:107:4"
											},
											{
												"assignments": [
													595
												],
												"declarations": [
													{
														"constant": false,
														"id": 595,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "3852:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 650,
														"src": "3844:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 594,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3844:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"expression": {
														"id": 596,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3865:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3865:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3844:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3898:21:4",
															"subExpression": {
																"baseExpression": {
																	"id": 600,
																	"name": "isLevel0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "3899:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 602,
																"indexExpression": {
																	"id": 601,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 595,
																	"src": "3908:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3899:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7527726520616c726561647920696e2074686973205374616b65206c6576656c",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3921:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801",
																"typeString": "literal_string \"You're already in this Stake level\""
															},
															"value": "You're already in this Stake level"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801",
																"typeString": "literal_string \"You're already in this Stake level\""
															}
														],
														"id": 599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3890:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "3890:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 610,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "4000:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 613,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4020:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_mochiStaking_$1349",
																		"typeString": "contract mochiStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_mochiStaking_$1349",
																		"typeString": "contract mochiStaking"
																	}
																],
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4012:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 611,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4012:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4012:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 615,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4027:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 607,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "3973:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "3973:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3973:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "3973:62:4"
											},
											{
												"expression": {
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 618,
															"name": "isLevel0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4046:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 620,
														"indexExpression": {
															"id": 619,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "4055:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4046:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4069:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4046:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 623,
												"nodeType": "ExpressionStatement",
												"src": "4046:27:4"
											},
											{
												"expression": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 624,
															"name": "level0Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "4083:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																"typeString": "mapping(address => struct mochiStaking._user storage ref)"
															}
														},
														"id": 626,
														"indexExpression": {
															"id": 625,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "4097:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4083:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$361_storage",
															"typeString": "struct mochiStaking._user storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 628,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 578,
																"src": "4141:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 629,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4175:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4175:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 631,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4268:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4268:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "363030",
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4286:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_600_by_1",
																		"typeString": "int_const 600"
																	},
																	"value": "600"
																},
																"src": "4268:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 627,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "4111:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$__user_$361_storage_ptr_$",
																"typeString": "type(struct mochiStaking._user storage pointer)"
															}
														},
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"balance",
															"timeStarted",
															"timeFinish"
														],
														"nodeType": "FunctionCall",
														"src": "4111:189:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$361_memory_ptr",
															"typeString": "struct mochiStaking._user memory"
														}
													},
													"src": "4083:217:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$__user_$361_storage",
														"typeString": "struct mochiStaking._user storage ref"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "4083:217:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 639,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "4334:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4346:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 641,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4349:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 642,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4358:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4358:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 644,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4375:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4375:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "37",
																"id": 646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4393:6:4",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_604800_by_1",
																	"typeString": "int_const 604800"
																},
																"value": "7"
															},
															"src": "4375:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 638,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "4325:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,uint256,uint256,uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4325:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "EmitStatement",
												"src": "4320:80:4"
											}
										]
									},
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "3514:138:4",
										"text": " @dev Join to a staking class.\n Requirements:\n  \n - User has not enter the staking class previously. "
									},
									"functionSelector": "fe2981b5",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 581,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 580,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "3703:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3703:13:4"
										}
									],
									"name": "enterLevel0",
									"nameLocation": "3666:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3687:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "3679:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3679:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:17:4"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3717:0:4"
									},
									"scope": 1349,
									"src": "3657:750:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "4623:682:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 660,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "4641:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 661,
																	"name": "level1Max",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "4652:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4641:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 663,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 654,
																	"src": "4665:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 664,
																	"name": "level1Min",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "4676:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4665:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4641:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e20616e64206c657373207468616e206d6178",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4687:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09",
																"typeString": "literal_string \"Amount needs to be more than min and less than max\""
															},
															"value": "Amount needs to be more than min and less than max"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09",
																"typeString": "literal_string \"Amount needs to be more than min and less than max\""
															}
														],
														"id": 659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4633:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4633:107:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 669,
												"nodeType": "ExpressionStatement",
												"src": "4633:107:4"
											},
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "4758:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 726,
														"src": "4750:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 670,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4750:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"expression": {
														"id": 672,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4771:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4771:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4750:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4801:21:4",
															"subExpression": {
																"baseExpression": {
																	"id": 676,
																	"name": "isLevel1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "4802:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 678,
																"indexExpression": {
																	"id": 677,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "4811:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4802:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7527726520616c726561647920696e2074686973205374616b65206c6576656c",
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4824:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801",
																"typeString": "literal_string \"You're already in this Stake level\""
															},
															"value": "You're already in this Stake level"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e279cb5dda7cad0d7c6344bd48e956f433f6e506ace24ff1e55bbc94f033801",
																"typeString": "literal_string \"You're already in this Stake level\""
															}
														],
														"id": 675,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4793:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4793:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "4793:68:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 686,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "4905:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 689,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4925:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_mochiStaking_$1349",
																		"typeString": "contract mochiStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_mochiStaking_$1349",
																		"typeString": "contract mochiStaking"
																	}
																],
																"id": 688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4917:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 687,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4917:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4917:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "4932:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 683,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "4878:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "4878:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "4878:62:4"
											},
											{
												"expression": {
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 694,
															"name": "isLevel1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4951:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 696,
														"indexExpression": {
															"id": 695,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "4960:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4951:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4974:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4951:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "4951:27:4"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 700,
															"name": "level1Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "4988:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																"typeString": "mapping(address => struct mochiStaking._user storage ref)"
															}
														},
														"id": 702,
														"indexExpression": {
															"id": 701,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "5002:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4988:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$361_storage",
															"typeString": "struct mochiStaking._user storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 704,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "5045:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 705,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5078:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5078:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 707,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5170:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5170:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "383030",
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5188:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_800_by_1",
																		"typeString": "int_const 800"
																	},
																	"value": "800"
																},
																"src": "5170:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 703,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "5016:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$__user_$361_storage_ptr_$",
																"typeString": "type(struct mochiStaking._user storage pointer)"
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"balance",
															"timeStarted",
															"timeFinish"
														],
														"nodeType": "FunctionCall",
														"src": "5016:186:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$361_memory_ptr",
															"typeString": "struct mochiStaking._user memory"
														}
													},
													"src": "4988:214:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$__user_$361_storage",
														"typeString": "struct mochiStaking._user storage ref"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "4988:214:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 715,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "5231:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5243:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"id": 717,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "5246:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 718,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5255:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5255:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 720,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5272:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5272:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3330",
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5290:7:4",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2592000_by_1",
																	"typeString": "int_const 2592000"
																},
																"value": "30"
															},
															"src": "5272:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 714,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "5222:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,uint256,uint256,uint256)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5222:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "EmitStatement",
												"src": "5217:81:4"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "4417:141:4",
										"text": " @dev Join to a staking class.\n Requirements:\n   \n - User has not enter the staking class previously.   "
									},
									"functionSelector": "1ed81ff8",
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 657,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 656,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "4609:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4609:13:4"
										}
									],
									"name": "enterLevel1",
									"nameLocation": "4572:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 727,
												"src": "4585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4585:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4584:17:4"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:4"
									},
									"scope": 1349,
									"src": "4563:742:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5561:691:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 736,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "5579:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 737,
																	"name": "levelVipMax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 412,
																	"src": "5590:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5579:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 739,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "5605:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 740,
																	"name": "levelVipMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "5616:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5605:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5579:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206e6565647320746f206265206d6f7265207468616e206d696e20616e64206c657373207468616e206d6178",
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5629:52:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09",
																"typeString": "literal_string \"Amount needs to be more than min and less than max\""
															},
															"value": "Amount needs to be more than min and less than max"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_811c6bf6ac91e3c2393ad6144c11272540d7990f3112323665f778814b059f09",
																"typeString": "literal_string \"Amount needs to be more than min and less than max\""
															}
														],
														"id": 735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5571:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5571:111:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "5571:111:4"
											},
											{
												"assignments": [
													747
												],
												"declarations": [
													{
														"constant": false,
														"id": 747,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "5700:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 802,
														"src": "5692:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 746,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5692:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 750,
												"initialValue": {
													"expression": {
														"id": 748,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5713:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5713:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5692:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5754:18:4",
															"subExpression": {
																"baseExpression": {
																	"id": 752,
																	"name": "isVip",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "5755:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 754,
																"indexExpression": {
																	"id": 753,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "5761:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5755:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7527726520616c726561647920696e2074686520566970205374616b65",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daf93fd023ea17bf0c263d023c3e511dcafa853cd1782f387ee74b6b6866acdb",
																"typeString": "literal_string \"You're already in the Vip Stake\""
															},
															"value": "You're already in the Vip Stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daf93fd023ea17bf0c263d023c3e511dcafa853cd1782f387ee74b6b6866acdb",
																"typeString": "literal_string \"You're already in the Vip Stake\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5746:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5746:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5746:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 762,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "5854:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 765,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5874:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_mochiStaking_$1349",
																		"typeString": "contract mochiStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_mochiStaking_$1349",
																		"typeString": "contract mochiStaking"
																	}
																],
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5866:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 763,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5866:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5866:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 767,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "5881:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 759,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "5827:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "5827:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5827:62:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "5827:62:4"
											},
											{
												"expression": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 770,
															"name": "isVip",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "5900:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 772,
														"indexExpression": {
															"id": 771,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "5906:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5900:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 773,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5920:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5900:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 775,
												"nodeType": "ExpressionStatement",
												"src": "5900:24:4"
											},
											{
												"expression": {
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 776,
															"name": "vipBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "5934:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																"typeString": "mapping(address => struct mochiStaking._user storage ref)"
															}
														},
														"id": 778,
														"indexExpression": {
															"id": 777,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "5945:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5934:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$361_storage",
															"typeString": "struct mochiStaking._user storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 780,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5988:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 781,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6021:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6021:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 783,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "6113:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "6113:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31323030",
																	"id": 785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6131:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1200_by_1",
																		"typeString": "int_const 1200"
																	},
																	"value": "1200"
																},
																"src": "6113:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 779,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "5959:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$__user_$361_storage_ptr_$",
																"typeString": "type(struct mochiStaking._user storage pointer)"
															}
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"names": [
															"balance",
															"timeStarted",
															"timeFinish"
														],
														"nodeType": "FunctionCall",
														"src": "5959:187:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$361_memory_ptr",
															"typeString": "struct mochiStaking._user memory"
														}
													},
													"src": "5934:212:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$__user_$361_storage",
														"typeString": "struct mochiStaking._user storage ref"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "5934:212:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 791,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "6178:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "32",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6190:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														{
															"id": 793,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "6193:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 794,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6202:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6202:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 799,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 796,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6219:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6219:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "3930",
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6237:7:4",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_7776000_by_1",
																	"typeString": "int_const 7776000"
																},
																"value": "90"
															},
															"src": "6219:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 790,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "6169:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,uint256,uint256,uint256)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6169:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "EmitStatement",
												"src": "6164:81:4"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "5311:188:4",
										"text": " @dev Join to a staking class.\n Requirements:\n - _amount must be greather than enter fee.\n - User has not enter the staking class previously.    "
									},
									"functionSelector": "bf01651a",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 733,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 732,
												"name": "whenNotPaused",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 152,
												"src": "5547:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "5547:13:4"
										}
									],
									"name": "enterVip",
									"nameLocation": "5513:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5531:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5523:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5523:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5522:17:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5561:0:4"
									},
									"scope": 1349,
									"src": "5504:748:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "6470:426:4",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "releaseTime",
														"nameLocation": "6488:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "6480:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 813,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6480:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "6480:19:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 816,
														"name": "class",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "6512:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6521:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6512:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 827,
															"name": "class",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "6613:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6622:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "6613:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 838,
																"name": "class",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "6712:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6721:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6712:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 851,
															"nodeType": "Block",
															"src": "6806:37:4",
															"statements": [
																{
																	"expression": {
																		"hexValue": "66616c7365",
																		"id": 849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6827:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"functionReturnParameters": 812,
																	"id": 850,
																	"nodeType": "Return",
																	"src": "6820:12:4"
																}
															]
														},
														"id": 852,
														"nodeType": "IfStatement",
														"src": "6708:135:4",
														"trueBody": {
															"id": 848,
															"nodeType": "Block",
															"src": "6723:77:4",
															"statements": [
																{
																	"expression": {
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 841,
																			"name": "releaseTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "6737:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"baseExpression": {
																					"id": 842,
																					"name": "vipBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 439,
																					"src": "6751:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																						"typeString": "mapping(address => struct mochiStaking._user storage ref)"
																					}
																				},
																				"id": 844,
																				"indexExpression": {
																					"id": 843,
																					"name": "user",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 806,
																					"src": "6762:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6751:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$__user_$361_storage",
																					"typeString": "struct mochiStaking._user storage ref"
																				}
																			},
																			"id": 845,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timeFinish",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 360,
																			"src": "6751:27:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6737:41:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 847,
																	"nodeType": "ExpressionStatement",
																	"src": "6737:41:4"
																}
															]
														}
													},
													"id": 853,
													"nodeType": "IfStatement",
													"src": "6609:234:4",
													"trueBody": {
														"id": 837,
														"nodeType": "Block",
														"src": "6624:78:4",
														"statements": [
															{
																"expression": {
																	"id": 835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 830,
																		"name": "releaseTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "6638:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 831,
																				"name": "level1Balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 430,
																				"src": "6652:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																					"typeString": "mapping(address => struct mochiStaking._user storage ref)"
																				}
																			},
																			"id": 833,
																			"indexExpression": {
																				"id": 832,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 806,
																				"src": "6666:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6652:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$__user_$361_storage",
																				"typeString": "struct mochiStaking._user storage ref"
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timeFinish",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 360,
																		"src": "6652:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6638:44:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 836,
																"nodeType": "ExpressionStatement",
																"src": "6638:44:4"
															}
														]
													}
												},
												"id": 854,
												"nodeType": "IfStatement",
												"src": "6509:334:4",
												"trueBody": {
													"id": 826,
													"nodeType": "Block",
													"src": "6523:80:4",
													"statements": [
														{
															"expression": {
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 819,
																	"name": "releaseTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "6537:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 820,
																			"name": "level0Balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "6551:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																				"typeString": "mapping(address => struct mochiStaking._user storage ref)"
																			}
																		},
																		"id": 822,
																		"indexExpression": {
																			"id": 821,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "6565:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6551:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$__user_$361_storage",
																			"typeString": "struct mochiStaking._user storage ref"
																		}
																	},
																	"id": 823,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timeFinish",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 360,
																	"src": "6551:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6537:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 825,
															"nodeType": "ExpressionStatement",
															"src": "6537:44:4"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 855,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6859:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6859:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 857,
														"name": "releaseTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "6878:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6859:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 859,
												"nodeType": "Return",
												"src": "6852:37:4"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "6260:132:4",
										"text": " @dev Checks if the staking has reached the timeFinish limit.\n classes :0 - level 0, 1 - level 1, 2 - Vip"
									},
									"functionSelector": "f7edf9ab",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOnTime",
									"nameLocation": "6406:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6424:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6416:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6416:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "6436:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6430:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 807,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6430:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6415:27:4"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "6464:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6464:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6463:6:4"
									},
									"scope": 1349,
									"src": "6397:499:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "7126:591:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 873,
														"name": "class",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "7139:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7148:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7139:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 890,
															"name": "class",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "7322:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7331:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "7322:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 907,
																"name": "class",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "7500:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "32",
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7509:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "7500:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 926,
															"nodeType": "Block",
															"src": "7678:33:4",
															"statements": [
																{
																	"expression": {
																		"hexValue": "30",
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7699:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"functionReturnParameters": 872,
																	"id": 925,
																	"nodeType": "Return",
																	"src": "7692:8:4"
																}
															]
														},
														"id": 927,
														"nodeType": "IfStatement",
														"src": "7496:215:4",
														"trueBody": {
															"id": 923,
															"nodeType": "Block",
															"src": "7511:161:4",
															"statements": [
																{
																	"assignments": [
																		911
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 911,
																			"mutability": "mutable",
																			"name": "_timeStarted",
																			"nameLocation": "7544:12:4",
																			"nodeType": "VariableDeclaration",
																			"scope": 923,
																			"src": "7536:20:4",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 910,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7536:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 916,
																	"initialValue": {
																		"expression": {
																			"baseExpression": {
																				"id": 912,
																				"name": "vipBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 439,
																				"src": "7559:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																					"typeString": "mapping(address => struct mochiStaking._user storage ref)"
																				}
																			},
																			"id": 914,
																			"indexExpression": {
																				"id": 913,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 864,
																				"src": "7570:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7559:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$__user_$361_storage",
																				"typeString": "struct mochiStaking._user storage ref"
																			}
																		},
																		"id": 915,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timeStarted",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 358,
																		"src": "7559:28:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "7536:51:4"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 918,
																				"name": "balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 868,
																				"src": "7627:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 919,
																				"name": "_timeStarted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 911,
																				"src": "7635:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 920,
																				"name": "vipLevelAPY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 370,
																				"src": "7649:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 917,
																			"name": "calculateInterest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 970,
																			"src": "7609:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																			}
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7609:52:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 872,
																	"id": 922,
																	"nodeType": "Return",
																	"src": "7602:59:4"
																}
															]
														}
													},
													"id": 928,
													"nodeType": "IfStatement",
													"src": "7318:393:4",
													"trueBody": {
														"id": 906,
														"nodeType": "Block",
														"src": "7333:157:4",
														"statements": [
															{
																"assignments": [
																	894
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 894,
																		"mutability": "mutable",
																		"name": "_timeStarted",
																		"nameLocation": "7361:12:4",
																		"nodeType": "VariableDeclaration",
																		"scope": 906,
																		"src": "7353:20:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 893,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "7353:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 899,
																"initialValue": {
																	"expression": {
																		"baseExpression": {
																			"id": 895,
																			"name": "level1Balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 430,
																			"src": "7376:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																				"typeString": "mapping(address => struct mochiStaking._user storage ref)"
																			}
																		},
																		"id": 897,
																		"indexExpression": {
																			"id": 896,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 864,
																			"src": "7390:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7376:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$__user_$361_storage",
																			"typeString": "struct mochiStaking._user storage ref"
																		}
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timeStarted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 358,
																	"src": "7376:31:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7353:54:4"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 901,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "7447:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 902,
																			"name": "_timeStarted",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "7455:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 903,
																			"name": "level1APY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "7469:9:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 900,
																		"name": "calculateInterest",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 970,
																		"src": "7429:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																		}
																	},
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7429:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 872,
																"id": 905,
																"nodeType": "Return",
																"src": "7422:57:4"
															}
														]
													}
												},
												"id": 929,
												"nodeType": "IfStatement",
												"src": "7136:575:4",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "7150:162:4",
													"statements": [
														{
															"assignments": [
																877
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 877,
																	"mutability": "mutable",
																	"name": "_timeStarted",
																	"nameLocation": "7183:12:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 889,
																	"src": "7175:20:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 876,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7175:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 882,
															"initialValue": {
																"expression": {
																	"baseExpression": {
																		"id": 878,
																		"name": "level0Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "7198:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																			"typeString": "mapping(address => struct mochiStaking._user storage ref)"
																		}
																	},
																	"id": 880,
																	"indexExpression": {
																		"id": 879,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 864,
																		"src": "7212:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7198:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$__user_$361_storage",
																		"typeString": "struct mochiStaking._user storage ref"
																	}
																},
																"id": 881,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timeStarted",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 358,
																"src": "7198:31:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7175:54:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 884,
																		"name": "balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "7269:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 885,
																		"name": "_timeStarted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "7277:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 886,
																		"name": "level0APY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "7291:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 883,
																	"name": "calculateInterest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "7251:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7251:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 872,
															"id": 888,
															"nodeType": "Return",
															"src": "7244:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "6904:122:4",
										"text": " @dev Get interest earned during the staking time.\n classes : 0 - level 0, 1 - level 1, 2 - Vip"
									},
									"functionSelector": "69e06848",
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInterest",
									"nameLocation": "7040:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7061:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "7053:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "class",
												"nameLocation": "7073:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "7067:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 865,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "7067:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "7088:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "7080:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7080:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7052:44:4"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "7118:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7118:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7117:9:4"
									},
									"scope": 1349,
									"src": "7031:686:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "7836:251:4",
										"statements": [
											{
												"assignments": [
													943
												],
												"declarations": [
													{
														"constant": false,
														"id": 943,
														"mutability": "mutable",
														"name": "timeStaked",
														"nameLocation": "7854:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "7846:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 942,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 948,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 944,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7867:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7867:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 946,
														"name": "_timeStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 935,
														"src": "7885:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7867:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:51:4"
											},
											{
												"assignments": [
													950
												],
												"declarations": [
													{
														"constant": false,
														"id": 950,
														"mutability": "mutable",
														"name": "interestPerSecond",
														"nameLocation": "7923:17:4",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "7915:25:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 949,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7915:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 960,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 951,
																				"name": "_balance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 933,
																				"src": "7945:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 952,
																				"name": "_APY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 937,
																				"src": "7956:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7945:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 954,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7944:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7964:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "7944:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 957,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7943:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "333635",
														"id": 958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7973:8:4",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														},
														"value": "365"
													},
													"src": "7943:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7915:66:4"
											},
											{
												"assignments": [
													962
												],
												"declarations": [
													{
														"constant": false,
														"id": 962,
														"mutability": "mutable",
														"name": "interestsEarned",
														"nameLocation": "7999:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 969,
														"src": "7991:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 961,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7991:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 966,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 963,
														"name": "timeStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 943,
														"src": "8017:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 964,
														"name": "interestPerSecond",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "8030:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8017:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7991:56:4"
											},
											{
												"expression": {
													"id": 967,
													"name": "interestsEarned",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 962,
													"src": "8065:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 941,
												"id": 968,
												"nodeType": "Return",
												"src": "8058:22:4"
											}
										]
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateInterest",
									"nameLocation": "7732:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "_balance",
												"nameLocation": "7759:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "7751:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "_timeStarted",
												"nameLocation": "7777:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "7769:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7769:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "_APY",
												"nameLocation": "7799:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "7791:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7791:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7750:54:4"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "7828:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7828:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7827:9:4"
									},
									"scope": 1349,
									"src": "7723:364:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "8295:920:4",
										"statements": [
											{
												"assignments": [
													977
												],
												"declarations": [
													{
														"constant": false,
														"id": 977,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "8313:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1076,
														"src": "8305:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 976,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8305:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"expression": {
														"id": 978,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "8326:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "8326:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8305:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 982,
																"name": "isLevel0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "8354:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 984,
															"indexExpression": {
																"id": 983,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "8363:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8354:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206973206e6f74206f6e204c6576656c2030",
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8376:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6bdfb0dc4c4c59115de16dba1fe971a1a93a7298738a304cd5bd53a9e8420e1c",
																"typeString": "literal_string \"User is not on Level 0\""
															},
															"value": "User is not on Level 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6bdfb0dc4c4c59115de16dba1fe971a1a93a7298738a304cd5bd53a9e8420e1c",
																"typeString": "literal_string \"User is not on Level 0\""
															}
														],
														"id": 981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8346:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8346:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "8346:55:4"
											},
											{
												"assignments": [
													989
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "8420:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1076,
														"src": "8412:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 988,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8412:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 994,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 990,
															"name": "level0Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "8430:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																"typeString": "mapping(address => struct mochiStaking._user storage ref)"
															}
														},
														"id": 992,
														"indexExpression": {
															"id": 991,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "8444:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8430:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$361_storage",
															"typeString": "struct mochiStaking._user storage ref"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 356,
													"src": "8430:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8412:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 996,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "8481:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 997,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 973,
																"src": "8492:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8481:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e636520746f207769746864726177",
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8501:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															},
															"value": "Not enough balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															}
														],
														"id": 995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8473:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8473:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1001,
												"nodeType": "ExpressionStatement",
												"src": "8473:61:4"
											},
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "_isOnTime",
														"nameLocation": "8550:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1076,
														"src": "8545:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1002,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8545:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1008,
												"initialValue": {
													"arguments": [
														{
															"id": 1005,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "8571:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8583:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1004,
														"name": "isOnTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "8562:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (address,uint8) view returns (bool)"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8562:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8545:40:4"
											},
											{
												"assignments": [
													1010
												],
												"declarations": [
													{
														"constant": false,
														"id": 1010,
														"mutability": "mutable",
														"name": "earnings",
														"nameLocation": "8603:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1076,
														"src": "8595:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1009,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8595:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"arguments": [
														{
															"id": 1012,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "8626:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8638:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1014,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "8641:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1011,
														"name": "getInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "8614:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint8,uint256) view returns (uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8614:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8595:54:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1017,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 973,
														"src": "8663:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1018,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "8674:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8663:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "8793:69:4",
													"statements": [
														{
															"expression": {
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1032,
																			"name": "level0Balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 421,
																			"src": "8807:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																				"typeString": "mapping(address => struct mochiStaking._user storage ref)"
																			}
																		},
																		"id": 1034,
																		"indexExpression": {
																			"id": 1033,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 977,
																			"src": "8821:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8807:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$__user_$361_storage",
																			"typeString": "struct mochiStaking._user storage ref"
																		}
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 356,
																	"src": "8807:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1036,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 973,
																	"src": "8844:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8807:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1038,
															"nodeType": "ExpressionStatement",
															"src": "8807:44:4"
														}
													]
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "8660:202:4",
												"trueBody": {
													"id": 1031,
													"nodeType": "Block",
													"src": "8682:105:4",
													"statements": [
														{
															"expression": {
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "8696:32:4",
																"subExpression": {
																	"baseExpression": {
																		"id": 1020,
																		"name": "level0Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "8703:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																			"typeString": "mapping(address => struct mochiStaking._user storage ref)"
																		}
																	},
																	"id": 1022,
																	"indexExpression": {
																		"id": 1021,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "8717:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8703:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$__user_$361_storage",
																		"typeString": "struct mochiStaking._user storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1024,
															"nodeType": "ExpressionStatement",
															"src": "8696:32:4"
														},
														{
															"expression": {
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1025,
																		"name": "isLevel0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "8748:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1027,
																	"indexExpression": {
																		"id": 1026,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "8757:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8748:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8771:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8748:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1030,
															"nodeType": "ExpressionStatement",
															"src": "8748:28:4"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1041,
													"name": "_isOnTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1003,
													"src": "8875:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1066,
													"nodeType": "Block",
													"src": "9024:112:4",
													"statements": [
														{
															"expression": {
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1055,
																	"name": "earnings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1010,
																	"src": "9038:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9049:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9038:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1058,
															"nodeType": "ExpressionStatement",
															"src": "9038:12:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1062,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "9094:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1063,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 973,
																		"src": "9106:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1059,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "9071:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "9071:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9071:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1065,
															"nodeType": "ExpressionStatement",
															"src": "9071:43:4"
														}
													]
												},
												"id": 1067,
												"nodeType": "IfStatement",
												"src": "8872:264:4",
												"trueBody": {
													"id": 1054,
													"nodeType": "Block",
													"src": "8885:133:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1045,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "8922:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1046,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 973,
																		"src": "8934:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1042,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "8899:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "8899:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8899:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1048,
															"nodeType": "ExpressionStatement",
															"src": "8899:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1050,
																		"name": "earnings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1010,
																		"src": "8986:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1051,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 977,
																		"src": "8996:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1049,
																	"name": "swapTokensForEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "8969:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8969:38:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1053,
															"nodeType": "ExpressionStatement",
															"src": "8969:38:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1069,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "9164:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9176:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1071,
															"name": "_isOnTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "9179:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1072,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 973,
															"src": "9190:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1073,
															"name": "earnings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "9199:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1068,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "9155:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,bool,uint256,uint256)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9155:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "EmitStatement",
												"src": "9150:58:4"
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "8093:147:4",
										"text": " @dev Withdraw from a staking class.\n Requirements:\n - Msg.sender should have an active deposit in the class."
									},
									"functionSelector": "927e5998",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawLevel0",
									"nameLocation": "8254:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "8278:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "8270:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8270:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8269:17:4"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8295:0:4"
									},
									"scope": 1349,
									"src": "8245:970:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "9423:906:4",
										"statements": [
											{
												"assignments": [
													1084
												],
												"declarations": [
													{
														"constant": false,
														"id": 1084,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "9441:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1183,
														"src": "9433:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1083,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9433:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1087,
												"initialValue": {
													"expression": {
														"id": 1085,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9454:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "9454:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9433:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1089,
																"name": "isLevel1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "9482:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1091,
															"indexExpression": {
																"id": 1090,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1084,
																"src": "9491:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9482:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206973206e6f74206f6e204c6576656c2031",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9504:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_591dc1182a2386b4749ced023bc81df809d47be83533f1ef6275681de1e04c04",
																"typeString": "literal_string \"User is not on Level 1\""
															},
															"value": "User is not on Level 1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_591dc1182a2386b4749ced023bc81df809d47be83533f1ef6275681de1e04c04",
																"typeString": "literal_string \"User is not on Level 1\""
															}
														],
														"id": 1088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9474:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9474:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "9474:55:4"
											},
											{
												"assignments": [
													1096
												],
												"declarations": [
													{
														"constant": false,
														"id": 1096,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "9548:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1183,
														"src": "9540:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1095,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9540:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1101,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1097,
															"name": "level1Balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "9558:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																"typeString": "mapping(address => struct mochiStaking._user storage ref)"
															}
														},
														"id": 1099,
														"indexExpression": {
															"id": 1098,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "9572:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9558:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$361_storage",
															"typeString": "struct mochiStaking._user storage ref"
														}
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 356,
													"src": "9558:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9540:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1103,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "9609:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1104,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1080,
																"src": "9620:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9609:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e636520746f207769746864726177",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9629:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															},
															"value": "Not enough balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															}
														],
														"id": 1102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9601:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9601:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "9601:61:4"
											},
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "_isOnTime",
														"nameLocation": "9678:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1183,
														"src": "9673:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1109,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9673:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1115,
												"initialValue": {
													"arguments": [
														{
															"id": 1112,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "9699:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9711:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1111,
														"name": "isOnTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "9690:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (address,uint8) view returns (bool)"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9690:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9673:40:4"
											},
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "earnings",
														"nameLocation": "9731:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1183,
														"src": "9723:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9723:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1123,
												"initialValue": {
													"arguments": [
														{
															"id": 1119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "9754:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9766:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"id": 1121,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "9769:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1118,
														"name": "getInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "9742:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint8,uint256) view returns (uint256)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9742:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9723:54:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1124,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "9791:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1125,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "9802:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9791:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1146,
													"nodeType": "Block",
													"src": "9921:69:4",
													"statements": [
														{
															"expression": {
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1139,
																			"name": "level1Balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 430,
																			"src": "9935:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																				"typeString": "mapping(address => struct mochiStaking._user storage ref)"
																			}
																		},
																		"id": 1141,
																		"indexExpression": {
																			"id": 1140,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1084,
																			"src": "9949:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9935:25:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$__user_$361_storage",
																			"typeString": "struct mochiStaking._user storage ref"
																		}
																	},
																	"id": 1142,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 356,
																	"src": "9935:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1143,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "9972:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9935:44:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1145,
															"nodeType": "ExpressionStatement",
															"src": "9935:44:4"
														}
													]
												},
												"id": 1147,
												"nodeType": "IfStatement",
												"src": "9788:202:4",
												"trueBody": {
													"id": 1138,
													"nodeType": "Block",
													"src": "9810:105:4",
													"statements": [
														{
															"expression": {
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "9824:32:4",
																"subExpression": {
																	"baseExpression": {
																		"id": 1127,
																		"name": "level1Balance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "9831:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																			"typeString": "mapping(address => struct mochiStaking._user storage ref)"
																		}
																	},
																	"id": 1129,
																	"indexExpression": {
																		"id": 1128,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "9845:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9831:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$__user_$361_storage",
																		"typeString": "struct mochiStaking._user storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1131,
															"nodeType": "ExpressionStatement",
															"src": "9824:32:4"
														},
														{
															"expression": {
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1132,
																		"name": "isLevel1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "9876:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1134,
																	"indexExpression": {
																		"id": 1133,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "9885:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9876:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9899:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "9876:28:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1137,
															"nodeType": "ExpressionStatement",
															"src": "9876:28:4"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1148,
													"name": "_isOnTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1110,
													"src": "10003:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1173,
													"nodeType": "Block",
													"src": "10140:114:4",
													"statements": [
														{
															"expression": {
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1162,
																	"name": "earnings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1117,
																	"src": "10154:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10165:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "10154:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1165,
															"nodeType": "ExpressionStatement",
															"src": "10154:12:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1169,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "10212:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1170,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "10224:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1166,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "10189:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1168,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "10189:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10189:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1172,
															"nodeType": "ExpressionStatement",
															"src": "10189:43:4"
														}
													]
												},
												"id": 1174,
												"nodeType": "IfStatement",
												"src": "10000:254:4",
												"trueBody": {
													"id": 1161,
													"nodeType": "Block",
													"src": "10013:121:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1152,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "10050:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1153,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "10062:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1149,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "10027:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "10027:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10027:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1155,
															"nodeType": "ExpressionStatement",
															"src": "10027:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1157,
																		"name": "earnings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "10102:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1158,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1084,
																		"src": "10112:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1156,
																	"name": "swapTokensForEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "10085:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:38:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1160,
															"nodeType": "ExpressionStatement",
															"src": "10085:38:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "10278:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10290:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"id": 1178,
															"name": "_isOnTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "10293:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1179,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "10304:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1180,
															"name": "earnings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "10313:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1175,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "10269:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,bool,uint256,uint256)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10269:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "EmitStatement",
												"src": "10264:58:4"
											}
										]
									},
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "9221:147:4",
										"text": " @dev Withdraw from a staking class.\n Requirements:\n - Msg.sender should have an active deposit in the class."
									},
									"functionSelector": "bb664864",
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawLevel1",
									"nameLocation": "9382:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9406:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "9398:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9397:17:4"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9423:0:4"
									},
									"scope": 1349,
									"src": "9373:956:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "10534:889:4",
										"statements": [
											{
												"assignments": [
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "_msgSender",
														"nameLocation": "10552:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1290,
														"src": "10544:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1190,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10544:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1194,
												"initialValue": {
													"expression": {
														"id": 1192,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "10565:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "10565:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10544:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1196,
																"name": "isVip",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "10593:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1198,
															"indexExpression": {
																"id": 1197,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1191,
																"src": "10599:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10593:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55736572206973206e6f7420566970",
															"id": 1199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10612:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a7563a6a5744ba74585ebbf959f95f0839d04ae841bce20f759f432de3f6ca18",
																"typeString": "literal_string \"User is not Vip\""
															},
															"value": "User is not Vip"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a7563a6a5744ba74585ebbf959f95f0839d04ae841bce20f759f432de3f6ca18",
																"typeString": "literal_string \"User is not Vip\""
															}
														],
														"id": 1195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10585:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10585:45:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "10585:45:4"
											},
											{
												"assignments": [
													1203
												],
												"declarations": [
													{
														"constant": false,
														"id": 1203,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "10653:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1290,
														"src": "10645:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1202,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10645:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1208,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1204,
															"name": "vipBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "10663:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																"typeString": "mapping(address => struct mochiStaking._user storage ref)"
															}
														},
														"id": 1206,
														"indexExpression": {
															"id": 1205,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "10674:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10663:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$__user_$361_storage",
															"typeString": "struct mochiStaking._user storage ref"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 356,
													"src": "10663:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10645:48:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1210,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1203,
																"src": "10711:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1211,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1187,
																"src": "10722:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10711:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e636520746f207769746864726177",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10731:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															},
															"value": "Not enough balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															}
														],
														"id": 1209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10703:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10703:61:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "10703:61:4"
											},
											{
												"assignments": [
													1217
												],
												"declarations": [
													{
														"constant": false,
														"id": 1217,
														"mutability": "mutable",
														"name": "_isOnTime",
														"nameLocation": "10780:9:4",
														"nodeType": "VariableDeclaration",
														"scope": 1290,
														"src": "10775:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1216,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10775:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1222,
												"initialValue": {
													"arguments": [
														{
															"id": 1219,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "10801:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "32",
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10813:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1218,
														"name": "isOnTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "10792:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$returns$_t_bool_$",
															"typeString": "function (address,uint8) view returns (bool)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10792:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10775:40:4"
											},
											{
												"assignments": [
													1224
												],
												"declarations": [
													{
														"constant": false,
														"id": 1224,
														"mutability": "mutable",
														"name": "earnings",
														"nameLocation": "10833:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 1290,
														"src": "10825:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1223,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10825:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1230,
												"initialValue": {
													"arguments": [
														{
															"id": 1226,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "10856:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "32",
															"id": 1227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10868:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														{
															"id": 1228,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "10871:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1225,
														"name": "getInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "10844:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint8_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint8,uint256) view returns (uint256)"
														}
													},
													"id": 1229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10844:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10825:54:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1231,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "10893:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1232,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "10904:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10893:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1253,
													"nodeType": "Block",
													"src": "11016:66:4",
													"statements": [
														{
															"expression": {
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1246,
																			"name": "vipBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "11030:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																				"typeString": "mapping(address => struct mochiStaking._user storage ref)"
																			}
																		},
																		"id": 1248,
																		"indexExpression": {
																			"id": 1247,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1191,
																			"src": "11041:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "11030:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$__user_$361_storage",
																			"typeString": "struct mochiStaking._user storage ref"
																		}
																	},
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "balance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 356,
																	"src": "11030:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1250,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1187,
																	"src": "11064:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11030:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1252,
															"nodeType": "ExpressionStatement",
															"src": "11030:41:4"
														}
													]
												},
												"id": 1254,
												"nodeType": "IfStatement",
												"src": "10890:192:4",
												"trueBody": {
													"id": 1245,
													"nodeType": "Block",
													"src": "10912:98:4",
													"statements": [
														{
															"expression": {
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "10926:29:4",
																"subExpression": {
																	"baseExpression": {
																		"id": 1234,
																		"name": "vipBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 439,
																		"src": "10933:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$__user_$361_storage_$",
																			"typeString": "mapping(address => struct mochiStaking._user storage ref)"
																		}
																	},
																	"id": 1236,
																	"indexExpression": {
																		"id": 1235,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "10944:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10933:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$__user_$361_storage",
																		"typeString": "struct mochiStaking._user storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1238,
															"nodeType": "ExpressionStatement",
															"src": "10926:29:4"
														},
														{
															"expression": {
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1239,
																		"name": "isVip",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "10974:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1241,
																	"indexExpression": {
																		"id": 1240,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "10980:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10974:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 1242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10994:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "10974:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1244,
															"nodeType": "ExpressionStatement",
															"src": "10974:25:4"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1255,
													"name": "_isOnTime",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1217,
													"src": "11095:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1280,
													"nodeType": "Block",
													"src": "11232:116:4",
													"statements": [
														{
															"expression": {
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1269,
																	"name": "earnings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "11246:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11257:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11246:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1272,
															"nodeType": "ExpressionStatement",
															"src": "11246:12:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1276,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "11306:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1277,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "11318:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1273,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "11283:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1275,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "11283:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11283:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1279,
															"nodeType": "ExpressionStatement",
															"src": "11283:43:4"
														}
													]
												},
												"id": 1281,
												"nodeType": "IfStatement",
												"src": "11092:256:4",
												"trueBody": {
													"id": 1268,
													"nodeType": "Block",
													"src": "11105:121:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1259,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "11142:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1260,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "11154:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1256,
																		"name": "acceptedToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "11119:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$274",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 223,
																	"src": "11119:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11119:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1262,
															"nodeType": "ExpressionStatement",
															"src": "11119:43:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1264,
																		"name": "earnings",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1224,
																		"src": "11194:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1265,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1191,
																		"src": "11204:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1263,
																	"name": "swapTokensForEth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "11177:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11177:38:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1267,
															"nodeType": "ExpressionStatement",
															"src": "11177:38:4"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1283,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "11372:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "32",
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11384:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														{
															"id": 1285,
															"name": "_isOnTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1217,
															"src": "11387:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1286,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "11398:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1287,
															"name": "earnings",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1224,
															"src": "11407:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1282,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "11363:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint8_$_t_bool_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint8,bool,uint256,uint256)"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11363:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "EmitStatement",
												"src": "11358:58:4"
											}
										]
									},
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "10335:147:4",
										"text": " @dev Withdraw from a staking class.\n Requirements:\n - Msg.sender should have an active deposit in the class."
									},
									"functionSelector": "6636389e",
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawVip",
									"nameLocation": "10496:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "10509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10508:17:4"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10534:0:4"
									},
									"scope": 1349,
									"src": "10487:936:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "11505:521:4",
										"statements": [
											{
												"assignments": [
													1302
												],
												"declarations": [
													{
														"constant": false,
														"id": 1302,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "11591:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 1347,
														"src": "11574:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1300,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11574:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1301,
															"nodeType": "ArrayTypeName",
															"src": "11574:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1308,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11612:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "11598:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1303,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11602:7:4",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1304,
															"nodeType": "ArrayTypeName",
															"src": "11602:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11598:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11574:40:4"
											},
											{
												"expression": {
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1309,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "11624:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1311,
														"indexExpression": {
															"hexValue": "30",
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11629:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1314,
																"name": "acceptedToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "11642:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$274",
																	"typeString": "contract IERC20"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$274",
																	"typeString": "contract IERC20"
																}
															],
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11634:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1312,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11634:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11634:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11624:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "11624:32:4"
											},
											{
												"expression": {
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1318,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "11666:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1320,
														"indexExpression": {
															"hexValue": "31",
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11671:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11666:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1321,
																"name": "uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "11676:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IDexRouter_$347",
																	"typeString": "contract IDexRouter"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "WETH",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 311,
															"src": "11676:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																"typeString": "function () pure external returns (address)"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11676:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11666:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "11666:32:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1331,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "11739:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IDexRouter_$347",
																		"typeString": "contract IDexRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IDexRouter_$347",
																		"typeString": "contract IDexRouter"
																	}
																],
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11731:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1329,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11731:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11731:24:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1333,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "11757:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1326,
															"name": "acceptedToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "11709:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$274",
																"typeString": "contract IERC20"
															}
														},
														"id": 1328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 243,
														"src": "11709:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11709:60:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1335,
												"nodeType": "ExpressionStatement",
												"src": "11709:60:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1339,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1293,
															"src": "11885:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11910:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1341,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "11953:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 1342,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "11971:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1343,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "11994:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "11994:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1336,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "11805:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IDexRouter_$347",
																"typeString": "contract IDexRouter"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swapExactTokensForETHSupportingFeeOnTransferTokens",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 325,
														"src": "11805:66:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11805:214:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1346,
												"nodeType": "ExpressionStatement",
												"src": "11805:214:4"
											}
										]
									},
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForEth",
									"nameLocation": "11440:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "11465:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "11457:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11457:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "11486:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "11478:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11478:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11456:40:4"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11505:0:4"
									},
									"scope": 1349,
									"src": "11431:595:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1350,
							"src": "930:11098:4",
							"usedErrors": []
						}
					],
					"src": "32:11996:4"
				},
				"id": 4
			}
		}
	}
}